{"version":3,"sources":["winwheel/winwheel.js","routes/route-names.enum.ts","assets/svg/settings.svg","hooks/useAppSelector.ts","components/UI/ProfileTitle/ProfileTitle.tsx","store/reducers/auth/types.ts","components/UI/TransparentButton/TransparentButton.tsx","api/index.ts","store/reducers/loading-page/types.ts","services/auth.service.ts","services/club.service.ts","store/reducers/loading-page/action-creators.ts","store/reducers/theme/types.ts","store/reducers/theme/action-creators.ts","store/reducers/notifications/types.ts","store/reducers/auth/action-creators.ts","store/reducers/notifications/action-creators.ts","store/reducers/modal/types.ts","store/reducers/modal/action-creators.ts","store/reducers/loading-tab/types.ts","store/reducers/loading-tab/action-creators.ts","store/reducers/loading-modal/types.ts","store/reducers/loading-modal/action-creators.ts","store/reducers/loading-post/types.ts","store/reducers/loading-post/action-creators.ts","store/reducers/bubble/types.ts","store/reducers/bubble/action-creators.ts","store/reducers/action-creators.ts","hooks/useActions.ts","components/UI/InputText/InputText.tsx","components/UI/SubmitButton/SubmitButton.tsx","components/UI/InputColor/InputColor.tsx","components/UI/EmojiButton/EmojiButton.tsx","hooks/useLoadingMethods.ts","hooks/useRequest.ts","components/Pages/UserSettings/UserSettings.tsx","services/user.service.ts","components/Containers/UserSettingsInfo/UserSettingsInfoForm/useUserSettingsInfoForm.ts","components/Containers/UserSettingsInfo/UserSettingsInfoForm/UserSettingsInfoForm.tsx","components/Containers/UserSettingsInfo/useUserSettingsInfo.ts","components/UI/loader/Loader.tsx","components/UI/PageLoader/PageLoader.tsx","components/Containers/UserSettingsInfo/UserSettingsInfo.tsx","components/Containers/UserSettingsAccount/UserSettingsAccountEmail/UserSettingsAccountEmail.tsx","constants/auth-data-length.ts","components/Containers/UserSettingsAccount/UserSettingsAccountPasswordForm/UserSettingsPasswordForm.tsx","components/Containers/UserSettingsAccount/useUserSettingsAccount.ts","components/Containers/UserSettingsAccount/UserSettingsAccount.tsx","components/UI/SettingsTabButton/SettingsTabButton.tsx","components/Containers/UserProfileHeader/UserHeaderButtons/UserHeaderButtons.tsx","components/Containers/CreateClubForm/CreateClubForm.tsx","components/Containers/UserProfileHeader/UserHeaderClub/UserHeaderClub.tsx","components/UI/Avatar/Avatar.tsx","components/Containers/UserProfileHeader/useUserProfileHeader.ts","components/Containers/UserProfileHeader/UserProfileHeader.tsx","components/UI/ProfileTabs/TabButton/TabButton.tsx","components/UI/ProfileTabs/ProfileTabs.tsx","components/Pages/UserProfilePage/UserProfilePage.tsx","assets/svg/navbar-logout.svg","components/Containers/LoginForm/LoginForm.tsx","components/Pages/LoginPage/LoginPage.tsx","components/Containers/RegisterForm/useRegisterForm.ts","components/Containers/RegisterForm/RegisterForm.tsx","components/Pages/RegisterPage/RegisterPage.tsx","components/AppRouter/RemoveTrailingSlash.tsx","assets/svg/navbar-sun.svg","components/Containers/Navbar/LogoutButton/LogoutButton.tsx","assets/svg/navbar-moon.svg","assets/svg/navbar_profile.svg","components/Containers/Navbar/ThemeSwitch/useThemeSwitch.ts","components/Containers/Navbar/ThemeSwitch/ThemeSwitch.tsx","assets/svg/navbar-club.svg","assets/svg/navbar-book.svg","assets/svg/wheel.svg","components/Containers/Navbar/NavbarMainButton/NavbarMainButton.tsx","components/Containers/Navbar/NavbarBubble/NavbarBubble.tsx","components/Containers/Navbar/NavbarBubbleButton/NavbarBubbleButton.tsx","components/Containers/Navbar/Navbar.tsx","components/UI/MainButton/MainButton.tsx","components/UI/BookDataView/BookDataView.tsx","services/book.service.ts","components/Containers/RandomBookContainer/useRandomBookContainer.ts","components/Containers/RandomBookContainer/RandomBookContainer.tsx","components/Containers/RandomBookPlaceholder/RandomBookPlaceholder.tsx","components/Pages/RandomBookPage/RandomBookPage.tsx","assets/svg/leave-club.svg","assets/svg/join-club.svg","assets/svg/delete.svg","components/UI/InputTextarea/InputTextarea.tsx","components/UI/InputSelect/InputSelect.tsx","components/Containers/ClubSettingsForm/useClubSettingsForm.ts","components/Containers/ClubSettingsForm/ClubSettingsForm.tsx","components/Pages/ClubSettingsPage/ClubSettingsPage.tsx","components/Containers/ClubProfileHeader/ClubProfileHeaderButtons/ClubProfileHeaderButtons.tsx","components/Containers/ClubProfileHeader/ClubHeaderBook/ClubHeaderBook.tsx","components/Containers/ClubProfileHeader/ClubHeaderMaster/ClubHeaderMaster.tsx","components/Containers/ClubProfileHeader/ClubHeaderMeeting/ClubHeaderMeeting.tsx","components/Containers/ClubProfileHeader/useClubProfileHeader.ts","components/Containers/ClubProfileHeader/ClubProfileHeader.tsx","components/Pages/ClubProfilePage/ClubProfilePage.tsx","components/UI/BookCard/BookCard.tsx","components/Containers/UserProfileBooks/useUserProfileBooks.ts","hooks/useInfiniteScroll.ts","components/Containers/UserProfileBooks/UserProfileBooks.tsx","assets/svg/details.svg","components/Containers/BookDataContainer/useBookDataContainer.ts","components/Containers/BookDataContainer/BookDataContainer.tsx","assets/svg/dropdown.svg","components/UI/ClubBooksCard/ClubBooksCardFooter/ClubBooksCardFooter.tsx","components/Containers/WheelContainer/hooks/useWheelStages.ts","components/UI/ClubBooksCard/ClubBooksCardHeader/ClubBooksCardHeader.tsx","components/UI/ClubBooksCard/ClubBooksCard.tsx","components/Containers/ClubProfileBooks/useClubProfileBooks.ts","components/Containers/ClubProfileBooks/ClubProfileBooks.tsx","components/Containers/WheelContainer/helpers/shuffleWheelSegments.ts","components/Containers/WheelContainer/helpers/removeSegment.ts","components/Containers/WheelContainer/helpers/determineTextColor.ts","components/Containers/WheelContainer/helpers/createWheelSegments.ts","components/Containers/WheelContainer/hooks/useWheelSegments.ts","components/Containers/WheelContainer/helpers/findWinnerInfoBySegment.ts","components/Containers/WheelContainer/hooks/useWheelWinner.ts","components/Containers/WheelContainer/hooks/useWheelRollsHistory.ts","assets/svg/triangle.svg","components/Containers/WheelContainer/hooks/useWheelContainer.ts","components/UI/WinWheel/WinWheel.tsx","components/Containers/WheelContainer/WheelContainerBookData/WheelContainerBookData.tsx","components/Containers/WheelContainer/WheelContainerInfo/WheelContainerInfo.tsx","components/Containers/WheelContainer/WheelContainerControls/WheelContainerControls.tsx","components/Containers/WheelContainer/helpers/countSpinsNumber.ts","components/Containers/WheelContainer/helpers/countTextSize.ts","components/Containers/WheelContainer/hooks/useWheelSettings.ts","components/Containers/WheelHistory/useWheelHistory.ts","components/Containers/WheelHistory/WheelHistory.tsx","hooks/useDimensions.ts","components/Containers/WheelContainer/WheelContainer.tsx","assets/svg/back.svg","components/Containers/WheelPageClubBooks/WheelPageClubBooks.tsx","components/Pages/WheelPage/useWheelPage.ts","assets/svg/close.svg","components/Pages/WheelPage/WheelPage.tsx","components/Containers/UserProfileReviews/UserProfileReviews.tsx","components/Containers/ClubProfileHistory/useClubProfileHistory.ts","components/Containers/ClubProfileHistory/ClubProfileHistory.tsx","components/Containers/ClubProfileMembers/useClubProfileMembers.ts","components/UI/MemberCard/MemberCard.tsx","components/Containers/ClubProfileMembers/ClubProfileMembers.tsx","components/Containers/ClubProfileRules/useClubProfileRules.ts","components/Containers/ClubProfileRules/ClubProfileRules.tsx","components/Containers/ClubProfileReviews/ClubProfileReviews.tsx","components/Containers/Bubble/Bubble.tsx","components/AppRouter/AppRouter.tsx","components/UI/Notification/Notification.tsx","components/Containers/NotificationsContainer/NotificationsContainer.tsx","components/Containers/Modal/Modal.tsx","App.tsx","store/reducers/auth/index.ts","store/reducers/notifications/index.ts","store/reducers/theme/index.ts","store/reducers/modal/index.ts","store/reducers/loading-tab/index.ts","store/reducers/loading-page/index.ts","store/reducers/loading-post/index.ts","store/reducers/bubble/index.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["Winwheel","options","drawWheel","defaultOptions","canvasId","centerX","centerY","outerRadius","innerRadius","numSegments","drawMode","rotationAngle","textFontFamily","textFontSize","textFontWeight","textOrientation","textAlignment","textDirection","textMargin","textFillStyle","textStrokeStyle","textLineWidth","fillStyle","strokeStyle","lineWidth","clearTheCanvas","imageOverlay","drawText","pointerAngle","wheelImage","imageDirection","key","this","canvas","document","getElementById","width","height","ctx","getContext","cavnas","segments","Array","x","Segment","updateSegmentSizes","animation","Animation","pins","Pin","pointerGuide","PointerGuide","draw","winwheelToDrawDuringAnimation","winhweelAlreadyDrawn","y","image","imgData","Image","onload","winwheelLoadedImage","src","arcUsed","numSet","size","arcLeft","degreesEach","currentDegree","startAngle","endAngle","clearRect","clearCanvas","drawWheelImage","drawSegmentText","drawSegments","drawSegmentImages","visible","drawPins","display","drawPointerGuide","number","pinSpacing","i","save","translate","rotate","degToRad","beginPath","arc","margin","Math","PI","fill","stroke","restore","moveTo","lineTo","imageLeft","imageTop","drawImage","seg","imageAngle","console","log","fontFamily","fontSize","fontWeight","orientation","alignment","direction","fontSetting","text","font","lines","split","lineOffset","length","textAlign","textBaseline","textAngle","fillText","strokeText","yPos","yInc","c","character","charAt","centerAdjustment","radius","anglePerChar","drawAngle","totalArc","d","position","segmentPos","newSegment","undefined","bbox","getBoundingClientRect","floor","left","top","foundSegment","segmentNumber","getSegmentNumberAt","topBottom","leftRight","adjacentSideLength","oppositeSideLength","hypotenuseSideLength","loc","windowToCanvas","tanVal","result","atan","locationAngle","sqrt","round","getRotationPosition","abs","foundSegmentNumber","prizeNumber","getIndicatedSegmentNumber","indicatedPrize","rawAngle","relativeAngle","currentPin","totalPinAngle","ceil","computeAnimation","properties","propertyName","propertyValue","yoyo","repeat","easing","winwheelAnimationLoop","winwheelStopAnimation","duration","tween","gsap","to","canCallback","kill","pause","play","type","spins","stopAngle","_stopAngle","random","range","callbackFinished","callbackBefore","callbackAfter","callbackSound","soundTrigger","value","winwheelPercentToDegrees","percentValue","degrees","eval","winwheelTriggerSound","hasOwnProperty","_lastSoundTriggerNumber","currentTriggerNumber","getCurrentPinNumber","callback","getIndicatedSegment","winwheelImageLoadCount","RouteNames","_path","useAppSelector","useSelector","ProfileTitle","title","className","_extends","Object","assign","target","arguments","source","prototype","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSettings","_ref","svgRef","titleId","props","viewBox","xmlns","ref","id","AuthActionEnum","ForwardRef","TransparentButton","children","rest","API_URL","process","currentUserUrl","JSON","parse","localStorage","getItem","url","setUserUrl","$api","axios","create","withCredentials","baseURL","interceptors","response","use","config","error","a","originalRequest","status","_isRetry","post","userUrl","defaults","headers","common","Authorization","request","LoadingPageEnum","authService","login","email","password","AUTH_PREFIX","logout","get","register","username","CLUB_PREFIX","ClubService","getClubProfileInfo","clubUrl","createClub","clubname","joinClub","leaveClub","getClubBooks","deleteClubBook","index","getSettingsInfo","updateSettings","masterUrl","rules","confirmBook","book","getChosenBooksHistory","getClubMembers","getClubRules","ThemeActionEnum","LoadingPageActionCreators","setLoadingPageTrue","SET_LOADING_PAGE_TRUE","payload","setLoadingPageFalse","SET_LOADING_PAGE_FALSE","NotificationsActionsEnum","ThemeActionCreators","setTheme","SET_THEME","AuthActionCreators","setIsAuth","auth","SET_IS_AUTH","setUserData","userData","SET_USER_DATA","dispatch","AuthService","setItem","stringify","data","removeItem","body","classList","remove","ModalActionEnum","NotificationsActionCreators","setNotification","notification","SET_NOTIFICATION","deleteNotification","deleteTime","DELETE_NOTIFICATION","addNotification","message","notificationType","Date","now","setTimeout","LoadingTabEnum","ModalActionCreators","showModal","component","SHOW_MODAL","closeModal","CLOSE_MODAL","LoadingModalEnum","LoadingTabActionCreators","setLoadingTabTrue","SET_LOADING_TAB_TRUE","setLoadingTabFalse","SET_LOADING_TAB_FALSE","LoadingPostEnum","LoadingModalActionCreators","setLoadingModalTrue","SET_LOADING_MODAL_TRUE","setLoadingModalFalse","SET_LOADING_MODAL_FALSE","BubbleActionEnum","LoadingPostActionCreators","setLoadingPostTrue","SET_LOADING_POST_TRUE","setLoadingPostFalse","SET_LOADING_POST_FALSE","BubbleActionCreators","showBubble","reactComponent","wrapperClass","SHOW_BUBBLE","closeBubble","CLOSE_BUBBLE","allActionCreators","useActions","useDispatch","bindActionCreators","InputText","forwardRef","SubmitButton","InputColor","classString","EmojiButton","emoji","setEmoji","currentTheme","state","theme","themeStyle","useState","isShowPicker","setIsShowPicker","pickerOptions","native","onSelect","exclude","showPreview","showSkinTones","color","perLine","onClick","useLoadingMethods","methodTrue","methodFalse","useRequest","SettingsTabs","loading","args","USER_PREFIX","UserService","getUserProfileInfo","getUserBooks","page","deleteBook","updateInfo","getAccountInfo","updatePassword","oldPassword","newPassword","useUserSettingsInfoForm","chosenEmoji","setChosenEmoji","UserSettingsInfoForm","useForm","control","handleSubmit","errors","formState","onSubmit","htmlFor","name","defaultValue","required","render","field","useUserSettingsInfo","userInfo","setUserInfo","isLoaded","setIsLoaded","fetchInfo","useEffect","Loader","PageLoader","UserSettingsInfo","UserSettingsAccountEmail","authDataLength","EMAIL_MAX_LENGTH","PASSWORD_MIN_LENGTH","USERNAME_MAX_LENGTH","USERNAME_MIN_LENGTH","CLUBNAME_MAX_LENGTH","CLUBNAME_MIN_LENGTH","UserSettingsPasswordForm","getValues","resetField","minLength","placeholder","validate","newPasswordRepeat","useUserSettingsAccount","accountInfo","setAccountInfo","fetchAccountData","UserSettingsAccount","SettingsTabButton","UserSettings","path","useLocation","pathname","substring","lastIndexOf","INFO","currentTab","setCurrentTab","settingsTabs","ACCOUNT","map","tab","UserHeaderButtons","isCurrentUser","CreateClubForm","maxLength","UserHeaderClub","UserHeaderAvatar","avatarStyles","backgroundColor","style","useUserProfileHeader","authUserData","UserProfileHeader","Helmet","Avatar","TabButton","match","useMatch","counter","ProfileTabs","tabsData","loadingTab","isLoadingTab","UserProfilePage","location","useParams","userProfileTabs","USER_PROFILE_BASE","USER_PROFILE_BOOKS","USER_PROFILE_REVIEWS","some","context","replace","LoginForm","LoginPage","REGISTER","useRegisterForm","navigate","useNavigate","fetchRegister","AuthServices","LOGIN","RegisterForm","passwordRepeat","RegisterPage","RemoveTrailingSlash","search","SvgNavbarLogout","LogoutButton","SvgNavbarSun","SvgNavbarMoon","useThemeSwitch","add","switchTheme","newTheme","toggle","ThemeSwitch","SvgNavbarProfile","SvgNavbarClub","SvgNavbarBook","NavbarMainButton","disabled","isActive","includes","NavbarBubble","userEmoji","NavbarBubbleButton","isBubbleOpened","bubble","isShow","Navbar","club","CLUB_PROFILE_BASE","RANDOM_BOOK","MainButton","BookDataView","cover","coverSrc","setCoverSrc","readlyHref","alt","authors","join","genres","year","description","BOOK_PREFIX","BookService","getRandomBook","bookData","getBookData","bookId","useRandomBookContainer","setBookData","isLoading","loadingPage","isLoadingPage","getBook","RandomBookContainer","RandomBookPlaceholder","handleClick","RandomBookPage","isBook","setIsBook","SvgWheel","SvgLeaveClub","SvgJoinClub","InputTextarea","InputSelect","useClubSettingsForm","sendSettingsData","ClubSettingsForm","clubSettingsInfo","members","master","member","ClubSettingsPage","clubInfo","setClubInfo","getClubSettingsInfo","ClubProfileHeaderButtons","isInClub","isMaster","userClub","ClubHeaderBook","ClubHeaderMaster","ClubHeaderMeeting","meetingNumber","useClubProfileHeader","setIsMaster","bookToRead","ClubProfileHeader","ClubProfilePage","clubProfileTabs","CLUB_PROFILE_RULES","CLUB_PROFILE_MEMBERS","CLUB_PROFILE_BOOKS","CLUB_PROFILE_REVIEWS","CLUB_PROFILE_HISTORY","useClubProfileContext","useOutletContext","SvgDelete","BookCard","isClubHistory","isOwner","handleDelete","useUserProfileBooks","booksArray","setBooksArray","isOut","setIsOut","lastElement","setLastElement","pageNum","setPageNum","containerRef","useCallback","node","observer","IntersectionObserver","entries","isIntersecting","num","threshold","observe","unobserve","useInfiniteScroll","makeNewBooksArray","oldArray","newArray","listLength","all","fetchBooksArray","parseInt","fetchDeleteBook","copyOfBooksArray","splice","pageNumOfDeletedBook","countPageNumOfIndex","arrayOfAdditionalBooks","filter","additionalBook","bookInArray","chunkSize","UserProfileBooks","handleDeleteBook","useBookDataContainer","BookDataContainer","SvgDetails","ClubBooksCardFooter","books","user","booksKey","isDisabled","SvgDropdown","fillRule","WheelStages","ClubBooksCardHeader","toggleOpen","ClubBooksCard","isOpen","setIsOpen","useClubProfileBooks","booksData","setBooksData","fetchBooksData","userIndex","tempArray","findIndex","entry","ClubProfileBooks","shuffleWheelSegments","wheelSegments","j","removeSegment","winnerSegment","wheelSegment","determineTextColor","hex","rgb","createWheelSegments","clubBooks","item","push","useWheelSegments","recountTextSize","setWheelSegments","shuffledWheelSegments","createStartingSegments","shuffleSegments","removeWinnerSegment","segment","findWinnerInfoBySegment","indexUser","indexBook","useWheelWinner","displayWinner","isFinish","addToHistory","winnerInfo","setWinnerInfo","trueWinnerInfo","setWinner","useWheelRollsHistory","wheelRollsHistory","setWheelRollsHistory","winner","tempArr","useWheelStages","isStart","setIsStart","isRoll","setIsRoll","setIsFinish","setStage","stageName","START","ROLL","FINISH","useWheelContainer","handeSetSpinsNumber","handleSetBooksKey","rollCount","setRollCount","wheelStages","wheelWinner","handleWinner","hookData","startRoll","WinWheel","sizeOptions","textOptions","animationOptions","renderOptions","startAnimation","canvasWidth","canvasHeight","WheelContainerBookData","WheelContainerInfo","WheelContainerControls","handleSetTime","onChange","countSpinsNumber","spinTime","divider","minNumber","maxNumber","countTextSize","segmentsNumber","pow","useWheelSettings","setSpinTime","spinsNumber","setSpinsNumber","textSize","setTextSize","event","currentTarget","intValue","newTextSize","useWheelHistory","rollsHistory","WheelHistory","SvgTriangle","getWindowDimensions","window","innerWidth","innerHeight","WheelContainer","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","wheelAnimationOptions","WheelPageClubBooks","useWheelPage","setClubBooks","setBooksKey","bookIndex","rollsCount","toString","SvgBack","_path2","WheelPage","UserProfileReviews","useClubProfileHistory","chosenBooksHistory","setChosenBooksHistory","fetchHistory","ClubProfileHistory","useClubProfileMembers","usersInfo","setUsersInfo","fetchMembers","MemberCard","ClubProfileMembers","useClubProfileRules","clubRules","setClubRules","fetchClubRules","ClubProfileRules","ClubProfileReviews","Bubble","AppRouter","isAuth","cutPath","autoHide","renderView","USER_PROFILE","element","CLUB_PROFILE","CLUB_WHEEL","Notification","NotificationsContainer","notifications","SvgClose","Modal","modal","renderThumbVertical","renderThumbHorizontal","e","stopPropagation","App","initialState","localStorageThemeStyle","loadingPageReducer","action","isLoadingPost","reducers","loadingModal","loadingPost","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM"],"mappings":"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","file":"static/js/main.450b5963.chunk.js","sourcesContent":["import {gsap} from 'gsap'\r\n\r\nexport class Winwheel {\r\n  constructor(options, drawWheel) {\r\n    var defaultOptions = {\r\n      canvasId: 'canvas', // Id of the canvas which the wheel is to draw on to.\r\n      centerX: null, // X position of the center of the wheel. The default of these are null which means will be placed in center of the canvas.\r\n      centerY: null, // Y position of the wheel center. If left null at time of construct the center of the canvas is used.\r\n      outerRadius: null, // The radius of the outside of the wheel. If left null it will be set to the radius from the center of the canvas to its shortest side.\r\n      innerRadius: 0, // Normally 0. Allows the creation of rings / doughnuts if set to value > 0. Should not exceed outer radius.\r\n      numSegments: 1, // The number of segments. Need at least one to draw.\r\n      drawMode: 'code', // The draw mode. Possible values are 'code', 'image', 'segmentImage'. Default is code which means segments are drawn using canvas arc() function.\r\n      rotationAngle: 0, // The angle of rotation of the wheel - 0 is 12 o'clock position.\r\n      textFontFamily: 'sans-serif', // Segment text font, you should use web safe fonts.\r\n      textFontSize: 13, // Size of the segment text.\r\n      textFontWeight: 'bold', // Font weight.\r\n      textOrientation: 'horizontal', // Either horizontal, vertical, or curved.\r\n      textAlignment: 'center', // Either center, inner, or outer.\r\n      textDirection: 'normal', // Either normal or reversed. In normal mode for horizontal text in segment at 3 o'clock is correct way up, in reversed text at 9 o'clock segment is correct way up.\r\n      textMargin: null, // Margin between the inner or outer of the wheel (depends on textAlignment).\r\n      textFillStyle: 'black', // This is basically the text colour.\r\n      textStrokeStyle: null, // Basically the line colour for segment text, only looks good for large text so off by default.\r\n      textLineWidth: 1, // Width of the lines around the text. Even though this defaults to 1, a line is only drawn if textStrokeStyle specified.\r\n      fillStyle: 'silver', // The segment background colour.\r\n      strokeStyle: null, // Segment line colour. Again segment lines only drawn if this is specified.\r\n      lineWidth: 1, // Width of lines around segments.\r\n      clearTheCanvas: true, // When set to true the canvas will be cleared before the wheel is drawn.\r\n      imageOverlay: false, // If set to true in image drawing mode the outline of the segments will be displayed over the image. Does nothing in code drawMode.\r\n      drawText: true, // By default the text of the segments is rendered in code drawMode and not in image drawMode.\r\n      pointerAngle: 0, // Location of the pointer that indicates the prize when wheel has stopped. Default is 0 so the (corrected) 12 o'clock position.\r\n      wheelImage: null, // Must be set to image data in order to use image to draw the wheel - drawMode must also be 'image'.\r\n      imageDirection: 'N', // Used when drawMode is segmentImage. Default is north, can also be (E)ast, (S)outh, (W)est.\r\n    }\r\n    \r\n    // -----------------------------------------\r\n    // Loop through the default options and create properties of this class set to the value for the option passed in\r\n    // or if not value for the option was passed in then to the default.\r\n    for (var key in defaultOptions) {\r\n      if (options != null && typeof options[key] !== 'undefined') {\r\n        this[key] = options[key]\r\n      } else {\r\n        this[key] = defaultOptions[key]\r\n      }\r\n    }\r\n    \r\n    // Also loop though the passed in options and add anything specified not part of the class in to it as a property.\r\n    if (options != null) {\r\n      for (let key in options) {\r\n        if (typeof this[key] === 'undefined') {\r\n          this[key] = options[key]\r\n        }\r\n      }\r\n    }\r\n    \r\n    // ------------------------------------------\r\n    // If the id of the canvas is set, try to get the canvas as we need it for drawing.\r\n    if (this.canvasId) {\r\n      this.canvas = document.getElementById(this.canvasId)\r\n      \r\n      if (this.canvas) {\r\n        // If the centerX and centerY have not been specified in the options then default to center of the canvas\r\n        // and make the outerRadius half of the canvas width - this means the wheel will fill the canvas.\r\n        if (this.centerX == null) {\r\n          this.centerX = this.canvas.width / 2\r\n        }\r\n        \r\n        if (this.centerY == null) {\r\n          this.centerY = this.canvas.height / 2\r\n        }\r\n        \r\n        if (this.outerRadius == null) {\r\n          // Need to set to half the width of the shortest dimension of the canvas as the canvas may not be square.\r\n          // Minus the line segment line width otherwise the lines around the segments on the top,left,bottom,right\r\n          // side are chopped by the edge of the canvas.\r\n          if (this.canvas.width < this.canvas.height) {\r\n            this.outerRadius = this.canvas.width / 2 - this.lineWidth\r\n          } else {\r\n            this.outerRadius = this.canvas.height / 2 - this.lineWidth\r\n          }\r\n        }\r\n        \r\n        // Also get a 2D context to the canvas as we need this to draw with.\r\n        this.ctx = this.canvas.getContext('2d')\r\n      } else {\r\n        this.canvas = null\r\n        this.ctx = null\r\n      }\r\n    } else {\r\n      this.cavnas = null\r\n      this.ctx = null\r\n    }\r\n    \r\n    // ------------------------------------------\r\n    // Add array of segments to the wheel, then populate with segments if number of segments is specified for this object.\r\n    this.segments = new Array(null)\r\n    \r\n    for (var x = 1; x <= this.numSegments; x++) {\r\n      // If options for the segments have been specified then create a segment sending these options so\r\n      // the specified values are used instead of the defaults.\r\n      if (options != null && options['segments'] && typeof options['segments'][x - 1] !== 'undefined') {\r\n        this.segments[x] = new Segment(options['segments'][x - 1])\r\n      } else {\r\n        this.segments[x] = new Segment()\r\n      }\r\n    }\r\n    \r\n    // ------------------------------------------\r\n    // Call function to update the segment sizes setting the starting and ending angles.\r\n    this.updateSegmentSizes()\r\n    \r\n    // If the text margin is null then set to same as font size as we want some by default.\r\n    if (this.textMargin === null) {\r\n      this.textMargin = this.textFontSize / 1.7\r\n    }\r\n    \r\n    // ------------------------------------------\r\n    // If the animation options have been passed in then create animation object as a property of this class\r\n    // and pass the options to it so the animation is set. Otherwise create default animation object.\r\n    if (options != null && options['animation'] && typeof options['animation'] !== 'undefined') {\r\n      this.animation = new Animation(options['animation'])\r\n    } else {\r\n      this.animation = new Animation()\r\n    }\r\n    \r\n    // ------------------------------------------\r\n    // If some pin options then create create a pin object and then pass them in.\r\n    if (options != null && options['pins'] && typeof options['pins'] !== 'undefined') {\r\n      this.pins = new Pin(options['pins'])\r\n    }\r\n    \r\n    // ------------------------------------------\r\n    // On that note, if the drawMode is image change some defaults provided a value has not been specified.\r\n    if (this.drawMode == 'image' || this.drawMode == 'segmentImage') {\r\n      // Remove grey fillStyle.\r\n      if (typeof options['fillStyle'] === 'undefined') {\r\n        this.fillStyle = null\r\n      }\r\n      \r\n      // Set strokeStyle to red.\r\n      if (typeof options['strokeStyle'] === 'undefined') {\r\n        this.strokeStyle = 'red'\r\n      }\r\n      \r\n      // Set drawText to false as we will assume any text is part of the image.\r\n      if (typeof options['drawText'] === 'undefined') {\r\n        this.drawText = false\r\n      }\r\n      \r\n      // Also set the lineWidth to 1 so that segment overlay will look correct.\r\n      if (typeof options['lineWidth'] === 'undefined') {\r\n        this.lineWidth = 1\r\n      }\r\n      \r\n      // Set drawWheel to false as normally the image needs to be loaded first.\r\n      if (typeof drawWheel === 'undefined') {\r\n        drawWheel = false\r\n      }\r\n    } else {\r\n      // When in code drawMode the default is the wheel will draw.\r\n      if (typeof drawWheel === 'undefined') {\r\n        drawWheel = true\r\n      }\r\n    }\r\n    \r\n    // Create pointer guide.\r\n    if (options != null && options['pointerGuide'] && typeof options['pointerGuide'] !== 'undefined') {\r\n      this.pointerGuide = new PointerGuide(options['pointerGuide'])\r\n    } else {\r\n      this.pointerGuide = new PointerGuide()\r\n    }\r\n    \r\n    // Finally if drawWheel is true then call function to render the wheel, segment text, overlay etc.\r\n    if (drawWheel == true) {\r\n      this.draw(this.clearTheCanvas)\r\n    } else if (this.drawMode == 'segmentImage') {\r\n      // If segment image then loop though all the segments and load the images for them setting a callback\r\n      // which will call the draw function of the wheel once all the images have been loaded.\r\n      winwheelToDrawDuringAnimation = this\r\n      winhweelAlreadyDrawn = false\r\n      \r\n      for (var y = 1; y <= this.numSegments; y++) {\r\n        if (this.segments[y].image !== null) {\r\n          this.segments[y].imgData = new Image()\r\n          this.segments[y].imgData.onload = winwheelLoadedImage\r\n          this.segments[y].imgData.src = this.segments[y].image\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // This function sorts out the segment sizes. Some segments may have set sizes, for the others what is left out of\r\n  // 360 degrees is shared evenly. What this function actually does is set the start and end angle of the arcs.\r\n  // ====================================================================================================================\r\n  updateSegmentSizes() {\r\n    // If this object actually contains some segments\r\n    if (this.segments) {\r\n      // First add up the arc used for the segments where the size has been set.\r\n      var arcUsed = 0\r\n      var numSet = 0\r\n      \r\n      // Remember, to make it easy to access segments, the position of the segments in the array starts from 1 (not 0).\r\n      for (var x = 1; x <= this.numSegments; x++) {\r\n        if (this.segments[x].size !== null) {\r\n          arcUsed += this.segments[x].size\r\n          numSet++\r\n        }\r\n      }\r\n      \r\n      var arcLeft = 360 - arcUsed\r\n      \r\n      // Create variable to hold how much each segment with non-set size will get in terms of degrees.\r\n      var degreesEach = 0\r\n      \r\n      if (arcLeft > 0) {\r\n        degreesEach = arcLeft / (this.numSegments - numSet)\r\n      }\r\n      \r\n      // ------------------------------------------\r\n      // Now loop though and set the start and end angle of each segment.\r\n      var currentDegree = 0\r\n      \r\n      for (let x = 1; x <= this.numSegments; x++) {\r\n        // Set start angle.\r\n        this.segments[x].startAngle = currentDegree\r\n        \r\n        // If the size is set then add this to the current degree to get the end, else add the degreesEach to it.\r\n        if (this.segments[x].size) {\r\n          currentDegree += this.segments[x].size\r\n        } else {\r\n          currentDegree += degreesEach\r\n        }\r\n        \r\n        // Set end angle.\r\n        this.segments[x].endAngle = currentDegree\r\n      }\r\n    }\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // This function clears the canvas. Will wipe anything else which happens to be drawn on it.\r\n  // ====================================================================================================================\r\n  clearCanvas() {\r\n    if (this.ctx) {\r\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n    }\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // This function draws / re-draws the wheel on the canvas therefore rendering any changes.\r\n  // ====================================================================================================================\r\n  draw(clearTheCanvas) {\r\n    // If have the canvas context.\r\n    if (this.ctx) {\r\n      // Clear the canvas, unless told not to.\r\n      if (typeof clearTheCanvas !== 'undefined') {\r\n        if (clearTheCanvas == true) {\r\n          this.clearCanvas()\r\n        }\r\n      } else {\r\n        this.clearCanvas()\r\n      }\r\n      \r\n      // Call functions to draw the segments and then segment text.\r\n      if (this.drawMode == 'image') {\r\n        // Draw the wheel by loading and drawing an image such as a png on the canvas.\r\n        this.drawWheelImage()\r\n        \r\n        // If we are to draw the text, do so before the overlay is drawn\r\n        // as this allows the overlay to be used to create some interesting effects.\r\n        if (this.drawText == true) {\r\n          this.drawSegmentText()\r\n        }\r\n        \r\n        // If image overlay is true then call function to draw the segments over the top of the image.\r\n        // This is useful during development to check alignment between where the code thinks the segments are and where they appear on the image.\r\n        if (this.imageOverlay == true) {\r\n          this.drawSegments()\r\n        }\r\n      } else if (this.drawMode == 'segmentImage') {\r\n        // Draw the wheel by rendering the image for each segment.\r\n        this.drawSegmentImages()\r\n        \r\n        // If we are to draw the text, do so before the overlay is drawn\r\n        // as this allows the overlay to be used to create some interesting effects.\r\n        if (this.drawText == true) {\r\n          this.drawSegmentText()\r\n        }\r\n        \r\n        // If image overlay is true then call function to draw the segments over the top of the image.\r\n        // This is useful during development to check alignment between where the code thinks the segments are and where they appear on the image.\r\n        if (this.imageOverlay == true) {\r\n          this.drawSegments()\r\n        }\r\n      } else {\r\n        // The default operation is to draw the segments using code via the canvas arc() method.\r\n        this.drawSegments()\r\n        \r\n        // The text is drawn on top.\r\n        if (this.drawText == true) {\r\n          this.drawSegmentText()\r\n        }\r\n      }\r\n      \r\n      // If this class has pins.\r\n      if (typeof this.pins !== 'undefined') {\r\n        // If they are to be visible then draw them.\r\n        if (this.pins.visible == true) this.drawPins()\r\n      }\r\n      \r\n      // If pointer guide is display property is set to true then call function to draw the pointer guide.\r\n      if (this.pointerGuide.display == true) {\r\n        this.drawPointerGuide()\r\n      }\r\n    }\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // Draws the pins around the outside of the wheel.\r\n  // ====================================================================================================================\r\n  drawPins() {\r\n    if (this.pins && this.pins.number) {\r\n      // Work out the angle to draw each pin a which is simply 360 / the number of pins as they space evenly around.\r\n      //++ There is a slight oddity with the pins in that there is a pin at 0 and also one at 360 and these will be drawn\r\n      //++ directly over the top of each other. Also pins are 0 indexed which could possibly cause some confusion\r\n      //++ with the getCurrentPin function - for now this is just used for audio so probably not a problem.\r\n      var pinSpacing = 360 / this.pins.number\r\n      \r\n      for (var i = 1; i <= this.pins.number; i++) {\r\n        this.ctx.save()\r\n        \r\n        // Set the stroke style and line width.\r\n        this.ctx.strokeStyle = this.pins.strokeStyle\r\n        this.ctx.lineWidth = this.pins.lineWidth\r\n        this.ctx.fillStyle = this.pins.fillStyle\r\n        \r\n        // Move to the center.\r\n        this.ctx.translate(this.centerX, this.centerY)\r\n        \r\n        // Rotate to to the pin location which is i * the pinSpacing.\r\n        this.ctx.rotate(this.degToRad(i * pinSpacing + this.rotationAngle))\r\n        \r\n        // Move back out.\r\n        this.ctx.translate(-this.centerX, -this.centerY)\r\n        \r\n        // Create a path for the pin circle.\r\n        this.ctx.beginPath()\r\n        // x, y, radius, startAngle, endAngle.\r\n        this.ctx.arc(\r\n          this.centerX,\r\n          this.centerY - this.outerRadius + this.pins.outerRadius + this.pins.margin,\r\n          this.pins.outerRadius,\r\n          0,\r\n          2 * Math.PI\r\n        )\r\n        \r\n        if (this.pins.fillStyle) this.ctx.fill()\r\n        \r\n        if (this.pins.strokeStyle) this.ctx.stroke()\r\n        \r\n        this.ctx.restore()\r\n      }\r\n    }\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // Draws a line from the center of the wheel to the outside at the angle where the code thinks the pointer is.\r\n  // ====================================================================================================================\r\n  drawPointerGuide() {\r\n    // If have canvas context.\r\n    if (this.ctx) {\r\n      this.ctx.save()\r\n      \r\n      // Rotate the canvas to the line goes towards the location of the pointer.\r\n      this.ctx.translate(this.centerX, this.centerY)\r\n      this.ctx.rotate(this.degToRad(this.pointerAngle))\r\n      this.ctx.translate(-this.centerX, -this.centerY)\r\n      \r\n      // Set line colour and width.\r\n      this.ctx.strokeStyle = this.pointerGuide.strokeStyle\r\n      this.ctx.lineWidth = this.pointerGuide.lineWidth\r\n      \r\n      // Draw from the center of the wheel outwards past the wheel outer radius.\r\n      this.ctx.beginPath()\r\n      this.ctx.moveTo(this.centerX, this.centerY)\r\n      this.ctx.lineTo(this.centerX, -(this.outerRadius / 4))\r\n      \r\n      this.ctx.stroke()\r\n      this.ctx.restore()\r\n    }\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // This function takes an image such as PNG and draws it on the canvas making its center at the centerX and center for the wheel.\r\n  // ====================================================================================================================\r\n  drawWheelImage() {\r\n    // Double check the wheelImage property of this class is not null. This does not actually detect that an image\r\n    // source was set and actually loaded so might get error if this is not the case. This is why the initial call\r\n    // to draw() should be done from a wheelImage.onload callback as detailed in example documentation.\r\n    if (this.wheelImage != null) {\r\n      // Work out the correct X and Y to draw the image at. We need to get the center point of the image\r\n      // aligned over the center point of the wheel, we can't just place it at 0, 0.\r\n      var imageLeft = this.centerX - this.wheelImage.height / 2\r\n      var imageTop = this.centerY - this.wheelImage.width / 2\r\n      \r\n      // Rotate and then draw the wheel.\r\n      // We must rotate by the rotationAngle before drawing to ensure that image wheels will spin.\r\n      this.ctx.save()\r\n      this.ctx.translate(this.centerX, this.centerY)\r\n      this.ctx.rotate(this.degToRad(this.rotationAngle))\r\n      this.ctx.translate(-this.centerX, -this.centerY)\r\n      \r\n      this.ctx.drawImage(this.wheelImage, imageLeft, imageTop)\r\n      \r\n      this.ctx.restore()\r\n    }\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // This function draws the wheel on the canvas by rendering the image for each segment.\r\n  // ====================================================================================================================\r\n  drawSegmentImages() {\r\n    // Again check have context in case this function was called directly and not via draw function.\r\n    if (this.ctx) {\r\n      // Draw the segments if there is at least one in the segments array.\r\n      if (this.segments) {\r\n        // Loop though and output all segments - position 0 of the array is not used, so start loop from index 1\r\n        // this is to avoid confusion when talking about the first segment.\r\n        for (var x = 1; x <= this.numSegments; x++) {\r\n          // Get the segment object as we need it to read options from.\r\n          var seg = this.segments[x]\r\n          \r\n          // Check image has loaded so a property such as height has a value.\r\n          if (seg.imgData.height) {\r\n            // Work out the correct X and Y to draw the image at which depends on the direction of the image.\r\n            // Images can be created in 4 directions. North, South, East, West.\r\n            // North: Outside at top, inside at bottom. Sits evenly over the 0 degrees angle.\r\n            // South: Outside at bottom, inside at top. Sits evenly over the 180 degrees angle.\r\n            // East: Outside at right, inside at left. Sits evenly over the 90 degrees angle.\r\n            // West: Outside at left, inside at right. Sits evenly over the 270 degrees angle.\r\n            var imageLeft = 0\r\n            var imageTop = 0\r\n            var imageAngle = 0\r\n            var imageDirection = ''\r\n            \r\n            if (seg.imageDirection !== null) imageDirection = seg.imageDirection\r\n            else imageDirection = this.imageDirection\r\n            \r\n            if (imageDirection == 'S') {\r\n              // Left set so image sits half/half over the 180 degrees point.\r\n              imageLeft = this.centerX - seg.imgData.width / 2\r\n              \r\n              // Top so image starts at the centerY.\r\n              imageTop = this.centerY\r\n              \r\n              // Angle to draw the image is its starting angle + half its size.\r\n              // Here we add 180 to the angle to the segment is poistioned correctly.\r\n              imageAngle = seg.startAngle + 180 + (seg.endAngle - seg.startAngle) / 2\r\n            } else if (imageDirection == 'E') {\r\n              // Left set so image starts and the center point.\r\n              imageLeft = this.centerX\r\n              \r\n              // Top is so that it sits half/half over the 90 degree point.\r\n              imageTop = this.centerY - seg.imgData.height / 2\r\n              \r\n              // Again get the angle in the center of the segment and add it to the rotation angle.\r\n              // this time we need to add 270 to that to the segment is rendered the correct place.\r\n              imageAngle = seg.startAngle + 270 + (seg.endAngle - seg.startAngle) / 2\r\n            } else if (imageDirection == 'W') {\r\n              // Left is the centerX minus the width of the image.\r\n              imageLeft = this.centerX - seg.imgData.width\r\n              \r\n              // Top is so that it sits half/half over the 270 degree point.\r\n              imageTop = this.centerY - seg.imgData.height / 2\r\n              \r\n              // Again get the angle in the center of the segment and add it to the rotation angle.\r\n              // this time we need to add 90 to that to the segment is rendered the correct place.\r\n              imageAngle = seg.startAngle + 90 + (seg.endAngle - seg.startAngle) / 2\r\n            } // North is the default.\r\n            else {\r\n              // Left set so image sits half/half over the 0 degrees point.\r\n              imageLeft = this.centerX - seg.imgData.width / 2\r\n              \r\n              // Top so image is its height out (above) the center point.\r\n              imageTop = this.centerY - seg.imgData.height\r\n              \r\n              // Angle to draw the image is its starting angle + half its size.\r\n              // this sits it half/half over the center angle of the segment.\r\n              imageAngle = seg.startAngle + (seg.endAngle - seg.startAngle) / 2\r\n            }\r\n            \r\n            // --------------------------------------------------\r\n            // Rotate to the position of the segment and then draw the image.\r\n            this.ctx.save()\r\n            this.ctx.translate(this.centerX, this.centerY)\r\n            \r\n            // So math here is the rotation angle of the wheel plus half way between the start and end angle of the segment.\r\n            this.ctx.rotate(this.degToRad(this.rotationAngle + imageAngle))\r\n            this.ctx.translate(-this.centerX, -this.centerY)\r\n            \r\n            // Draw the image.\r\n            this.ctx.drawImage(seg.imgData, imageLeft, imageTop)\r\n            \r\n            this.ctx.restore()\r\n          } else {\r\n            console.log('Segment ' + x + ' imgData is not loaded')\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // This function draws the wheel on the page by rendering the segments on the canvas.\r\n  // ====================================================================================================================\r\n  drawSegments() {\r\n    // Again check have context in case this function was called directly and not via draw function.\r\n    if (this.ctx) {\r\n      // Draw the segments if there is at least one in the segments array.\r\n      if (this.segments) {\r\n        // Loop though and output all segments - position 0 of the array is not used, so start loop from index 1\r\n        // this is to avoid confusion when talking about the first segment.\r\n        for (var x = 1; x <= this.numSegments; x++) {\r\n          // Get the segment object as we need it to read options from.\r\n          var seg = this.segments[x]\r\n          \r\n          var fillStyle\r\n          var lineWidth\r\n          var strokeStyle\r\n          \r\n          // Set the variables that defined in the segment, or use the default options.\r\n          if (seg.fillStyle !== null) fillStyle = seg.fillStyle\r\n          else fillStyle = this.fillStyle\r\n          \r\n          this.ctx.fillStyle = fillStyle\r\n          \r\n          if (seg.lineWidth !== null) lineWidth = seg.lineWidth\r\n          else lineWidth = this.lineWidth\r\n          \r\n          this.ctx.lineWidth = lineWidth\r\n          \r\n          if (seg.strokeStyle !== null) strokeStyle = seg.strokeStyle\r\n          else strokeStyle = this.strokeStyle\r\n          \r\n          this.ctx.strokeStyle = strokeStyle\r\n          \r\n          // Check there is a strokeStyle or fillStyle, if either the the segment is invisible so should not\r\n          // try to draw it otherwise a path is began but not ended.\r\n          if (strokeStyle || fillStyle) {\r\n            // ----------------------------------\r\n            // Begin a path as the segment consists of an arc and 2 lines.\r\n            this.ctx.beginPath()\r\n            \r\n            // If don't have an inner radius then move to the center of the wheel as we want a line out from the center\r\n            // to the start of the arc for the outside of the wheel when we arc. Canvas will draw the connecting line for us.\r\n            if (!this.innerRadius) {\r\n              this.ctx.moveTo(this.centerX, this.centerY)\r\n            } else {\r\n              //++ do need to draw the starting line in the correct x + y based on the start angle\r\n              //++ otherwise as seen when the wheel does not use up 360 the starting segment is missing the stroked side,\r\n            }\r\n            \r\n            // Draw the outer arc of the segment clockwise in direction -->\r\n            this.ctx.arc(\r\n              this.centerX,\r\n              this.centerY,\r\n              this.outerRadius,\r\n              this.degToRad(seg.startAngle + this.rotationAngle - 90),\r\n              this.degToRad(seg.endAngle + this.rotationAngle - 90),\r\n              false\r\n            )\r\n            \r\n            if (this.innerRadius) {\r\n              // Draw another arc, this time anticlockwise <-- at the innerRadius between the end angle and the start angle.\r\n              // Canvas will draw a connecting line from the end of the outer arc to the beginning of the inner arc completing the shape.\r\n              \r\n              //++ Think the reason the lines are thinner for 2 of the segments is because the thing auto chops part of it\r\n              //++ when doing the next one. Again think that actually drawing the lines will help.\r\n              \r\n              this.ctx.arc(\r\n                this.centerX,\r\n                this.centerY,\r\n                this.innerRadius,\r\n                this.degToRad(seg.endAngle + this.rotationAngle - 90),\r\n                this.degToRad(seg.startAngle + this.rotationAngle - 90),\r\n                true\r\n              )\r\n            } else {\r\n              // If no inner radius then we draw a line back to the center of the wheel.\r\n              this.ctx.lineTo(this.centerX, this.centerY)\r\n            }\r\n            \r\n            // Fill and stroke the segment. Only do either if a style was specified, if the style is null then\r\n            // we assume the developer did not want that particular thing.\r\n            // For example no stroke style so no lines to be drawn.\r\n            if (fillStyle) this.ctx.fill()\r\n            \r\n            if (strokeStyle) this.ctx.stroke()\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // This draws the text on the segments using the specified text options.\r\n  // ====================================================================================================================\r\n  drawSegmentText() {\r\n    // Again only draw the text if have a canvas context.\r\n    if (this.ctx) {\r\n      // Declare variables to hold the values. These are populated either with the value for the specific segment,\r\n      // or if not specified then the global default value.\r\n      var fontFamily\r\n      var fontSize\r\n      var fontWeight\r\n      var orientation\r\n      var alignment\r\n      var direction\r\n      var margin\r\n      var fillStyle\r\n      var strokeStyle\r\n      var lineWidth\r\n      var fontSetting\r\n      \r\n      // Loop though all the segments.\r\n      for (var x = 1; x <= this.numSegments; x++) {\r\n        // Save the context so it is certain that each segment text option will not affect the other.\r\n        this.ctx.save()\r\n        \r\n        // Get the segment object as we need it to read options from.\r\n        var seg = this.segments[x]\r\n        \r\n        // Check is text as no point trying to draw if there is no text to render.\r\n        if (seg.text) {\r\n          // Set values to those for the specific segment or use global default if null.\r\n          if (seg.textFontFamily !== null) fontFamily = seg.textFontFamily\r\n          else fontFamily = this.textFontFamily\r\n          if (seg.textFontSize !== null) fontSize = seg.textFontSize\r\n          else fontSize = this.textFontSize\r\n          if (seg.textFontWeight !== null) fontWeight = seg.textFontWeight\r\n          else fontWeight = this.textFontWeight\r\n          if (seg.textOrientation !== null) orientation = seg.textOrientation\r\n          else orientation = this.textOrientation\r\n          if (seg.textAlignment !== null) alignment = seg.textAlignment\r\n          else alignment = this.textAlignment\r\n          if (seg.textDirection !== null) direction = seg.textDirection\r\n          else direction = this.textDirection\r\n          if (seg.textMargin !== null) margin = seg.textMargin\r\n          else margin = this.textMargin\r\n          if (seg.textFillStyle !== null) fillStyle = seg.textFillStyle\r\n          else fillStyle = this.textFillStyle\r\n          if (seg.textStrokeStyle !== null) strokeStyle = seg.textStrokeStyle\r\n          else strokeStyle = this.textStrokeStyle\r\n          if (seg.textLineWidth !== null) lineWidth = seg.textLineWidth\r\n          else lineWidth = this.textLineWidth\r\n          \r\n          // ------------------------------\r\n          // We need to put the font bits together in to one string.\r\n          fontSetting = ''\r\n          \r\n          if (fontWeight != null) fontSetting += fontWeight + ' '\r\n          \r\n          if (fontSize != null) fontSetting += fontSize + 'px ' // Fonts on canvas are always a px value.\r\n          \r\n          if (fontFamily != null) fontSetting += fontFamily\r\n          \r\n          // Now set the canvas context to the decided values.\r\n          this.ctx.font = fontSetting\r\n          this.ctx.fillStyle = fillStyle\r\n          this.ctx.strokeStyle = strokeStyle\r\n          this.ctx.lineWidth = lineWidth\r\n          \r\n          // Split the text in to multiple lines on the \\n character.\r\n          var lines = seg.text.split('\\n')\r\n          \r\n          // Figure out the starting offset for the lines as when there are multiple lines need to center the text\r\n          // vertically in the segment (when thinking of normal horozontal text).\r\n          var lineOffset = 0 - fontSize * (lines.length / 2) + fontSize / 2\r\n          \r\n          // The offset works great for horozontal and vertial text, also centered curved. But when the text is curved\r\n          // and the alignment is outer then the multiline text should not have some text outside the wheel. Same if inner curved.\r\n          if (orientation == 'curved' && (alignment == 'inner' || alignment == 'outer')) {\r\n            lineOffset = 0\r\n          }\r\n          \r\n          for (var i = 0; i < lines.length; i++) {\r\n            // ---------------------------------\r\n            // If direction is reversed then do things differently than if normal (which is the default - see further down)\r\n            if (direction == 'reversed') {\r\n              // When drawing reversed or 'upside down' we need to do some trickery on our part.\r\n              // The canvas text rendering function still draws the text left to right and the correct way up,\r\n              // so we need to overcome this with rotating the opposite side of the wheel the correct way up then pulling the text\r\n              // through the center point to the correct segment it is supposed to be on.\r\n              if (orientation == 'horizontal') {\r\n                if (alignment == 'inner') this.ctx.textAlign = 'right'\r\n                else if (alignment == 'outer') this.ctx.textAlign = 'left'\r\n                else this.ctx.textAlign = 'center'\r\n                \r\n                this.ctx.textBaseline = 'middle'\r\n                \r\n                // Work out the angle to rotate the wheel, this is in the center of the segment but on the opposite side of the wheel which is why do -180.\r\n                var textAngle = this.degToRad(\r\n                  seg.endAngle - (seg.endAngle - seg.startAngle) / 2 + this.rotationAngle - 90 - 180\r\n                )\r\n                \r\n                this.ctx.save()\r\n                this.ctx.translate(this.centerX, this.centerY)\r\n                this.ctx.rotate(textAngle)\r\n                this.ctx.translate(-this.centerX, -this.centerY)\r\n                \r\n                if (alignment == 'inner') {\r\n                  // In reversed state the margin is subtracted from the innerX.\r\n                  // When inner the inner radius also comes in to play.\r\n                  if (fillStyle)\r\n                    this.ctx.fillText(\r\n                      lines[i],\r\n                      this.centerX - this.innerRadius - margin,\r\n                      this.centerY + lineOffset\r\n                    )\r\n                  \r\n                  if (strokeStyle)\r\n                    this.ctx.strokeText(\r\n                      lines[i],\r\n                      this.centerX - this.innerRadius - margin,\r\n                      this.centerY + lineOffset\r\n                    )\r\n                } else if (alignment == 'outer') {\r\n                  // In reversed state the position is the center minus the radius + the margin for outer aligned text.\r\n                  if (fillStyle)\r\n                    this.ctx.fillText(\r\n                      lines[i],\r\n                      this.centerX - this.outerRadius + margin,\r\n                      this.centerY + lineOffset\r\n                    )\r\n                  \r\n                  if (strokeStyle)\r\n                    this.ctx.strokeText(\r\n                      lines[i],\r\n                      this.centerX - this.outerRadius + margin,\r\n                      this.centerY + lineOffset\r\n                    )\r\n                } else {\r\n                  // In reversed state the everything in minused.\r\n                  if (fillStyle)\r\n                    this.ctx.fillText(\r\n                      lines[i],\r\n                      this.centerX -\r\n                      this.innerRadius -\r\n                      (this.outerRadius - this.innerRadius) / 2 -\r\n                      margin,\r\n                      this.centerY + lineOffset\r\n                    )\r\n                  \r\n                  if (strokeStyle)\r\n                    this.ctx.strokeText(\r\n                      lines[i],\r\n                      this.centerX -\r\n                      this.innerRadius -\r\n                      (this.outerRadius - this.innerRadius) / 2 -\r\n                      margin,\r\n                      this.centerY + lineOffset\r\n                    )\r\n                }\r\n                \r\n                this.ctx.restore()\r\n              } else if (orientation == 'vertical') {\r\n                // See normal code further down for comments on how it works, this is similar by plus/minus is reversed.\r\n                this.ctx.textAlign = 'center'\r\n                \r\n                // In reversed mode this are reversed.\r\n                if (alignment == 'inner') this.ctx.textBaseline = 'top'\r\n                else if (alignment == 'outer') this.ctx.textBaseline = 'bottom'\r\n                else this.ctx.textBaseline = 'middle'\r\n                \r\n                var textAngle = seg.endAngle - (seg.endAngle - seg.startAngle) / 2 - 180\r\n                textAngle += this.rotationAngle\r\n                \r\n                this.ctx.save()\r\n                this.ctx.translate(this.centerX, this.centerY)\r\n                this.ctx.rotate(this.degToRad(textAngle))\r\n                this.ctx.translate(-this.centerX, -this.centerY)\r\n                \r\n                if (alignment == 'outer') var yPos = this.centerY + this.outerRadius - margin\r\n                else if (alignment == 'inner') var yPos = this.centerY + this.innerRadius + margin\r\n                \r\n                // I have found that the text looks best when a fraction of the font size is shaved off.\r\n                var yInc = fontSize - fontSize / 9\r\n                \r\n                // Loop though and output the characters.\r\n                if (alignment == 'outer') {\r\n                  // In reversed mode outer means text in 6 o'clock segment sits at bottom of the wheel and we draw up.\r\n                  for (let c = lines[i].length - 1; c >= 0; c--) {\r\n                    const character = lines[i].charAt(c)\r\n                    \r\n                    if (fillStyle) this.ctx.fillText(character, this.centerX + lineOffset, yPos)\r\n                    \r\n                    if (strokeStyle) this.ctx.strokeText(character, this.centerX + lineOffset, yPos)\r\n                    \r\n                    yPos -= yInc\r\n                  }\r\n                } else if (alignment == 'inner') {\r\n                  // In reversed mode inner text is drawn from top of segment at 6 o'clock position to bottom of the wheel.\r\n                  for (let c = 0; c < lines[i].length; c++) {\r\n                    const character = lines[i].charAt(c)\r\n                    \r\n                    if (fillStyle) this.ctx.fillText(character, this.centerX + lineOffset, yPos)\r\n                    \r\n                    if (strokeStyle) this.ctx.strokeText(character, this.centerX + lineOffset, yPos)\r\n                    \r\n                    yPos += yInc\r\n                  }\r\n                } else if (alignment == 'center') {\r\n                  // Again for reversed this is the opposite of before.\r\n                  // If there is more than one character in the text then an adjustment to the position needs to be done.\r\n                  // What we are aiming for is to position the center of the text at the center point between the inner and outer radius.\r\n                  var centerAdjustment = 0\r\n                  \r\n                  if (lines[i].length > 1) {\r\n                    centerAdjustment = (yInc * (lines[i].length - 1)) / 2\r\n                  }\r\n                  \r\n                  var yPos =\r\n                    this.centerY +\r\n                    this.innerRadius +\r\n                    (this.outerRadius - this.innerRadius) / 2 +\r\n                    centerAdjustment +\r\n                    margin\r\n                  \r\n                  for (var c = lines[i].length - 1; c >= 0; c--) {\r\n                    const character = lines[i].charAt(c)\r\n                    \r\n                    if (fillStyle) this.ctx.fillText(character, this.centerX + lineOffset, yPos)\r\n                    \r\n                    if (strokeStyle) this.ctx.strokeText(character, this.centerX + lineOffset, yPos)\r\n                    \r\n                    yPos -= yInc\r\n                  }\r\n                }\r\n                \r\n                this.ctx.restore()\r\n              } else if (orientation == 'curved') {\r\n                // There is no built in canvas function to draw text around an arc,\r\n                // so we need to do this ourselves.\r\n                var radius = 0\r\n                \r\n                // Set the alignment of the text - inner, outer, or center by calculating\r\n                // how far out from the center point of the wheel the text is drawn.\r\n                if (alignment == 'inner') {\r\n                  // When alignment is inner the radius is the innerRadius plus any margin.\r\n                  radius = this.innerRadius + margin\r\n                  this.ctx.textBaseline = 'top'\r\n                } else if (alignment == 'outer') {\r\n                  // Outer it is the outerRadius minus any margin.\r\n                  radius = this.outerRadius - margin\r\n                  this.ctx.textBaseline = 'bottom'\r\n                  \r\n                  // We need to adjust the radius in this case to take in to multiline text.\r\n                  // In this case the radius needs to be further out, not at the inner radius.\r\n                  radius -= fontSize * (lines.length - 1)\r\n                } else if (alignment == 'center') {\r\n                  // When center we want the text halfway between the inner and outer radius.\r\n                  radius = this.innerRadius + margin + (this.outerRadius - this.innerRadius) / 2\r\n                  this.ctx.textBaseline = 'middle'\r\n                }\r\n                \r\n                // Set the angle to increment by when looping though and outputting the characters in the text\r\n                // as we do this by rotating the wheel small amounts adding each character.\r\n                var anglePerChar = 0\r\n                var drawAngle = 0\r\n                \r\n                // If more than one character in the text then...\r\n                if (lines[i].length > 1) {\r\n                  // Text is drawn from the left.\r\n                  this.ctx.textAlign = 'left'\r\n                  \r\n                  // Work out how much angle the text rendering loop below needs to rotate by for each character to render them next to each other.\r\n                  // I have discovered that 4 * the font size / 10 at 100px radius is the correct spacing for between the characters\r\n                  // using a monospace font, non monospace may look a little odd as in there will appear to be extra spaces between chars.\r\n                  anglePerChar = 4 * (fontSize / 10)\r\n                  \r\n                  // Work out what percentage the radius the text will be drawn at is of 100px.\r\n                  let radiusPercent = 100 / radius\r\n                  \r\n                  // Then use this to scale up or down the anglePerChar value.\r\n                  // When the radius is less than 100px we need more angle between the letters, when radius is greater (so the text is further\r\n                  // away from the center of the wheel) the angle needs to be less otherwise the characters will appear further apart.\r\n                  anglePerChar = anglePerChar * radiusPercent\r\n                  \r\n                  // Next we want the text to be drawn in the middle of the segment, without this it would start at the beginning of the segment.\r\n                  // To do this we need to work out how much arc the text will take up in total then subtract half of this from the center\r\n                  // of the segment so that it sits centred.\r\n                  let totalArc = anglePerChar * lines[i].length\r\n                  \r\n                  // Now set initial draw angle to half way between the start and end of the segment.\r\n                  drawAngle = seg.startAngle + ((seg.endAngle - seg.startAngle) / 2 - totalArc / 2)\r\n                } else {\r\n                  // The initial draw angle is the center of the segment when only one character.\r\n                  drawAngle = seg.startAngle + (seg.endAngle - seg.startAngle) / 2\r\n                  \r\n                  // To ensure is dead-center the text alignment also needs to be centered.\r\n                  this.ctx.textAlign = 'center'\r\n                }\r\n                \r\n                // ----------------------\r\n                // Adjust the initial draw angle as needed to take in to account the rotationAngle of the wheel.\r\n                drawAngle += this.rotationAngle\r\n                \r\n                // And as with other 'reverse' text direction functions we need to subtract 180 degrees from the angle\r\n                // because when it comes to draw the characters in the loop below we add the radius instead of subtract it.\r\n                drawAngle -= 180\r\n                \r\n                // ----------------------\r\n                // Now the drawing itself.\r\n                // In reversed direction mode we loop through the characters in the text backwards in order for them to appear on screen correctly\r\n                for (c = lines[i].length; c >= 0; c--) {\r\n                  this.ctx.save()\r\n                  \r\n                  let character = lines[i].charAt(c)\r\n                  \r\n                  // Rotate the wheel to the draw angle as we need to add the character at this location.\r\n                  this.ctx.translate(this.centerX, this.centerY)\r\n                  this.ctx.rotate(this.degToRad(drawAngle))\r\n                  this.ctx.translate(-this.centerX, -this.centerY)\r\n                  \r\n                  // Now draw the character directly below the center point of the wheel at the appropriate radius.\r\n                  // Note in the reversed mode we add the radius to the this.centerY instead of subtract.\r\n                  if (strokeStyle)\r\n                    this.ctx.strokeText(character, this.centerX, this.centerY + radius + lineOffset)\r\n                  \r\n                  if (fillStyle)\r\n                    this.ctx.fillText(character, this.centerX, this.centerY + radius + lineOffset)\r\n                  \r\n                  // Increment the drawAngle by the angle per character so next loop we rotate\r\n                  // to the next angle required to draw the character at.\r\n                  drawAngle += anglePerChar\r\n                  \r\n                  this.ctx.restore()\r\n                }\r\n              }\r\n            } else {\r\n              // Normal direction so do things normally.\r\n              // Check text orientation, of horizontal then reasonably straight forward, if vertical then a bit more work to do.\r\n              if (orientation == 'horizontal') {\r\n                // Based on the text alignment, set the correct value in the context.\r\n                if (alignment == 'inner') this.ctx.textAlign = 'left'\r\n                else if (alignment == 'outer') this.ctx.textAlign = 'right'\r\n                else this.ctx.textAlign = 'center'\r\n                \r\n                // Set this too.\r\n                this.ctx.textBaseline = 'middle'\r\n                \r\n                // Work out the angle around the wheel to draw the text at, which is simply in the middle of the segment the text is for.\r\n                // The rotation angle is added in to correct the annoyance with the canvas arc drawing functions which put the 0 degrees at the 3 oclock\r\n                var textAngle = this.degToRad(\r\n                  seg.endAngle - (seg.endAngle - seg.startAngle) / 2 + this.rotationAngle - 90\r\n                )\r\n                \r\n                // We need to rotate in order to draw the text because it is output horizontally, so to\r\n                // place correctly around the wheel for all but a segment at 3 o'clock we need to rotate.\r\n                this.ctx.save()\r\n                this.ctx.translate(this.centerX, this.centerY)\r\n                this.ctx.rotate(textAngle)\r\n                this.ctx.translate(-this.centerX, -this.centerY)\r\n                \r\n                // --------------------------\r\n                // Draw the text based on its alignment adding margin if inner or outer.\r\n                if (alignment == 'inner') {\r\n                  // Inner means that the text is aligned with the inner of the wheel. If looking at a segment in in the 3 o'clock position\r\n                  // it would look like the text is left aligned within the segment.\r\n                  \r\n                  // Because the segments are smaller towards the inner of the wheel, in order for the text to fit is is a good idea that\r\n                  // a margin is added which pushes the text towards the outer a bit.\r\n                  \r\n                  // The inner radius also needs to be taken in to account as when inner aligned.\r\n                  \r\n                  // If fillstyle is set the draw the text filled in.\r\n                  if (fillStyle)\r\n                    this.ctx.fillText(\r\n                      lines[i],\r\n                      this.centerX + this.innerRadius + margin,\r\n                      this.centerY + lineOffset\r\n                    )\r\n                  \r\n                  // If stroke style is set draw the text outline.\r\n                  if (strokeStyle)\r\n                    this.ctx.strokeText(\r\n                      lines[i],\r\n                      this.centerX + this.innerRadius + margin,\r\n                      this.centerY + lineOffset\r\n                    )\r\n                } else if (alignment == 'outer') {\r\n                  // Outer means the text is aligned with the outside of the wheel, so if looking at a segment in the 3 o'clock position\r\n                  // it would appear the text is right aligned. To position we add the radius of the wheel in to the equation\r\n                  // and subtract the margin this time, rather than add it.\r\n                  \r\n                  // I don't understand why, but in order of the text to render correctly with stroke and fill, the stroke needs to\r\n                  // come first when drawing outer, rather than second when doing inner.\r\n                  if (fillStyle)\r\n                    this.ctx.fillText(\r\n                      lines[i],\r\n                      this.centerX + this.outerRadius - margin,\r\n                      this.centerY + lineOffset\r\n                    )\r\n                  \r\n                  // If fillstyle the fill the text.\r\n                  if (strokeStyle)\r\n                    this.ctx.strokeText(\r\n                      lines[i],\r\n                      this.centerX + this.outerRadius - margin,\r\n                      this.centerY + lineOffset\r\n                    )\r\n                } else {\r\n                  // In this case the text is to drawn centred in the segment.\r\n                  // Typically no margin is required, however even though centred the text can look closer to the inner of the wheel\r\n                  // due to the way the segments narrow in (is optical effect), so if a margin is specified it is placed on the inner\r\n                  // side so the text is pushed towards the outer.\r\n                  \r\n                  // If stoke style the stroke the text.\r\n                  if (fillStyle)\r\n                    this.ctx.fillText(\r\n                      lines[i],\r\n                      this.centerX +\r\n                      this.innerRadius +\r\n                      (this.outerRadius - this.innerRadius) / 2 +\r\n                      margin,\r\n                      this.centerY + lineOffset\r\n                    )\r\n                  \r\n                  // If fillstyle the fill the text.\r\n                  if (strokeStyle)\r\n                    this.ctx.strokeText(\r\n                      lines[i],\r\n                      this.centerX +\r\n                      this.innerRadius +\r\n                      (this.outerRadius - this.innerRadius) / 2 +\r\n                      margin,\r\n                      this.centerY + lineOffset\r\n                    )\r\n                }\r\n                \r\n                // Restore the context so that wheel is returned to original position.\r\n                this.ctx.restore()\r\n              } else if (orientation == 'vertical') {\r\n                // If vertical then we need to do this ourselves because as far as I am aware there is no option built in to html canvas\r\n                // which causes the text to draw downwards or upwards one character after another.\r\n                \r\n                // In this case the textAlign is always center, but the baseline is either top or bottom\r\n                // depending on if inner or outer alignment has been specified.\r\n                this.ctx.textAlign = 'center'\r\n                \r\n                if (alignment == 'inner') this.ctx.textBaseline = 'bottom'\r\n                else if (alignment == 'outer') this.ctx.textBaseline = 'top'\r\n                else this.ctx.textBaseline = 'middle'\r\n                \r\n                // The angle to draw the text at is halfway between the end and the starting angle of the segment.\r\n                var textAngle = seg.endAngle - (seg.endAngle - seg.startAngle) / 2\r\n                \r\n                // Ensure the rotation angle of the wheel is added in, otherwise the test placement won't match\r\n                // the segments they are supposed to be for.\r\n                textAngle += this.rotationAngle\r\n                \r\n                // Rotate so can begin to place the text.\r\n                this.ctx.save()\r\n                this.ctx.translate(this.centerX, this.centerY)\r\n                this.ctx.rotate(this.degToRad(textAngle))\r\n                this.ctx.translate(-this.centerX, -this.centerY)\r\n                \r\n                // Work out the position to start drawing in based on the alignment.\r\n                // If outer then when considering a segment at the 12 o'clock position want to start drawing down from the top of the wheel.\r\n                if (alignment == 'outer') var yPos = this.centerY - this.outerRadius + margin\r\n                else if (alignment == 'inner') var yPos = this.centerY - this.innerRadius - margin\r\n                \r\n                // We need to know how much to move the y axis each time.\r\n                // This is not quite simply the font size as that puts a larger gap in between the letters\r\n                // than expected, especially with monospace fonts. I found that shaving a little off makes it look \"right\".\r\n                var yInc = fontSize - fontSize / 9\r\n                \r\n                // Loop though and output the characters.\r\n                if (alignment == 'outer') {\r\n                  // For this alignment we draw down from the top of a segment at the 12 o'clock position to simply\r\n                  // loop though the characters in order.\r\n                  for (var c = 0; c < lines[i].length; c++) {\r\n                    const character = lines[i].charAt(c)\r\n                    \r\n                    if (fillStyle) this.ctx.fillText(character, this.centerX + lineOffset, yPos)\r\n                    \r\n                    if (strokeStyle) this.ctx.strokeText(character, this.centerX + lineOffset, yPos)\r\n                    \r\n                    yPos += yInc\r\n                  }\r\n                } else if (alignment == 'inner') {\r\n                  // Here we draw from the inner of the wheel up, but in order for the letters in the text text to\r\n                  // remain in the correct order when reading, we actually need to loop though the text characters backwards.\r\n                  for (var c = lines[i].length - 1; c >= 0; c--) {\r\n                    const character = lines[i].charAt(c)\r\n                    \r\n                    if (fillStyle) this.ctx.fillText(character, this.centerX + lineOffset, yPos)\r\n                    \r\n                    if (strokeStyle) this.ctx.strokeText(character, this.centerX + lineOffset, yPos)\r\n                    \r\n                    yPos -= yInc\r\n                  }\r\n                } else if (alignment == 'center') {\r\n                  // This is the most complex of the three as we need to draw the text top down centred between the inner and outer of the wheel.\r\n                  // So logically we have to put the middle character of the text in the center then put the others each side of it.\r\n                  // In reality that is a really bad way to do it, we can achieve the same if not better positioning using a\r\n                  // variation on the method used for the rendering of outer aligned text once we have figured out the height of the text.\r\n                  \r\n                  // If there is more than one character in the text then an adjustment to the position needs to be done.\r\n                  // What we are aiming for is to position the center of the text at the center point between the inner and outer radius.\r\n                  var centerAdjustment = 0\r\n                  \r\n                  if (lines[i].length > 1) {\r\n                    centerAdjustment = (yInc * (lines[i].length - 1)) / 2\r\n                  }\r\n                  \r\n                  // Now work out where to start rendering the string. This is half way between the inner and outer of the wheel, with the\r\n                  // centerAdjustment included to correctly position texts with more than one character over the center.\r\n                  // If there is a margin it is used to push the text away from the center of the wheel.\r\n                  var yPos =\r\n                    this.centerY -\r\n                    this.innerRadius -\r\n                    (this.outerRadius - this.innerRadius) / 2 -\r\n                    centerAdjustment -\r\n                    margin\r\n                  \r\n                  // Now loop and draw just like outer text rendering.\r\n                  for (var c = 0; c < lines[i].length; c++) {\r\n                    const character = lines[i].charAt(c)\r\n                    \r\n                    if (fillStyle) this.ctx.fillText(character, this.centerX + lineOffset, yPos)\r\n                    \r\n                    if (strokeStyle) this.ctx.strokeText(character, this.centerX + lineOffset, yPos)\r\n                    \r\n                    yPos += yInc\r\n                  }\r\n                }\r\n                \r\n                this.ctx.restore()\r\n              } else if (orientation == 'curved') {\r\n                // There is no built in canvas function to draw text around an arc, so\r\n                // we need to do this ourselves.\r\n                var radius = 0\r\n                \r\n                // Set the alignment of the text - inner, outer, or center by calculating\r\n                // how far out from the center point of the wheel the text is drawn.\r\n                if (alignment == 'inner') {\r\n                  // When alignment is inner the radius is the innerRadius plus any margin.\r\n                  radius = this.innerRadius + margin\r\n                  this.ctx.textBaseline = 'bottom'\r\n                  \r\n                  // We need to adjust the radius in this case to take in to multiline text.\r\n                  // In this case the radius needs to be further out, not at the inner radius.\r\n                  radius += fontSize * (lines.length - 1)\r\n                } else if (alignment == 'outer') {\r\n                  // Outer it is the outerRadius minus any margin.\r\n                  radius = this.outerRadius - margin\r\n                  this.ctx.textBaseline = 'top'\r\n                } else if (alignment == 'center') {\r\n                  // When center we want the text halfway between the inner and outer radius.\r\n                  radius = this.innerRadius + margin + (this.outerRadius - this.innerRadius) / 2\r\n                  this.ctx.textBaseline = 'middle'\r\n                }\r\n                \r\n                // Set the angle to increment by when looping though and outputting the characters in the text\r\n                // as we do this by rotating the wheel small amounts adding each character.\r\n                var anglePerChar = 0\r\n                var drawAngle = 0\r\n                \r\n                // If more than one character in the text then...\r\n                if (lines[i].length > 1) {\r\n                  // Text is drawn from the left.\r\n                  this.ctx.textAlign = 'left'\r\n                  \r\n                  // Work out how much angle the text rendering loop below needs to rotate by for each character to render them next to each other.\r\n                  // I have discovered that 4 * the font size / 10 at 100px radius is the correct spacing for between the characters\r\n                  // using a monospace font, non monospace may look a little odd as in there will appear to be extra spaces between chars.\r\n                  anglePerChar = 4 * (fontSize / 10)\r\n                  \r\n                  // Work out what percentage the radius the text will be drawn at is of 100px.\r\n                  let radiusPercent = 100 / radius\r\n                  \r\n                  // Then use this to scale up or down the anglePerChar value.\r\n                  // When the radius is less than 100px we need more angle between the letters, when radius is greater (so the text is further\r\n                  // away from the center of the wheel) the angle needs to be less otherwise the characters will appear further apart.\r\n                  anglePerChar = anglePerChar * radiusPercent\r\n                  \r\n                  // Next we want the text to be drawn in the middle of the segment, without this it would start at the beginning of the segment.\r\n                  // To do this we need to work out how much arc the text will take up in total then subtract half of this from the center\r\n                  // of the segment so that it sits centred.\r\n                  let totalArc = anglePerChar * lines[i].length\r\n                  \r\n                  // Now set initial draw angle to half way between the start and end of the segment.\r\n                  drawAngle = seg.startAngle + ((seg.endAngle - seg.startAngle) / 2 - totalArc / 2)\r\n                } else {\r\n                  // The initial draw angle is the center of the segment when only one character.\r\n                  drawAngle = seg.startAngle + (seg.endAngle - seg.startAngle) / 2\r\n                  \r\n                  // To ensure is dead-center the text alignment also needs to be centred.\r\n                  this.ctx.textAlign = 'center'\r\n                }\r\n                \r\n                // ----------------------\r\n                // Adjust the initial draw angle as needed to take in to account the rotationAngle of the wheel.\r\n                drawAngle += this.rotationAngle\r\n                \r\n                // ----------------------\r\n                // Now the drawing itself.\r\n                // Loop for each character in the text.\r\n                for (c = 0; c < lines[i].length; c++) {\r\n                  this.ctx.save()\r\n                  \r\n                  const character = lines[i].charAt(c)\r\n                  \r\n                  // Rotate the wheel to the draw angle as we need to add the character at this location.\r\n                  this.ctx.translate(this.centerX, this.centerY)\r\n                  this.ctx.rotate(this.degToRad(drawAngle))\r\n                  this.ctx.translate(-this.centerX, -this.centerY)\r\n                  \r\n                  // Now draw the character directly above the center point of the wheel at the appropriate radius.\r\n                  if (strokeStyle)\r\n                    this.ctx.strokeText(character, this.centerX, this.centerY - radius + lineOffset)\r\n                  \r\n                  if (fillStyle)\r\n                    this.ctx.fillText(character, this.centerX, this.centerY - radius + lineOffset)\r\n                  \r\n                  // Increment the drawAngle by the angle per character so next loop we rotate\r\n                  // to the next angle required to draw the character at.\r\n                  drawAngle += anglePerChar\r\n                  \r\n                  this.ctx.restore()\r\n                }\r\n              }\r\n            }\r\n            \r\n            // Increment this ready for the next time.\r\n            lineOffset += fontSize\r\n          }\r\n        }\r\n        \r\n        // Restore so all text options are reset ready for the next text.\r\n        this.ctx.restore()\r\n      }\r\n    }\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // Converts degrees to radians which is what is used when specifying the angles on HTML5 canvas arcs.\r\n  // ====================================================================================================================\r\n  degToRad(d) {\r\n    return d * 0.0174532925199432957\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // This function sets the center location of the wheel, saves a function call to set x then y.\r\n  // ====================================================================================================================\r\n  setCenter(x, y) {\r\n    this.centerX = x\r\n    this.centerY = y\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // This function allows a segment to be added to the wheel. The position of the segment is optional,\r\n  // if not specified the new segment will be added to the end of the wheel.\r\n  // ====================================================================================================================\r\n  addSegment(options, position) {\r\n    // Create a new segment object passing the options in.\r\n    const newSegment = new Segment(options)\r\n    \r\n    // Increment the numSegments property of the class since new segment being added.\r\n    this.numSegments++\r\n    var segmentPos\r\n    \r\n    // Work out where to place the segment, the default is simply as a new segment at the end of the wheel.\r\n    if (typeof position !== 'undefined') {\r\n      // Because we need to insert the segment at this position, not overwrite it, we need to move all segments after this\r\n      // location along one in the segments array, before finally adding this new segment at the specified location.\r\n      for (var x = this.numSegments; x > position; x--) {\r\n        this.segments[x] = this.segments[x - 1]\r\n      }\r\n      \r\n      this.segments[position] = newSegment\r\n      segmentPos = position\r\n    } else {\r\n      this.segments[this.numSegments] = newSegment\r\n      segmentPos = this.numSegments\r\n    }\r\n    \r\n    // Since a segment has been added the segment sizes need to be re-computed so call function to do this.\r\n    this.updateSegmentSizes()\r\n    \r\n    // Return the segment object just created in the wheel (JavaScript will return it by reference), so that\r\n    // further things can be done with it by the calling code if desired.\r\n    return this.segments[segmentPos]\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // This function must be used if the canvasId is changed as we also need to get the context of the new canvas.\r\n  // ====================================================================================================================\r\n  setCanvasId(canvasId) {\r\n    if (canvasId) {\r\n      this.canvasId = canvasId\r\n      this.canvas = document.getElementById(this.canvasId)\r\n      \r\n      if (this.canvas) {\r\n        this.ctx = this.canvas.getContext('2d')\r\n      }\r\n    } else {\r\n      this.canvasId = null\r\n      this.ctx = null\r\n      this.canvas = null\r\n    }\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // This function deletes the specified segment from the wheel by removing it from the segments array.\r\n  // It then sorts out the other bits such as update of the numSegments.\r\n  // ====================================================================================================================\r\n  deleteSegment(position) {\r\n    // There needs to be at least one segment in order for the wheel to draw, so only allow delete if there\r\n    // is more than one segment currently left in the wheel.\r\n    \r\n    //++ check that specifying a position that does not exist - say 10 in a 6 segment wheel does not cause issues.\r\n    if (this.numSegments > 1) {\r\n      // If the position of the segment to remove has been specified.\r\n      if (typeof position !== 'undefined') {\r\n        // The array is to be shortened so we need to move all segments after the one\r\n        // to be removed down one so there is no gap.\r\n        for (var x = position; x < this.numSegments; x++) {\r\n          this.segments[x] = this.segments[x + 1]\r\n        }\r\n      }\r\n      \r\n      // Unset the last item in the segments array since there is now one less.\r\n      this.segments[this.numSegments] = undefined\r\n      \r\n      // Decrement the number of segments,\r\n      // then call function to update the segment sizes.\r\n      this.numSegments--\r\n      this.updateSegmentSizes()\r\n    }\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // This function takes the x an the y of a mouse event, such as click or move, and converts the x and the y in to\r\n  // co-ordinates on the canvas as the raw values are the x and the y from the top and left of the user's browser.\r\n  // ====================================================================================================================\r\n  windowToCanvas(x, y) {\r\n    var bbox = this.canvas.getBoundingClientRect()\r\n    \r\n    return {\r\n      x: Math.floor(x - bbox.left * (this.canvas.width / bbox.width)),\r\n      y: Math.floor(y - bbox.top * (this.canvas.height / bbox.height)),\r\n    }\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // This function returns the segment object located at the specified x and y coordinates on the canvas.\r\n  // It is used to allow things to be done with a segment clicked by the user, such as highlight, display or change some values, etc.\r\n  // ====================================================================================================================\r\n  getSegmentAt(x, y) {\r\n    var foundSegment = null\r\n    \r\n    // Call function to return segment number.\r\n    var segmentNumber = this.getSegmentNumberAt(x, y)\r\n    \r\n    // If found one then set found segment to pointer to the segment object.\r\n    if (segmentNumber !== null) {\r\n      foundSegment = this.segments[segmentNumber]\r\n    }\r\n    \r\n    return foundSegment\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // Returns the number of the segment clicked instead of the segment object.\r\n  // ====================================================================================================================\r\n  getSegmentNumberAt(x, y) {\r\n    // KNOWN ISSUE: this does not work correct if the canvas is scaled using css, or has padding, border.\r\n    // @TODO see if can find a solution at some point, check windowToCanvas working as needed, then below.\r\n    \r\n    // Call function above to convert the raw x and y from the user's browser to canvas coordinates\r\n    // i.e. top and left is top and left of canvas, not top and left of the user's browser.\r\n    var loc = this.windowToCanvas(x, y)\r\n    \r\n    // ------------------------------------------\r\n    // Now start the process of working out the segment clicked.\r\n    // First we need to figure out the angle of an imaginary line between the centerX and centerY of the wheel and\r\n    // the X and Y of the location (for example a mouse click).\r\n    var topBottom\r\n    var leftRight\r\n    var adjacentSideLength\r\n    var oppositeSideLength\r\n    var hypotenuseSideLength\r\n    \r\n    // We will use right triangle maths with the TAN function.\r\n    // The start of the triangle is the wheel center, the adjacent side is along the x axis, and the opposite side is along the y axis.\r\n    \r\n    // We only ever use positive numbers to work out the triangle and the center of the wheel needs to be considered as 0 for the numbers\r\n    // in the maths which is why there is the subtractions below. We also remember what quadrant of the wheel the location is in as we\r\n    // need this information later to add 90, 180, 270 degrees to the angle worked out from the triangle to get the position around a 360 degree wheel.\r\n    if (loc.x > this.centerX) {\r\n      adjacentSideLength = loc.x - this.centerX\r\n      leftRight = 'R' // Location is in the right half of the wheel.\r\n    } else {\r\n      adjacentSideLength = this.centerX - loc.x\r\n      leftRight = 'L' // Location is in the left half of the wheel.\r\n    }\r\n    \r\n    if (loc.y > this.centerY) {\r\n      oppositeSideLength = loc.y - this.centerY\r\n      topBottom = 'B' // Bottom half of wheel.\r\n    } else {\r\n      oppositeSideLength = this.centerY - loc.y\r\n      topBottom = 'T' // Top Half of wheel.\r\n    }\r\n    \r\n    // Now divide opposite by adjacent to get tan value.\r\n    var tanVal = oppositeSideLength / adjacentSideLength\r\n    \r\n    // Use the tan function and convert results to degrees since that is what we work with.\r\n    var result = (Math.atan(tanVal) * 180) / Math.PI\r\n    var locationAngle = 0\r\n    \r\n    // We also need the length of the hypotenuse as later on we need to compare this to the outerRadius of the segment / circle.\r\n    hypotenuseSideLength = Math.sqrt(\r\n      oppositeSideLength * oppositeSideLength + adjacentSideLength * adjacentSideLength\r\n    )\r\n    \r\n    // ------------------------------------------\r\n    // Now to make sense around the wheel we need to alter the values based on if the location was in top or bottom half\r\n    // and also right or left half of the wheel, by adding 90, 180, 270 etc. Also for some the initial locationAngle needs to be inverted.\r\n    if (topBottom == 'T' && leftRight == 'R') {\r\n      locationAngle = Math.round(90 - result)\r\n    } else if (topBottom == 'B' && leftRight == 'R') {\r\n      locationAngle = Math.round(result + 90)\r\n    } else if (topBottom == 'B' && leftRight == 'L') {\r\n      locationAngle = Math.round(90 - result + 180)\r\n    } else if (topBottom == 'T' && leftRight == 'L') {\r\n      locationAngle = Math.round(result + 270)\r\n    }\r\n    \r\n    // ------------------------------------------\r\n    // And now we have to adjust to make sense when the wheel is rotated from the 0 degrees either\r\n    // positive or negative and it can be many times past 360 degrees.\r\n    if (this.rotationAngle != 0) {\r\n      var rotatedPosition = this.getRotationPosition()\r\n      \r\n      // So we have this, now we need to alter the locationAngle as a result of this.\r\n      locationAngle = locationAngle - rotatedPosition\r\n      \r\n      // If negative then take the location away from 360.\r\n      if (locationAngle < 0) {\r\n        locationAngle = 360 - Math.abs(locationAngle)\r\n      }\r\n    }\r\n    \r\n    // ------------------------------------------\r\n    // OK, so after all of that we have the angle of a line between the centerX and centerY of the wheel and\r\n    // the X and Y of the location on the canvas where the mouse was clicked. Now time to work out the segment\r\n    // this corresponds to. We can use the segment start and end angles for this.\r\n    var foundSegmentNumber = null\r\n    \r\n    for (var x = 1; x <= this.numSegments; x++) {\r\n      // Due to segments sharing start and end angles, if line is clicked will pick earlier segment.\r\n      if (locationAngle >= this.segments[x].startAngle && locationAngle <= this.segments[x].endAngle) {\r\n        // To ensure that a click anywhere on the canvas in the segment direction will not cause a\r\n        // segment to be matched, as well as the angles, we need to ensure the click was within the radius\r\n        // of the segment (or circle if no segment radius).\r\n        \r\n        // If the hypotenuseSideLength (length of location from the center of the wheel) is with the radius\r\n        // then we can assign the segment to the found segment and break out the loop.\r\n        \r\n        // Have to take in to account hollow wheels (doughnuts) so check is greater than innerRadius as\r\n        // well as less than or equal to the outerRadius of the wheel.\r\n        if (hypotenuseSideLength >= this.innerRadius && hypotenuseSideLength <= this.outerRadius) {\r\n          foundSegmentNumber = x\r\n          break\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Finally return the number.\r\n    return foundSegmentNumber\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // Returns a reference to the segment that is at the location of the pointer on the wheel.\r\n  // ====================================================================================================================\r\n  getIndicatedSegment() {\r\n    // Call function below to work this out and return the prizeNumber.\r\n    var prizeNumber = this.getIndicatedSegmentNumber()\r\n    \r\n    // Then simply return the segment in the segments array at that position.\r\n    return this.segments[prizeNumber]\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // Works out the segment currently pointed to by the pointer of the wheel. Normally called when the spinning has stopped\r\n  // to work out the prize the user has won. Returns the number of the segment in the segments array.\r\n  // ====================================================================================================================\r\n  getIndicatedSegmentNumber() {\r\n    var indicatedPrize = 0\r\n    var rawAngle = this.getRotationPosition()\r\n    \r\n    // Now we have the angle of the wheel, but we need to take in to account where the pointer is because\r\n    // will not always be at the 12 o'clock 0 degrees location.\r\n    var relativeAngle = Math.floor(this.pointerAngle - rawAngle)\r\n    \r\n    if (relativeAngle < 0) {\r\n      relativeAngle = 360 - Math.abs(relativeAngle)\r\n    }\r\n    \r\n    // Now we can work out the prize won by seeing what prize segment startAngle and endAngle the relativeAngle is between.\r\n    for (var x = 1; x < this.segments.length; x++) {\r\n      if (relativeAngle >= this.segments[x]['startAngle'] && relativeAngle <= this.segments[x]['endAngle']) {\r\n        indicatedPrize = x\r\n        break\r\n      }\r\n    }\r\n    \r\n    return indicatedPrize\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // Works out what Pin around the wheel is considered the current one which is the one which just passed the pointer.\r\n  // Used to work out if the pin has changed during the animation to tigger a sound.\r\n  // ====================================================================================================================\r\n  getCurrentPinNumber() {\r\n    var currentPin = 0\r\n    \r\n    if (this.pins) {\r\n      var rawAngle = this.getRotationPosition()\r\n      \r\n      // Now we have the angle of the wheel, but we need to take in to account where the pointer is because\r\n      // will not always be at the 12 o'clock 0 degrees location.\r\n      var relativeAngle = Math.floor(this.pointerAngle - rawAngle)\r\n      \r\n      if (relativeAngle < 0) {\r\n        relativeAngle = 360 - Math.abs(relativeAngle)\r\n      }\r\n      \r\n      // Work out the angle of the pins as this is simply 360 / the number of pins as they space evenly around.\r\n      var pinSpacing = 360 / this.pins.number\r\n      var totalPinAngle = 0\r\n      \r\n      // Now we can work out the pin by seeing what pins relativeAngle is between.\r\n      for (var x = 0; x < this.pins.number; x++) {\r\n        if (relativeAngle >= totalPinAngle && relativeAngle <= totalPinAngle + pinSpacing) {\r\n          currentPin = x\r\n          break\r\n        }\r\n        \r\n        totalPinAngle += pinSpacing\r\n      }\r\n      \r\n      // Now if rotating clockwise we must add 1 to the current pin as we want the pin which has just passed\r\n      // the pointer to be returned as the current pin, not the start of the one we are between.\r\n      if (this.animation.direction == 'clockwise') {\r\n        currentPin++\r\n        \r\n        if (currentPin > this.pins.number) {\r\n          currentPin = 0\r\n        }\r\n      }\r\n    }\r\n    \r\n    return currentPin\r\n  }\r\n  \r\n  // ==================================================================================================================================================\r\n  // Returns the rotation angle of the wheel corrected to 0-360 (i.e. removes all the multiples of 360).\r\n  // ==================================================================================================================================================\r\n  getRotationPosition() {\r\n    var rawAngle = this.rotationAngle // Get current rotation angle of wheel.\r\n    \r\n    // If positive work out how many times past 360 this is and then take the floor of this off the rawAngle.\r\n    if (rawAngle >= 0) {\r\n      if (rawAngle > 360) {\r\n        // Get floor of the number of times past 360 degrees.\r\n        var timesPast360 = Math.floor(rawAngle / 360)\r\n        \r\n        // Take all this extra off to get just the angle 0-360 degrees.\r\n        rawAngle = rawAngle - 360 * timesPast360\r\n      }\r\n    } else {\r\n      // Is negative, need to take off the extra then convert in to 0-360 degree value\r\n      // so if, for example, was -90 then final value will be (360 - 90) = 270 degrees.\r\n      if (rawAngle < -360) {\r\n        var timesPast360 = Math.ceil(rawAngle / 360) // Ceil when negative.\r\n        \r\n        rawAngle = rawAngle - 360 * timesPast360 // Is minus because dealing with negative.\r\n      }\r\n      \r\n      rawAngle = 360 + rawAngle // Make in the range 0-360. Is plus because raw is still negative.\r\n    }\r\n    \r\n    return rawAngle\r\n  }\r\n  \r\n  // ==================================================================================================================================================\r\n  // This function starts the wheel's animation by using the properties of the animation object of of the wheel to begin the a greensock tween.\r\n  // ==================================================================================================================================================\r\n  startAnimation() {\r\n    if (this.animation) {\r\n      // Call function to compute the animation properties.\r\n      this.computeAnimation()\r\n      \r\n      // Set this global variable to this object as an external function is required to call the draw() function on the wheel\r\n      // each loop of the animation as Greensock cannot call the draw function directly on this class.\r\n      winwheelToDrawDuringAnimation = this\r\n      \r\n      // Put together the properties of the greesock animation.\r\n      var properties = new Array(null)\r\n      properties[this.animation.propertyName] = this.animation.propertyValue // Here we set the property to be animated and its value.\r\n      properties['yoyo'] = this.animation.yoyo // Set others.\r\n      properties['repeat'] = this.animation.repeat\r\n      properties['ease'] = this.animation.easing\r\n      properties['onUpdate'] = winwheelAnimationLoop // Call function to re-draw the canvas.\r\n      properties['onComplete'] = winwheelStopAnimation\r\n      properties['duration'] = this.animation.duration// Call function to perform actions when animation has finished.\r\n      \r\n      \r\n      // Do the tween animation passing the properties from the animation object as an array of key => value pairs.\r\n      // Keep reference to the tween object in the wheel as that allows pausing, resuming, and stopping while the animation is still running.\r\n      this.tween = gsap.to(this, properties)\r\n    }\r\n  }\r\n  \r\n  // ==================================================================================================================================================\r\n  // Use same function function which needs to be outside the class for the callback when it stops because is finished.\r\n  // ==================================================================================================================================================\r\n  stopAnimation(canCallback) {\r\n    // @TODO as part of multiwheel, need to work out how to stop the tween for a single wheel but allow others to continue.\r\n    \r\n    // We can kill the animation using our tween object.\r\n    if (winwheelToDrawDuringAnimation) {\r\n      winwheelToDrawDuringAnimation.tween.kill()\r\n      \r\n      // Call the callback function.\r\n      winwheelStopAnimation(canCallback)\r\n    }\r\n    \r\n    // Ensure the winwheelToDrawDuringAnimation is set to this class.\r\n    winwheelToDrawDuringAnimation = this\r\n  }\r\n  \r\n  // ==================================================================================================================================================\r\n  // Pause animation by telling tween to pause.\r\n  // ==================================================================================================================================================\r\n  pauseAnimation() {\r\n    if (this.tween) {\r\n      this.tween.pause()\r\n    }\r\n  }\r\n  \r\n  // ==================================================================================================================================================\r\n  // Resume the animation by telling tween to continue playing it.\r\n  // ==================================================================================================================================================\r\n  resumeAnimation() {\r\n    if (this.tween) {\r\n      this.tween.play()\r\n    }\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // Called at the beginning of the startAnimation function and computes the values needed to do the animation\r\n  // before it starts. This allows the developer to change the animation properties after the wheel has been created\r\n  // and have the animation use the new values of the animation properties.\r\n  // ====================================================================================================================\r\n  computeAnimation() {\r\n    if (this.animation) {\r\n      // Set the animation parameters for the specified animation type including some sensible defaults if values have not been specified.\r\n      if (this.animation.type == 'spinOngoing') {\r\n        // When spinning the rotationAngle is the wheel property which is animated.\r\n        this.animation.propertyName = 'rotationAngle'\r\n        \r\n        if (this.animation.spins == null) {\r\n          this.animation.spins = 5\r\n        }\r\n        \r\n        if (this.animation.repeat == null) {\r\n          this.animation.repeat = -1 // -1 means it will repeat forever.\r\n        }\r\n        \r\n        if (this.animation.easing == null) {\r\n          this.animation.easing = 'Linear.easeNone'\r\n        }\r\n        \r\n        if (this.animation.yoyo == null) {\r\n          this.animation.yoyo = false\r\n        }\r\n        \r\n        // We need to calculate the propertyValue and this is the spins * 360 degrees.\r\n        this.animation.propertyValue = this.animation.spins * 360\r\n        \r\n        // If the direction is anti-clockwise then make the property value negative.\r\n        if (this.animation.direction == 'anti-clockwise') {\r\n          this.animation.propertyValue = 0 - this.animation.propertyValue\r\n        }\r\n      } else if (this.animation.type == 'spinToStop') {\r\n        // Spin to stop the rotation angle is affected.\r\n        this.animation.propertyName = 'rotationAngle'\r\n        \r\n        if (this.animation.spins == null) {\r\n          this.animation.spins = 5\r\n        }\r\n        \r\n        if (this.animation.repeat == null) {\r\n          this.animation.repeat = 0 // As this is spin to stop we don't normally want it repeated.\r\n        }\r\n        \r\n        if (this.animation.easing == null) {\r\n          this.animation.easing = 'Power3.easeOut' // This easing is fast start and slows over time.\r\n        }\r\n        \r\n        if (this.animation.stopAngle == null) {\r\n          // If the stop angle has not been specified then pick random between 0 and 359.\r\n          this.animation._stopAngle = Math.floor(Math.random() * 359)\r\n        } else {\r\n          // We need to set the internal to 360 minus what the user entered because the wheel spins past 0 without\r\n          // this it would indicate the prize on the opposite side of the wheel. We aslo need to take in to account\r\n          // the pointerAngle as the stop angle needs to be relative to that.\r\n          this.animation._stopAngle = 360 - this.animation.stopAngle + this.pointerAngle\r\n        }\r\n        \r\n        if (this.animation.yoyo == null) {\r\n          this.animation.yoyo = false\r\n        }\r\n        \r\n        // The property value is the spins * 360 then plus or minus the stopAngle depending on if the rotation is clockwise or anti-clockwise.\r\n        this.animation.propertyValue = this.animation.spins * 360\r\n        \r\n        if (this.animation.direction == 'anti-clockwise') {\r\n          this.animation.propertyValue = 0 - this.animation.propertyValue\r\n          \r\n          // Also if the value is anti-clockwise we need subtract the stopAngle (but to get the wheel to stop in the correct\r\n          // place this is 360 minus the stop angle as the wheel is rotating backwards).\r\n          this.animation.propertyValue -= 360 - this.animation._stopAngle\r\n        } else {\r\n          // Add the stopAngle to the propertyValue as the wheel must rotate around to this place and stop there.\r\n          this.animation.propertyValue += this.animation._stopAngle\r\n        }\r\n      } else if (this.animation.type == 'spinAndBack') {\r\n        // This is basically is a spin for a number of times then the animation reverses and goes back to start.\r\n        // If a repeat is specified then this can be used to make the wheel \"rock\" left and right.\r\n        \r\n        // Again this is a spin so the rotationAngle the property which is animated.\r\n        this.animation.propertyName = 'rotationAngle'\r\n        \r\n        if (this.animation.spins == null) {\r\n          this.animation.spins = 5\r\n        }\r\n        \r\n        if (this.animation.repeat == null) {\r\n          this.animation.repeat = 1 // This needs to be set to at least 1 in order for the animation to reverse.\r\n        }\r\n        \r\n        if (this.animation.easing == null) {\r\n          this.animation.easing = 'Power2.easeInOut' // This is slow at the start and end and fast in the middle.\r\n        }\r\n        \r\n        if (this.animation.yoyo == null) {\r\n          this.animation.yoyo = true // This needs to be set to true to have the animation reverse back like a yo-yo.\r\n        }\r\n        \r\n        if (this.animation.stopAngle == null) {\r\n          this.animation._stopAngle = 0\r\n        } else {\r\n          // We need to set the internal to 360 minus what the user entered\r\n          // because the wheel spins past 0 without this it would indicate the\r\n          // prize on the opposite side of the wheel.\r\n          this.animation._stopAngle = 360 - this.animation.stopAngle\r\n        }\r\n        \r\n        // The property value is the spins * 360 then plus or minus the stopAngle depending on if the rotation is clockwise or anti-clockwise.\r\n        this.animation.propertyValue = this.animation.spins * 360\r\n        \r\n        if (this.animation.direction == 'anti-clockwise') {\r\n          this.animation.propertyValue = 0 - this.animation.propertyValue\r\n          \r\n          // Also if the value is anti-clockwise we need subtract the stopAngle (but to get the wheel to stop in the correct\r\n          // place this is 360 minus the stop angle as the wheel is rotating backwards).\r\n          this.animation.propertyValue -= 360 - this.animation._stopAngle\r\n        } else {\r\n          // Add the stopAngle to the propertyValue as the wheel must rotate around to this place and stop there.\r\n          this.animation.propertyValue += this.animation._stopAngle\r\n        }\r\n      } else if (this.animation.type == 'custom') {\r\n        // Do nothing as all values must be set by the developer in the parameters\r\n        // especially the propertyName and propertyValue.\r\n      }\r\n    }\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // Calculates and returns a random stop angle inside the specified segment number. Value will always be 1 degree inside\r\n  // the start and end of the segment to avoid issue with the segment overlap.\r\n  // ====================================================================================================================\r\n  getRandomForSegment(segmentNumber) {\r\n    var stopAngle = 0\r\n    \r\n    if (segmentNumber) {\r\n      if (typeof this.segments[segmentNumber] !== 'undefined') {\r\n        var startAngle = this.segments[segmentNumber].startAngle\r\n        var endAngle = this.segments[segmentNumber].endAngle\r\n        var range = endAngle - startAngle - 2\r\n        \r\n        if (range > 0) {\r\n          stopAngle = startAngle + 1 + Math.floor(Math.random() * range)\r\n        } else {\r\n          console.log('Segment size is too small to safely get random angle inside it')\r\n        }\r\n      } else {\r\n        console.log('Segment ' + segmentNumber + ' undefined')\r\n      }\r\n    } else {\r\n      console.log('Segment number not specified')\r\n    }\r\n    \r\n    return stopAngle\r\n  }\r\n}\r\n\r\n// ====================================================================================================================\r\n// Class for the wheel pins.\r\n// ====================================================================================================================\r\nexport class Pin {\r\n  constructor(options) {\r\n    var defaultOptions = {\r\n      visible: true, // In future there might be some functionality related to the pins even if they are not displayed.\r\n      number: 36, // The number of pins. These are evenly distributed around the wheel.\r\n      outerRadius: 3, // Radius of the pins which determines their size.\r\n      fillStyle: 'grey', // Fill colour of the pins.\r\n      strokeStyle: 'black', // Line colour of the pins.\r\n      lineWidth: 1, // Line width of the pins.\r\n      margin: 3, // The space between outside edge of the wheel and the pins.\r\n    }\r\n    \r\n    // Now loop through the default options and create properties of this class set to the value for\r\n    // the option passed in if a value was, or if not then set the value of the default.\r\n    for (var key in defaultOptions) {\r\n      if (options != null && typeof options[key] !== 'undefined') this[key] = options[key]\r\n      else this[key] = defaultOptions[key]\r\n    }\r\n    \r\n    // Also loop though the passed in options and add anything specified not part of the class in to it as a property.\r\n    if (options != null) {\r\n      for (let key in options) {\r\n        if (typeof this[key] === 'undefined') {\r\n          this[key] = options[key]\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n// ====================================================================================================================\r\n// Class for the wheel spinning animation which like a segment becomes a property of the wheel.\r\n// ====================================================================================================================\r\nexport class Animation {\r\n  constructor(options) {\r\n    // Most of these options are null because the defaults are different depending on the type of animation.\r\n    var defaultOptions = {\r\n      type: 'spinOngoing', // For now there are only supported types are spinOngoing (continuous), spinToStop, spinAndBack, custom.\r\n      direction: 'clockwise', // clockwise or anti-clockwise.\r\n      propertyName: null, // The name of the winning wheel property to be affected by the animation.\r\n      propertyValue: null, // The value the property is to be set to at the end of the animation.\r\n      duration: 10, // Duration of the animation.\r\n      yoyo: false, // If the animation is to reverse back again i.e. yo-yo.\r\n      repeat: null, // The number of times the animation is to repeat, -1 will cause it to repeat forever.\r\n      easing: null, // The easing to use for the animation, default is the best for spin to stop. Use Linear.easeNone for no easing.\r\n      stopAngle: null, // Used for spinning, the angle at which the wheel is to stop.\r\n      spins: null, // Used for spinning, the number of complete 360 degree rotations the wheel is to do.\r\n      clearTheCanvas: null, // If set to true the canvas will be cleared before the wheel is re-drawn, false it will not, null the animation will abide by the value of this property for the parent wheel object.\r\n      callbackFinished: null, // Function to callback when the animation has finished.\r\n      callbackBefore: null, // Function to callback before the wheel is drawn each animation loop.\r\n      callbackAfter: null, // Function to callback after the wheel is drawn each animation loop.\r\n      callbackSound: null, // Function to callback if a sound should be triggered on change of segment or pin.\r\n      soundTrigger: 'segment', // Sound trigger type. Default is segment which triggers when segment changes, can be pin if to trigger when pin passes the pointer.\r\n    }\r\n    \r\n    // Now loop through the default options and create properties of this class set to the value for\r\n    // the option passed in if a value was, or if not then set the value of the default.\r\n    for (var key in defaultOptions) {\r\n      if (options != null && typeof options[key] !== 'undefined') this[key] = options[key]\r\n      else this[key] = defaultOptions[key]\r\n    }\r\n    \r\n    // Also loop though the passed in options and add anything specified not part of the class in to it as a property.\r\n    if (options != null) {\r\n      for (let key in options) {\r\n        if (typeof this[key] === 'undefined') {\r\n          this[key] = options[key]\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n// ====================================================================================================================\r\n// Class for segments. When creating a json of options can be passed in.\r\n// ====================================================================================================================\r\nexport class Segment {\r\n  constructor(options) {\r\n    // Define default options for segments, most are null so that the global defaults for the wheel\r\n    // are used if the values for a particular segment are not specifically set.\r\n    var defaultOptions = {\r\n      size: null, // Leave null for automatic. Valid values are degrees 0-360. Use percentToDegrees function if needed to convert.\r\n      text: '', // Default is blank.\r\n      fillStyle: null, // If null for the rest the global default will be used.\r\n      strokeStyle: null,\r\n      lineWidth: null,\r\n      textFontFamily: null,\r\n      textFontSize: null,\r\n      textFontWeight: null,\r\n      textOrientation: null,\r\n      textAlignment: null,\r\n      textDirection: null,\r\n      textMargin: null,\r\n      textFillStyle: null,\r\n      textStrokeStyle: null,\r\n      textLineWidth: null,\r\n      image: null, // Name/path to the image\r\n      imageDirection: null, // Direction of the image, can be set globally for the whole wheel.\r\n      imgData: null, // Image object created here and loaded with image data.\r\n      value: null,\r\n    }\r\n    \r\n    // Now loop through the default options and create properties of this class set to the value for\r\n    // the option passed in if a value was, or if not then set the value of the default.\r\n    for (var key in defaultOptions) {\r\n      if (options != null && typeof options[key] !== 'undefined') this[key] = options[key]\r\n      else this[key] = defaultOptions[key]\r\n    }\r\n    \r\n    // Also loop though the passed in options and add anything specified not part of the class in to it as a property.\r\n    // This allows the developer to easily add properties to segments at construction time.\r\n    if (options != null) {\r\n      for (let key in options) {\r\n        if (typeof this[key] === 'undefined') {\r\n          this[key] = options[key]\r\n        }\r\n      }\r\n    }\r\n    \r\n    // There are 2 additional properties which are set by the code, so need to define them here.\r\n    // They are not in the default options because they are not something that should be set by the user,\r\n    // the values are updated every time the updateSegmentSizes() function is called.\r\n    this.startAngle = 0\r\n    this.endAngle = 0\r\n  }\r\n  \r\n  // ====================================================================================================================\r\n  // Changes an image for a segment by setting a callback to render the wheel once the image has loaded.\r\n  // ====================================================================================================================\r\n  changeImage(image, imageDirection) {\r\n    // Change image name, blank image data.\r\n    this.image = image\r\n    this.imgData = null\r\n    \r\n    // Set direction.\r\n    if (imageDirection) {\r\n      this.imageDirection = imageDirection\r\n    }\r\n    \r\n    // Set imgData to a new image object, change set callback and change src (just like in wheel constructor).\r\n    winhweelAlreadyDrawn = false\r\n    this.imgData = new Image()\r\n    this.imgData.onload = winwheelLoadedImage\r\n    this.imgData.src = this.image\r\n  }\r\n}\r\n\r\n// ====================================================================================================================\r\n// Class that is created as property of the wheel. Draws line from center of the wheel out to edge of canvas to\r\n// indicate where the code thinks the pointer location is. Helpful to get alignment correct esp when using images.\r\n// ====================================================================================================================\r\nexport class PointerGuide {\r\n  constructor(options) {\r\n    var defaultOptions = {\r\n      display: false,\r\n      strokeStyle: 'red',\r\n      lineWidth: 3,\r\n    }\r\n    \r\n    // Now loop through the default options and create properties of this class set to the value for\r\n    // the option passed in if a value was, or if not then set the value of the default.\r\n    for (var key in defaultOptions) {\r\n      if (options != null && typeof options[key] !== 'undefined') {\r\n        this[key] = options[key]\r\n      } else {\r\n        this[key] = defaultOptions[key]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// ====================================================================================================================\r\n// This function takes the percent 0-100 and returns the number of degrees 0-360 this equates to.\r\n// ====================================================================================================================\r\nfunction winwheelPercentToDegrees(percentValue) {\r\n  var degrees = 0\r\n  \r\n  if (percentValue > 0 && percentValue <= 100) {\r\n    var divider = percentValue / 100\r\n    degrees = 360 * divider\r\n  }\r\n  \r\n  return degrees\r\n}\r\n\r\n// ====================================================================================================================\r\n// In order for the wheel to be re-drawn during the spin animation the function greesock calls needs to be outside\r\n// of the class as for some reason it errors if try to call winwheel.draw() directly.\r\n// ====================================================================================================================\r\nfunction winwheelAnimationLoop() {\r\n  if (winwheelToDrawDuringAnimation) {\r\n    // Check if the clearTheCanvas is specified for this animation, if not or it is not false then clear the canvas.\r\n    if (winwheelToDrawDuringAnimation.animation.clearTheCanvas != false) {\r\n      winwheelToDrawDuringAnimation.ctx.clearRect(\r\n        0,\r\n        0,\r\n        winwheelToDrawDuringAnimation.canvas.width,\r\n        winwheelToDrawDuringAnimation.canvas.height\r\n      )\r\n    }\r\n    \r\n    var callbackBefore = winwheelToDrawDuringAnimation.animation.callbackBefore\r\n    var callbackAfter = winwheelToDrawDuringAnimation.animation.callbackAfter\r\n    \r\n    // If there is a callback function which is supposed to be called before the wheel is drawn then do that.\r\n    if (callbackBefore != null) {\r\n      // If the property is a function then call it, otherwise eval the proptery as javascript code.\r\n      if (typeof callbackBefore === 'function') {\r\n        callbackBefore()\r\n      } else {\r\n        eval(callbackBefore)\r\n      }\r\n    }\r\n    \r\n    // Call code to draw the wheel, pass in false as we never want it to clear the canvas as that would wipe anything drawn in the callbackBefore.\r\n    winwheelToDrawDuringAnimation.draw(false)\r\n    \r\n    // If there is a callback function which is supposed to be called after the wheel has been drawn then do that.\r\n    if (callbackAfter != null) {\r\n      // If the property is a function then call it, otherwise eval the proptery as javascript code.\r\n      if (typeof callbackAfter === 'function') {\r\n        callbackAfter()\r\n      } else {\r\n        eval(callbackAfter)\r\n      }\r\n    }\r\n    \r\n    // If there is a sound callback then call a function which figures out if the sound should be triggered\r\n    // and if so then call the function specified by the developer.\r\n    if (winwheelToDrawDuringAnimation.animation.callbackSound) {\r\n      winwheelTriggerSound()\r\n    }\r\n  }\r\n}\r\n\r\n// ====================================================================================================================\r\n// This function figures out if the callbackSound function needs to be called by working out if the segment or pin\r\n// has changed since the last animation loop.\r\n// ====================================================================================================================\r\nfunction winwheelTriggerSound() {\r\n  // If this property does not exist then add it as a property of the winwheel.\r\n  if (winwheelToDrawDuringAnimation.hasOwnProperty('_lastSoundTriggerNumber') == false) {\r\n    winwheelToDrawDuringAnimation._lastSoundTriggerNumber = 0\r\n  }\r\n  \r\n  var callbackSound = winwheelToDrawDuringAnimation.animation.callbackSound\r\n  var currentTriggerNumber = 0\r\n  \r\n  // Now figure out if the sound callback should be called depending on the sound trigger type.\r\n  if (winwheelToDrawDuringAnimation.animation.soundTrigger == 'pin') {\r\n    // So for the pin type we need to work out which pin we are between.\r\n    currentTriggerNumber = winwheelToDrawDuringAnimation.getCurrentPinNumber()\r\n  } else {\r\n    // Check on the change of segment by working out which segment we are in.\r\n    // We can utilise the existing getIndiatedSegmentNumber function.\r\n    currentTriggerNumber = winwheelToDrawDuringAnimation.getIndicatedSegmentNumber()\r\n  }\r\n  \r\n  // If the current number is not the same as last time then call the sound callback.\r\n  if (currentTriggerNumber != winwheelToDrawDuringAnimation._lastSoundTriggerNumber) {\r\n    // If the property is a function then call it, otherwise eval the proptery as javascript code.\r\n    if (typeof callbackSound === 'function') {\r\n      callbackSound()\r\n    } else {\r\n      eval(callbackSound)\r\n    }\r\n    \r\n    // Also update the last sound trigger with the current number.\r\n    winwheelToDrawDuringAnimation._lastSoundTriggerNumber = currentTriggerNumber\r\n  }\r\n}\r\n\r\n// ====================================================================================================================\r\n// This function is called-back when the greensock animation has finished.\r\n// ====================================================================================================================\r\nvar winwheelToDrawDuringAnimation = null // This global is set by the winwheel class to the wheel object to be re-drawn.\r\n\r\nfunction winwheelStopAnimation(canCallback) {\r\n  // When the animation is stopped if canCallback is not false then try to call the callback.\r\n  // false can be passed in to stop the after happening if the animation has been stopped before it ended normally.\r\n  if (canCallback != false) {\r\n    var callback = winwheelToDrawDuringAnimation.animation.callbackFinished\r\n    \r\n    if (callback != null) {\r\n      // If the callback is a function then call it, otherwise evaluate the property as javascript code.\r\n      if (typeof callback === 'function') {\r\n        // Pass back the indicated segment as 99% of the time you will want to know this to inform the user of their prize.\r\n        callback(winwheelToDrawDuringAnimation.getIndicatedSegment())\r\n      } else {\r\n        eval(callback)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// ====================================================================================================================\r\n// Called after the image has loaded for each segment. Once all the images are loaded it then calls the draw function\r\n// on the wheel to render it. Used in constructor and also when a segment image is changed.\r\n// ====================================================================================================================\r\nvar winhweelAlreadyDrawn = false\r\n\r\nfunction winwheelLoadedImage() {\r\n  // Prevent multiple drawings of the wheel which ocurrs without this check due to timing of function calls.\r\n  if (winhweelAlreadyDrawn == false) {\r\n    // Set to 0.\r\n    var winwheelImageLoadCount = 0\r\n    \r\n    // Loop though all the segments of the wheel and check if image data loaded, if so increment counter.\r\n    for (var i = 1; i <= winwheelToDrawDuringAnimation.numSegments; i++) {\r\n      // Check the image data object is not null and also that the image has completed loading by checking\r\n      // that a property of it such as the height has some sort of true value.\r\n      if (\r\n        winwheelToDrawDuringAnimation.segments[i].imgData != null &&\r\n        winwheelToDrawDuringAnimation.segments[i].imgData.height\r\n      ) {\r\n        winwheelImageLoadCount++\r\n      }\r\n    }\r\n    \r\n    // If number of images loaded matches the segments then all the images for the wheel are loaded.\r\n    if (winwheelImageLoadCount == winwheelToDrawDuringAnimation.numSegments) {\r\n      // Call draw function to render the wheel.\r\n      winhweelAlreadyDrawn = true\r\n      winwheelToDrawDuringAnimation.draw()\r\n    }\r\n  }\r\n}","export enum RouteNames {\r\n  LOGIN = '/login',\r\n  REGISTER = '/register',\r\n  USER_PROFILE = '/user/:userUrl/',\r\n  USER_PROFILE_BASE = '/user/',\r\n  USER_PROFILE_BOOKS = 'books',\r\n  USER_PROFILE_REVIEWS = 'reviews',\r\n  USER_SETTINGS = '/user/:userUrl/settings',\r\n  RANDOM_BOOK = '/random-book',\r\n  CLUB_PROFILE = '/club/:clubUrl',\r\n  CLUB_PROFILE_BASE = '/club/',\r\n  CLUB_PROFILE_RULES = 'rules',\r\n  CLUB_PROFILE_MEMBERS = 'members',\r\n  CLUB_PROFILE_BOOKS = 'books',\r\n  CLUB_PROFILE_REVIEWS = 'reviews',\r\n  CLUB_PROFILE_HISTORY = 'history',\r\n  CLUB_SETTINGS = '/club/:clubUrl/settings',\r\n  CLUB_WHEEL = '/club/:clubUrl/wheel',\r\n}","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSettings(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.6751 14.6649L20.1399 13.3524C20.2126 12.9071 20.2501 12.4524 20.2501 11.9977C20.2501 11.543 20.2126 11.0883 20.1399 10.643L21.6751 9.33051C21.7908 9.23138 21.8737 9.09936 21.9127 8.95199C21.9516 8.80462 21.9447 8.64889 21.893 8.50551L21.8719 8.44457C21.4493 7.26338 20.8165 6.1684 20.004 5.21254L19.9618 5.16332C19.8632 5.04742 19.7318 4.96411 19.585 4.92437C19.4381 4.88462 19.2827 4.8903 19.1391 4.94066L17.2336 5.61801C16.5305 5.04144 15.7454 4.58676 14.8969 4.26801L14.529 2.27582C14.5012 2.12592 14.4285 1.98801 14.3205 1.88042C14.2125 1.77283 14.0743 1.70065 13.9243 1.67347L13.861 1.66176C12.6399 1.44144 11.3555 1.44144 10.1344 1.66176L10.0711 1.67347C9.92114 1.70065 9.78295 1.77283 9.67494 1.88042C9.56694 1.98801 9.49422 2.12592 9.46646 2.27582L9.09615 4.27738C8.25448 4.5962 7.47068 5.05064 6.77584 5.62269L4.8563 4.94066C4.71279 4.8899 4.55722 4.88401 4.41028 4.92379C4.26333 4.96356 4.13197 5.0471 4.03365 5.16332L3.99146 5.21254C3.17993 6.16908 2.54718 7.26387 2.12349 8.44457L2.1024 8.50551C1.99693 8.79847 2.08365 9.1266 2.32037 9.33051L3.87427 10.6571C3.80162 11.0977 3.76646 11.5477 3.76646 11.9953C3.76646 12.4453 3.80162 12.8953 3.87427 13.3336L2.32037 14.6602C2.20457 14.7593 2.1217 14.8913 2.08277 15.0387C2.04383 15.1861 2.05068 15.3418 2.1024 15.4852L2.12349 15.5461C2.54771 16.7274 3.17583 17.8172 3.99146 18.7782L4.03365 18.8274C4.13221 18.9433 4.26358 19.0266 4.41043 19.0663C4.55729 19.1061 4.71274 19.1004 4.8563 19.05L6.77584 18.368C7.47427 18.9422 8.25474 19.3969 9.09615 19.7133L9.46646 21.7149C9.49422 21.8648 9.56694 22.0027 9.67494 22.1103C9.78295 22.2179 9.92114 22.29 10.0711 22.3172L10.1344 22.3289C11.3667 22.5504 12.6287 22.5504 13.861 22.3289L13.9243 22.3172C14.0743 22.29 14.2125 22.2179 14.3205 22.1103C14.4285 22.0027 14.5012 21.8648 14.529 21.7149L14.8969 19.7227C15.745 19.4048 16.5346 18.9486 17.2336 18.3727L19.1391 19.05C19.2826 19.1008 19.4382 19.1067 19.5851 19.0669C19.7321 19.0271 19.8634 18.9436 19.9618 18.8274L20.004 18.7782C20.8196 17.8149 21.4477 16.7274 21.8719 15.5461L21.893 15.4852C21.9985 15.1969 21.9118 14.8688 21.6751 14.6649ZM18.4758 10.9196C18.5344 11.2735 18.5649 11.6368 18.5649 12C18.5649 12.3633 18.5344 12.7266 18.4758 13.0805L18.3211 14.0203L20.0719 15.518C19.8065 16.1295 19.4715 16.7083 19.0735 17.243L16.8985 16.4719L16.1626 17.0766C15.6024 17.536 14.979 17.8969 14.304 18.15L13.411 18.4852L12.9915 20.7586C12.3295 20.8336 11.6612 20.8336 10.9993 20.7586L10.5797 18.4805L9.6938 18.1407C9.02584 17.8875 8.40474 17.5266 7.84927 17.0696L7.11334 16.4625L4.92427 17.2407C4.52584 16.7039 4.19302 16.125 3.92583 15.5157L5.69537 14.0039L5.54302 13.0664C5.48677 12.7172 5.4563 12.3563 5.4563 12C5.4563 11.6414 5.48443 11.2828 5.54302 10.9336L5.69537 9.99613L3.92583 8.48441C4.19068 7.87269 4.52584 7.29613 4.92427 6.75941L7.11334 7.53754L7.84927 6.93051C8.40474 6.47347 9.02584 6.11254 9.6938 5.85941L10.5821 5.52426L11.0016 3.24613C11.6602 3.17113 12.3329 3.17113 12.9938 3.24613L13.4133 5.51957L14.3063 5.85472C14.979 6.10785 15.6047 6.46879 16.1649 6.92816L16.9008 7.53285L19.0758 6.76175C19.4743 7.29847 19.8071 7.87738 20.0743 8.48676L18.3235 9.98441L18.4758 10.9196ZM12.0001 7.64066C9.72193 7.64066 7.87505 9.48754 7.87505 11.7657C7.87505 14.0438 9.72193 15.8907 12.0001 15.8907C14.2782 15.8907 16.1251 14.0438 16.1251 11.7657C16.1251 9.48754 14.2782 7.64066 12.0001 7.64066ZM13.8563 13.6219C13.6128 13.8661 13.3235 14.0597 13.0049 14.1916C12.6864 14.3236 12.3449 14.3912 12.0001 14.3907C11.2993 14.3907 10.6407 14.1164 10.1438 13.6219C9.89964 13.3784 9.70602 13.0891 9.57409 12.7705C9.44216 12.452 9.37452 12.1105 9.37505 11.7657C9.37505 11.0649 9.64927 10.4063 10.1438 9.90941C10.6407 9.41254 11.2993 9.14066 12.0001 9.14066C12.7008 9.14066 13.3594 9.41254 13.8563 9.90941C14.1005 10.1529 14.2941 10.4422 14.426 10.7608C14.5579 11.0793 14.6256 11.4209 14.6251 11.7657C14.6251 12.4664 14.3508 13.125 13.8563 13.6219Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSettings);\nexport default __webpack_public_path__ + \"static/media/settings.25403ca4.svg\";\nexport { ForwardRef as ReactComponent };","import {TypedUseSelectorHook, useSelector} from 'react-redux'\r\nimport type { RootState} from '../store'\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import React, { FC } from 'react';\r\nimport './profile-title.scss';\r\n\r\ninterface ProfileTitleProps {\r\n  title: string;\r\n}\r\n\r\nconst ProfileTitle: FC<ProfileTitleProps> = ({ title, ...rest }) => {\r\n  return (\r\n    <div className=\"profile-title\">\r\n      <h1 className=\"profile-title__text\">{title}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileTitle;","import { UserData } from '../../../models/user-data';\r\n\r\nexport interface AuthState {\r\n  isAuth: boolean;\r\n  userData: UserData | null;\r\n  // accessToken: string | null;\r\n}\r\n\r\nexport enum AuthActionEnum {\r\n  SET_USER_DATA = 'SET_USER_DATA',\r\n  SET_IS_AUTH = 'SET_IS_AUTH'\r\n}\r\n\r\nexport interface SetIsAuthAction {\r\n  type: AuthActionEnum.SET_IS_AUTH;\r\n  payload: boolean;\r\n}\r\n\r\nexport interface SetUserDataAction {\r\n  type: AuthActionEnum.SET_USER_DATA;\r\n  payload: UserData | null;\r\n}\r\n\r\nexport type AuthAction =\r\n  SetUserDataAction |\r\n  SetIsAuthAction;","import React, { ButtonHTMLAttributes, FC } from 'react';\r\nimport './transparent-button.scss';\r\n\r\ninterface TransparentButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {}\r\n\r\nconst TransparentButton: FC<TransparentButtonProps> = ({ className, children, ...rest }) => {\r\n  return (\r\n    <button {...rest} className={`${className ? `transparent-button ${className}` : 'transparent-button'}`}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default TransparentButton;","import axios from 'axios';\r\n\r\nexport const API_URL: string = process.env.REACT_APP_API_URL || '';\r\n\r\nlet currentUserUrl = JSON.parse(localStorage.getItem('userData') || '{}')?.url;\r\n\r\nexport const setUserUrl = (url: string) => {\r\n  currentUserUrl = url;\r\n}\r\n\r\nconst $api = axios.create({\r\n  withCredentials: true,\r\n  baseURL: API_URL\r\n})\r\n\r\n$api.interceptors.response.use(config => {\r\n  return config\r\n}, async error => {\r\n  const originalRequest = error.config;\r\n  if (error.response.status == 401 && error.config && !error.config._isRetry) {\r\n    originalRequest._isRetry = true;\r\n    try {\r\n      const response = await axios.post(API_URL + 'auth/refresh',\r\n        {userUrl: currentUserUrl}, {withCredentials: true});\r\n      $api.defaults.headers.common['Authorization'] = `Bearer ${response.headers['x-access-token']}`\r\n      originalRequest.headers.Authorization = `Bearer ${response.headers['x-access-token']}`;\r\n      return $api.request(originalRequest);\r\n    } catch (error) {\r\n      console.log('Not Authorized');\r\n    }\r\n  }\r\n  throw error;\r\n})\r\n\r\nexport default $api;","export interface LoadingPageState {\r\n  isLoadingPage: boolean;\r\n}\r\n\r\nexport enum LoadingPageEnum {\r\n  SET_LOADING_PAGE_FALSE = 'SET_LOADING_PAGE_FALSE',\r\n  SET_LOADING_PAGE_TRUE = 'SET_LOADING_PAGE_TRUE',\r\n}\r\n\r\nexport interface SetLoadingPageFalseAction {\r\n  type: LoadingPageEnum.SET_LOADING_PAGE_FALSE;\r\n  payload: false;\r\n}\r\n\r\nexport interface SetLoadingPageTrueAction {\r\n  type: LoadingPageEnum.SET_LOADING_PAGE_TRUE;\r\n  payload: true;\r\n}\r\n\r\nexport type LoadingPageAction = SetLoadingPageTrueAction | SetLoadingPageFalseAction;\r\n","import $api from '../api';\r\nimport { UserData } from '../models/user-data';\r\n\r\nconst AUTH_PREFIX = 'auth/';\r\n\r\nconst authService = {\r\n  login: async (email: string, password: string) => {\r\n    return $api.post<UserData>(AUTH_PREFIX + 'login', { email, password });\r\n  },\r\n\r\n  logout: async () => {\r\n    return $api.get(AUTH_PREFIX + 'logout');\r\n  },\r\n\r\n  register: async (username: string, email: string, password: string) => {\r\n    return $api.post(AUTH_PREFIX + 'register', { username, email, password });\r\n  },\r\n};\r\n\r\nexport default authService;","import $api from '../api';\r\nimport { ClubProfileInfo } from '../models/club-profile-info';\r\nimport { UserData } from '../models/user-data';\r\nimport { ClubBooks } from '../models/club-books';\r\nimport { ClubSettingsInfo } from '../models/club-settings-info';\r\nimport { BookData } from '../models/book-data';\r\nimport { BasicUserInfo } from '../models/basic-user-info';\r\n\r\nconst CLUB_PREFIX = 'club/';\r\n\r\nconst ClubService = {\r\n  getClubProfileInfo: (clubUrl: string) => {\r\n    return $api.get<ClubProfileInfo>(CLUB_PREFIX + clubUrl + '/info');\r\n  },\r\n\r\n  createClub: (clubname: string) => {\r\n    return $api.post<UserData>(CLUB_PREFIX + 'create', { clubname });\r\n  },\r\n\r\n  joinClub: (clubUrl: string) => {\r\n    return $api.post<UserData>(CLUB_PREFIX + clubUrl + '/join');\r\n  },\r\n\r\n  leaveClub: (clubUrl: string) => {\r\n    return $api.post<UserData>(CLUB_PREFIX + clubUrl + '/leave');\r\n  },\r\n\r\n  getClubBooks: (clubUrl: string) => {\r\n    return $api.get<ClubBooks[]>(CLUB_PREFIX + clubUrl + '/books');\r\n  },\r\n\r\n  deleteClubBook: (clubUrl: string, userUrl: string, index: number) => {\r\n    return $api.post<string>(CLUB_PREFIX + clubUrl + '/deleteBook', {\r\n      userUrl,\r\n      index,\r\n    });\r\n  },\r\n\r\n  getSettingsInfo: (clubUrl: string) => {\r\n    return $api.get<ClubSettingsInfo>(`${CLUB_PREFIX}${clubUrl}/settingsInfo`);\r\n  },\r\n\r\n  updateSettings: (clubUrl: string, clubname: string, masterUrl: string, rules: string) => {\r\n    return $api.post<string>(`${CLUB_PREFIX}${clubUrl}/updateSettings`, { clubname, masterUrl, rules });\r\n  },\r\n\r\n  confirmBook: (clubUrl: string, book: string) => {\r\n    return $api.post<string>(`${CLUB_PREFIX}${clubUrl}/confirmBook`, { book });\r\n  },\r\n\r\n  getChosenBooksHistory: (clubUrl: string) => {\r\n    return $api.get<BookData[]>(`${CLUB_PREFIX}${clubUrl}/history`);\r\n  },\r\n\r\n  getClubMembers: (clubUrl: string) => {\r\n    return $api.get<BasicUserInfo[]>(`${CLUB_PREFIX}${clubUrl}/members`);\r\n  },\r\n\r\n  getClubRules: (clubUrl: string) => {\r\n    return $api.get<string>(`${CLUB_PREFIX}${clubUrl}/rules`);\r\n  }\r\n};\r\n\r\nexport default ClubService;\r\n","import { LoadingPageEnum, SetLoadingPageFalseAction, SetLoadingPageTrueAction } from './types';\r\n\r\nexport const LoadingPageActionCreators = {\r\n  setLoadingPageTrue: (): SetLoadingPageTrueAction => ({\r\n    type: LoadingPageEnum.SET_LOADING_PAGE_TRUE,\r\n    payload: true,\r\n  }),\r\n  setLoadingPageFalse: (): SetLoadingPageFalseAction => ({\r\n    type: LoadingPageEnum.SET_LOADING_PAGE_FALSE,\r\n    payload: false,\r\n  }),\r\n};\r\n","export type ThemeStyleType = 'light' | 'dark';\r\n\r\nexport interface ThemeState {\r\n  themeStyle: ThemeStyleType;\r\n}\r\n\r\nexport enum ThemeActionEnum {\r\n  SET_THEME = 'SET_THEME',\r\n}\r\n\r\nexport interface SetThemeAction {\r\n  type: ThemeActionEnum.SET_THEME;\r\n  payload: ThemeStyleType;\r\n}\r\n\r\nexport type ThemeAction = SetThemeAction;","import { SetThemeAction, ThemeActionEnum, ThemeStyleType } from './types';\r\n\r\nexport const ThemeActionCreators = {\r\n  setTheme: (value: ThemeStyleType): SetThemeAction => ({\r\n    type: ThemeActionEnum.SET_THEME,\r\n    payload: value\r\n  }),\r\n};","export type NotificationType = 'success' | 'error';\r\n\r\nexport interface Notification {\r\n  message: string;\r\n  notificationType: NotificationType;\r\n  id: number;\r\n}\r\n\r\nexport interface NotificationsState {\r\n  notifications: Notification[];\r\n}\r\n\r\nexport enum NotificationsActionsEnum {\r\n  SET_NOTIFICATION = 'SET_NOTIFICATION',\r\n  DELETE_NOTIFICATION = 'DELETE_NOTIFICATION'\r\n}\r\n\r\nexport interface SetNotification {\r\n  type: NotificationsActionsEnum.SET_NOTIFICATION;\r\n  payload: Notification;\r\n}\r\n\r\nexport interface DeleteNotification {\r\n  type: NotificationsActionsEnum.DELETE_NOTIFICATION;\r\n  payload: number;\r\n}\r\n\r\nexport type NotificationsAction = SetNotification | DeleteNotification;","import { AuthActionEnum, SetIsAuthAction, SetUserDataAction } from './types';\r\nimport { UserData } from '../../../models/user-data';\r\nimport { AppDispatch } from '../../index';\r\nimport AuthService from '../../../services/auth.service';\r\nimport $api, { setUserUrl } from '../../../api';\r\nimport ClubService from '../../../services/club.service';\r\nimport { LoadingPageActionCreators } from '../loading-page/action-creators';\r\nimport { ThemeActionCreators } from '../theme/action-creators';\r\n\r\nexport const AuthActionCreators = {\r\n  setIsAuth: (auth: boolean): SetIsAuthAction => ({ type: AuthActionEnum.SET_IS_AUTH, payload: auth }),\r\n  setUserData: (userData: UserData | null): SetUserDataAction => ({\r\n    type: AuthActionEnum.SET_USER_DATA,\r\n    payload: userData,\r\n  }),\r\n  login: (email: string, password: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      const response = await AuthService.login(email, password);\r\n      localStorage.setItem('isAuth', JSON.stringify(true));\r\n      dispatch(AuthActionCreators.setIsAuth(true));\r\n      localStorage.setItem('userData', JSON.stringify(response.data));\r\n      dispatch(AuthActionCreators.setUserData(response.data));\r\n      setUserUrl(response.data.url);\r\n      $api.defaults.headers.common['Authorization'] = `Bearer ${response.headers['x-access-token']}`;\r\n    } catch (error: any) {\r\n      throw error;\r\n    }\r\n  },\r\n  logout: () => async (dispatch: AppDispatch) => {\r\n    try {\r\n      await AuthService.logout();\r\n      localStorage.removeItem('isAuth');\r\n      dispatch(AuthActionCreators.setIsAuth(false));\r\n      localStorage.removeItem('userData');\r\n      dispatch(AuthActionCreators.setUserData(null));\r\n      localStorage.setItem('themeStyle', 'light');\r\n      dispatch(ThemeActionCreators.setTheme('light'));\r\n      document.body.classList.remove('dark');\r\n      $api.defaults.headers.common['Authorization'] = '';\r\n      setUserUrl('');\r\n    } catch (error: any) {\r\n      throw error;\r\n    }\r\n  },\r\n  joinClub: (clubUrl: string) => async (dispatch: AppDispatch) => {\r\n    dispatch(LoadingPageActionCreators.setLoadingPageTrue());\r\n    try {\r\n      const response = await ClubService.joinClub(clubUrl);\r\n      localStorage.setItem('userData', JSON.stringify(response.data));\r\n      dispatch(AuthActionCreators.setUserData(response.data));\r\n    } catch (error: any) {\r\n      throw error;\r\n    } finally {\r\n      dispatch(LoadingPageActionCreators.setLoadingPageFalse());\r\n    }\r\n  },\r\n  leaveClub: (clubUrl: string) => async (dispatch: AppDispatch) => {\r\n    dispatch(LoadingPageActionCreators.setLoadingPageTrue());\r\n    try {\r\n      const response = await ClubService.leaveClub(clubUrl);\r\n      localStorage.setItem('userData', JSON.stringify(response.data));\r\n      dispatch(AuthActionCreators.setUserData(response.data));\r\n    } catch (error: any) {\r\n      throw error;\r\n    } finally {\r\n      dispatch(LoadingPageActionCreators.setLoadingPageFalse());\r\n    }\r\n  }\r\n};\r\n","import { DeleteNotification, Notification, NotificationsActionsEnum, NotificationType, SetNotification } from './types';\r\nimport { AppDispatch } from '../../index';\r\n\r\nexport const NotificationsActionCreators = {\r\n  setNotification: (notification: Notification): SetNotification => ({\r\n    type: NotificationsActionsEnum.SET_NOTIFICATION,\r\n    payload: notification,\r\n  }),\r\n  deleteNotification: (deleteTime: number): DeleteNotification => ({\r\n    type: NotificationsActionsEnum.DELETE_NOTIFICATION,\r\n    payload: deleteTime\r\n  }),\r\n  addNotification: (message: string, notificationType: NotificationType) => (dispatch: AppDispatch) => {\r\n    const deleteTime = 2000;\r\n    const notification: Notification = {message, notificationType, id: Date.now()}\r\n    dispatch(NotificationsActionCreators.setNotification(notification));\r\n    setTimeout(() => {\r\n      dispatch(NotificationsActionCreators.deleteNotification(notification.id))\r\n    }, deleteTime)\r\n  }\r\n};\r\n","export interface ModalState {\r\n  isShow: boolean;\r\n  reactComponent: JSX.Element | null;\r\n}\r\n\r\nexport enum ModalActionEnum {\r\n  SHOW_MODAL = 'SHOW_MODAL',\r\n  CLOSE_MODAL = 'CLOSE_MODAL'\r\n}\r\n\r\nexport interface ShowModalAction {\r\n  type: ModalActionEnum.SHOW_MODAL;\r\n  payload: JSX.Element;\r\n}\r\n\r\nexport interface CloseModalAction {\r\n  type: ModalActionEnum.CLOSE_MODAL;\r\n  payload: false;\r\n}\r\n\r\nexport type ModalAction = ShowModalAction | CloseModalAction;","import { CloseModalAction, ModalActionEnum, ShowModalAction } from './types';\r\n\r\nexport const ModalActionCreators = {\r\n  showModal: (component: JSX.Element): ShowModalAction => ({\r\n    type: ModalActionEnum.SHOW_MODAL,\r\n    payload: component,\r\n  }),\r\n  closeModal: (): CloseModalAction => ({\r\n    type: ModalActionEnum.CLOSE_MODAL,\r\n    payload: false,\r\n  }),\r\n};\r\n","export interface LoadingTabState {\r\n  isLoadingTab: boolean;\r\n}\r\n\r\nexport enum LoadingTabEnum {\r\n  SET_LOADING_TAB_FALSE = 'SET_LOADING_TAB_FALSE',\r\n  SET_LOADING_TAB_TRUE = 'SET_LOADING_TAB_TRUE',\r\n}\r\n\r\nexport interface SetLoadingTabFalseAction {\r\n  type: LoadingTabEnum.SET_LOADING_TAB_FALSE;\r\n  payload: false;\r\n}\r\n\r\nexport interface SetLoadingTabTrueAction {\r\n  type: LoadingTabEnum.SET_LOADING_TAB_TRUE;\r\n  payload: true;\r\n}\r\n\r\nexport type LoadingTabAction = SetLoadingTabTrueAction | SetLoadingTabFalseAction;\r\n","import { LoadingTabEnum, SetLoadingTabFalseAction, SetLoadingTabTrueAction } from './types';\r\n\r\nexport const LoadingTabActionCreators = {\r\n  setLoadingTabTrue: (): SetLoadingTabTrueAction => ({\r\n    type: LoadingTabEnum.SET_LOADING_TAB_TRUE,\r\n    payload: true,\r\n  }),\r\n  setLoadingTabFalse: (): SetLoadingTabFalseAction => ({\r\n    type: LoadingTabEnum.SET_LOADING_TAB_FALSE,\r\n    payload: false,\r\n  }),\r\n};\r\n","export interface LoadingModalState {\r\n  isLoadingModal: boolean;\r\n}\r\n\r\nexport enum LoadingModalEnum {\r\n  SET_LOADING_MODAL_FALSE = 'SET_LOADING_MODAL_FALSE',\r\n  SET_LOADING_MODAL_TRUE = 'SET_LOADING_MODAL_TRUE',\r\n}\r\n\r\nexport interface SetLoadingModalFalseAction {\r\n  type: LoadingModalEnum.SET_LOADING_MODAL_FALSE;\r\n  payload: false;\r\n}\r\n\r\nexport interface SetLoadingModalTrueAction {\r\n  type: LoadingModalEnum.SET_LOADING_MODAL_TRUE;\r\n  payload: true;\r\n}\r\n\r\nexport type LoadingModalAction = SetLoadingModalTrueAction | SetLoadingModalFalseAction;\r\n","import { LoadingModalEnum, SetLoadingModalFalseAction, SetLoadingModalTrueAction } from './types';\r\n\r\nexport const LoadingModalActionCreators = {\r\n  setLoadingModalTrue: (): SetLoadingModalTrueAction => ({\r\n    type: LoadingModalEnum.SET_LOADING_MODAL_TRUE,\r\n    payload: true,\r\n  }),\r\n  setLoadingModalFalse: (): SetLoadingModalFalseAction => ({\r\n    type: LoadingModalEnum.SET_LOADING_MODAL_FALSE,\r\n    payload: false,\r\n  }),\r\n};\r\n","export interface LoadingPostState {\r\n  isLoadingPost: boolean;\r\n}\r\n\r\nexport enum LoadingPostEnum {\r\n  SET_LOADING_POST_FALSE = 'SET_LOADING_POST_FALSE',\r\n  SET_LOADING_POST_TRUE = 'SET_LOADING_POST_TRUE',\r\n}\r\n\r\nexport interface SetLoadingPostFalseAction {\r\n  type: LoadingPostEnum.SET_LOADING_POST_FALSE;\r\n  payload: false;\r\n}\r\n\r\nexport interface SetLoadingPostTrueAction {\r\n  type: LoadingPostEnum.SET_LOADING_POST_TRUE;\r\n  payload: true;\r\n}\r\n\r\nexport type LoadingPostAction = SetLoadingPostTrueAction | SetLoadingPostFalseAction;\r\n","import { LoadingPostEnum, SetLoadingPostFalseAction, SetLoadingPostTrueAction } from './types';\r\n\r\nexport const LoadingPostActionCreators = {\r\n  setLoadingPostTrue: (): SetLoadingPostTrueAction => ({\r\n    type: LoadingPostEnum.SET_LOADING_POST_TRUE,\r\n    payload: true,\r\n  }),\r\n  setLoadingPostFalse: (): SetLoadingPostFalseAction => ({\r\n    type: LoadingPostEnum.SET_LOADING_POST_FALSE,\r\n    payload: false,\r\n  }),\r\n};\r\n","export interface BubbleState {\r\n  isShow: boolean;\r\n  reactComponent: JSX.Element | null;\r\n  wrapperClass: string | null;\r\n}\r\n\r\nexport enum BubbleActionEnum {\r\n  SHOW_BUBBLE = 'SHOW_BUBBLE',\r\n  CLOSE_BUBBLE = 'CLOSE_BUBBLE',\r\n}\r\n\r\nexport interface ShowBubbleAction {\r\n  type: BubbleActionEnum.SHOW_BUBBLE;\r\n  payload: {\r\n    reactComponent: JSX.Element;\r\n    wrapperClass: string | null;\r\n  };\r\n}\r\n\r\nexport interface CloseBubbleAction {\r\n  type: BubbleActionEnum.CLOSE_BUBBLE;\r\n  payload: false;\r\n}\r\n\r\nexport type BubbleAction = ShowBubbleAction | CloseBubbleAction;","import { BubbleActionEnum, CloseBubbleAction, ShowBubbleAction } from './types';\r\n\r\nexport const BubbleActionCreators = {\r\n  showBubble: (reactComponent: JSX.Element, wrapperClass?: string): ShowBubbleAction => {\r\n    if (wrapperClass) {\r\n      return {\r\n        type: BubbleActionEnum.SHOW_BUBBLE,\r\n        payload: {\r\n          reactComponent,\r\n          wrapperClass,\r\n        },\r\n      };\r\n    } else {\r\n      return {\r\n        type: BubbleActionEnum.SHOW_BUBBLE,\r\n        payload: {\r\n          reactComponent,\r\n          wrapperClass: null\r\n        }\r\n      };\r\n    }\r\n  },\r\n  closeBubble: (): CloseBubbleAction => ({\r\n    type: BubbleActionEnum.CLOSE_BUBBLE,\r\n    payload: false,\r\n  }),\r\n};","import { AuthActionCreators } from './auth/action-creators';\r\nimport { NotificationsActionCreators } from './notifications/action-creators';\r\nimport { ThemeActionCreators } from './theme/action-creators';\r\nimport { ModalActionCreators } from './modal/action-creators';\r\nimport { LoadingTabActionCreators } from './loading-tab/action-creators';\r\nimport { LoadingPageActionCreators } from './loading-page/action-creators';\r\nimport { LoadingModalActionCreators } from './loading-modal/action-creators';\r\nimport { LoadingPostActionCreators } from './loading-post/action-creators';\r\nimport { BubbleActionCreators } from './bubble/action-creators';\r\n\r\nexport const allActionCreators = {\r\n  ...AuthActionCreators,\r\n  ...NotificationsActionCreators,\r\n  ...ThemeActionCreators,\r\n  ...ModalActionCreators,\r\n  ...LoadingTabActionCreators,\r\n  ...LoadingPageActionCreators,\r\n  ...LoadingModalActionCreators,\r\n  ...LoadingPostActionCreators,\r\n  ...BubbleActionCreators,\r\n};","import { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { allActionCreators } from '../store/reducers/action-creators';\r\n\r\nexport const useActions = () => {\r\n  const dispatch = useDispatch();\r\n  return bindActionCreators(allActionCreators, dispatch);\r\n}\r\n","import React, { InputHTMLAttributes, forwardRef } from 'react';\r\nimport './input-text.scss';\r\n\r\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst InputText = forwardRef<HTMLInputElement, InputProps>((props, ref) => {\r\n  return (\r\n    <input {...props} ref={ref} className={`${props.className ? 'input-text ' + props.className : 'input-text'}`} />\r\n  );\r\n});\r\n\r\nexport default InputText;","import React, { FC, ButtonHTMLAttributes } from 'react';\r\nimport './submit-button.scss';\r\n\r\nexport interface SubmitButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {}\r\n\r\nconst SubmitButton: FC<SubmitButtonProps> = props => {\r\n  const { className, children, ...rest } = props;\r\n  return (\r\n    <button type=\"submit\" {...rest} className={`${className ? 'submit-button ' + className : 'submit-button'}`}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SubmitButton;","import React, { forwardRef, InputHTMLAttributes } from 'react';\r\nimport './input-color.scss';\r\n\r\ninterface InputColorProps extends InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst InputColor = forwardRef<HTMLInputElement, InputColorProps>(({ className, ...rest }, ref) => {\r\n  const classString = className ? `input-color ${className}` : 'input-color';\r\n  return <input {...rest} type=\"color\" className={classString} />;\r\n});\r\n\r\nexport default InputColor;\r\n","import React, { FC, Fragment, useState } from 'react';\r\nimport TransparentButton from '../TransparentButton/TransparentButton';\r\nimport { BaseEmoji, Picker, PickerProps } from 'emoji-mart-virtualized';\r\nimport './emoji-button.scss';\r\nimport { useAppSelector } from '../../../hooks/useAppSelector';\r\n\r\ninterface EmojiButtonProps {\r\n  emoji: string;\r\n  setEmoji: (emoji: string) => void;\r\n}\r\n\r\nconst EmojiButton: FC<EmojiButtonProps> = ({ emoji, setEmoji, ...rest }) => {\r\n  const currentTheme = useAppSelector(state => state.theme.themeStyle)\r\n  const [isShowPicker, setIsShowPicker] = useState<boolean>(false);\r\n  const selectEmoji = (emoji: BaseEmoji) => {\r\n    setIsShowPicker(false);\r\n    setEmoji(emoji.native);\r\n  };\r\n\r\n  const pickerOptions: PickerProps = {\r\n    native: true,\r\n    onSelect: selectEmoji,\r\n    exclude: ['flags', 'custom', 'recent'],\r\n    theme: currentTheme,\r\n    showPreview: false,\r\n    showSkinTones: false,\r\n    color: 'var(--accent-color)',\r\n    perLine: 7,\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"emoji-button\">\r\n        <TransparentButton className=\"emoji-button__button\" type=\"button\" onClick={() => setIsShowPicker(value => !value)}>\r\n          {emoji}\r\n        </TransparentButton>\r\n        <div className={isShowPicker ? \"picker-container\" : \"hidden\"}>\r\n          <Picker {...pickerOptions}/>\r\n        </div>\r\n      </div>\r\n      {isShowPicker && <div className=\"emoji-button__bg\" onClick={() => setIsShowPicker(false)}/>}\r\n    </Fragment>\r\n\r\n  );\r\n};\r\n\r\nexport default EmojiButton;\r\n","import { RequestTypes } from '../models/request-types';\r\nimport { useActions } from './useActions';\r\nimport LoadingMethods from '../models/loading-methods';\r\n\r\nconst useLoadingMethods = (type: RequestTypes): LoadingMethods => {\r\n  const {\r\n    setLoadingTabTrue,\r\n    setLoadingTabFalse,\r\n    setLoadingPageTrue,\r\n    setLoadingPageFalse,\r\n    setLoadingPostTrue,\r\n    setLoadingPostFalse,\r\n    setLoadingModalTrue,\r\n    setLoadingModalFalse,\r\n  } = useActions();\r\n\r\n  switch (type) {\r\n    case 'Page':\r\n      return {\r\n        methodTrue: setLoadingPageTrue,\r\n        methodFalse: setLoadingPageFalse,\r\n      };\r\n    case 'Modal':\r\n      return {\r\n        methodTrue: setLoadingModalTrue,\r\n        methodFalse: setLoadingModalFalse,\r\n      };\r\n    case 'Post':\r\n      return {\r\n        methodTrue: setLoadingPostTrue,\r\n        methodFalse: setLoadingPostFalse,\r\n      };\r\n    case 'Tab':\r\n      return {\r\n        methodTrue: setLoadingTabTrue,\r\n        methodFalse: setLoadingTabFalse,\r\n      };\r\n  }\r\n};\r\n\r\nexport default useLoadingMethods;\r\n","import { useActions } from './useActions';\r\nimport { RequestTypes } from '../models/request-types';\r\nimport useLoadingMethods from './useLoadingMethods';\r\n\r\nfunction useRequest<T = {}>(type: RequestTypes, callback: (args: T) => void) {\r\n  const { addNotification } = useActions();\r\n  const loading = useLoadingMethods(type);\r\n\r\n  return async (args: T) => {\r\n    try {\r\n      loading.methodTrue();\r\n      await callback(args);\r\n    } catch (e: any) {\r\n      addNotification(\r\n        JSON.parse(e.request?.response)?.message || JSON.parse(e.response?.response)?.message || 'Ошибка при запросе',\r\n        'error'\r\n      );\r\n    } finally {\r\n      loading.methodFalse();\r\n    }\r\n  };\r\n}\r\n\r\nexport default useRequest;\r\n","import React, { useState } from 'react';\r\nimport UserSettingsInfo from '../../Containers/UserSettingsInfo/UserSettingsInfo';\r\nimport UserSettingsAccount from '../../Containers/UserSettingsAccount/UserSettingsAccount';\r\nimport SettingsTabButton, { SettingsTabButtonProps } from '../../UI/SettingsTabButton/SettingsTabButton';\r\nimport './user-settings.scss';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport enum SettingsTabs {\r\n  INFO = 'info',\r\n  ACCOUNT = 'account',\r\n}\r\n\r\nconst UserSettings = () => {\r\n  const path = useLocation().pathname;\r\n  const userUrl = path.substring(path.lastIndexOf('/') - 12, path.lastIndexOf('/'));\r\n  const [currentTab, setCurrentTab] = useState<SettingsTabs>(SettingsTabs.INFO);\r\n  const settingsTabs: SettingsTabButtonProps[] = [\r\n    {\r\n      name: 'Информация',\r\n      onClick: () => setCurrentTab(SettingsTabs.INFO),\r\n      className: currentTab === SettingsTabs.INFO ? 'settings-tab-button--active' : '',\r\n    },\r\n    {\r\n      name: 'Аккаунт',\r\n      onClick: () => setCurrentTab(SettingsTabs.ACCOUNT),\r\n      className: currentTab === SettingsTabs.ACCOUNT ? 'settings-tab-button--active' : '',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"user-settings\">\r\n      <div className=\"user-settings__content\">\r\n        <div className=\"user-settings__title\">\r\n          <h1>Настройки</h1>\r\n        </div>\r\n        <nav className=\"user-settings__tabs\">\r\n          {settingsTabs.map((tab) => (\r\n            <SettingsTabButton key={`user-settings-${tab.name}`} {...tab} />\r\n          ))}\r\n        </nav>\r\n        <div className=\"user-settings__container\">\r\n          {currentTab === 'info' && <UserSettingsInfo userUrl={userUrl} />}\r\n          {currentTab === 'account' && <UserSettingsAccount userUrl={userUrl} />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSettings;\r\n","import $api from '../api';\r\nimport { UserProfileInfo } from '../models/user-profile-info';\r\nimport { BookData } from '../models/book-data';\r\nimport { UserData } from '../models/user-data';\r\nimport { UserAccountInfo } from '../models/user-account-info';\r\n\r\nconst USER_PREFIX = 'user/';\r\n\r\nconst UserService = {\r\n  getUserProfileInfo: async (userUrl: string) => {\r\n    return $api.get<UserProfileInfo>(USER_PREFIX + userUrl + '/info');\r\n  },\r\n\r\n  getUserBooks: async (userUrl: string, page: number, size: number) => {\r\n    return $api.get<BookData[]>(`${USER_PREFIX}${userUrl}/books?page=${page}&size=${size}`);\r\n  },\r\n\r\n  deleteBook: async (userUrl: string, index: number) => {\r\n    return $api.post<string>(`${USER_PREFIX}${userUrl}/deleteBook`, { index });\r\n  },\r\n\r\n  updateInfo: async (userUrl: string, username: string, color: string, emoji: string) => {\r\n    return $api.post<UserData>(`${USER_PREFIX}${userUrl}/updateInfo`, { username, color, emoji });\r\n  },\r\n\r\n  getAccountInfo: async (userUrl: string) => {\r\n    return $api.get<UserAccountInfo>(`${USER_PREFIX}${userUrl}/accountInfo`);\r\n  },\r\n\r\n  updatePassword: async (userUrl: string, oldPassword: string, newPassword: string) => {\r\n    return $api.post<string>(`${USER_PREFIX}${userUrl}/updatePassword`, {oldPassword, newPassword});\r\n  },\r\n\r\n  // getReviews: async (userUrl: string, page: number, size: number) => {\r\n  //   return $api.get<>()\r\n  // }\r\n};\r\n\r\nexport default UserService;\r\n","import { useActions } from '../../../../hooks/useActions';\r\nimport { useState } from 'react';\r\nimport useRequest from '../../../../hooks/useRequest';\r\nimport UserService from '../../../../services/user.service';\r\nimport UpdateInfoArgs from './types/update-info-args';\r\n\r\nconst useUserSettingsInfoForm = (emoji: string | null) => {\r\n  const { setUserData, closeModal } = useActions();\r\n  const [chosenEmoji, setChosenEmoji] = useState<string>(emoji || '😎');\r\n  const { addNotification } = useActions();\r\n\r\n  const updateInfo = useRequest<UpdateInfoArgs>('Page', async (args) => {\r\n    const {userUrl, username, color, emoji} = args;\r\n    const response = await UserService.updateInfo(userUrl, username, color, emoji);\r\n    addNotification('Настройки успешно обновлены', 'success');\r\n    localStorage.setItem('userData', JSON.stringify(response.data));\r\n    setUserData(response.data);\r\n    closeModal();\r\n  });\r\n\r\n  const setEmoji = (emoji: string) => {\r\n    setChosenEmoji(emoji);\r\n  };\r\n\r\n  return { updateInfo, chosenEmoji, setEmoji };\r\n};\r\n\r\nexport default useUserSettingsInfoForm;","import React, { FC } from 'react';\r\nimport { SubmitHandler, useForm, Controller } from 'react-hook-form';\r\nimport InputText from '../../../UI/InputText/InputText';\r\nimport SubmitButton from '../../../UI/SubmitButton/SubmitButton';\r\nimport InputColor from '../../../UI/InputColor/InputColor';\r\nimport EmojiButton from '../../../UI/EmojiButton/EmojiButton';\r\nimport './user-settings-info-form.scss';\r\nimport useUserSettingsInfoForm from './useUserSettingsInfoForm';\r\nimport UserSettingsInfoFormInputs from './types/user-settings-info-form-inputs';\r\n\r\ninterface UserSettingsInfoFormProps {\r\n  username: string | null;\r\n  emoji: string | null;\r\n  color: string | null;\r\n  userUrl: string;\r\n}\r\n\r\nconst UserSettingsInfoForm: FC<UserSettingsInfoFormProps> = ({ username, color, emoji, userUrl, ...rest }) => {\r\n  const { updateInfo, chosenEmoji, setEmoji } = useUserSettingsInfoForm(emoji);\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<UserSettingsInfoFormInputs>();\r\n\r\n  const onSubmit: SubmitHandler<UserSettingsInfoFormInputs> = data =>\r\n    updateInfo({ userUrl, username: data.username, color: data.color, emoji: chosenEmoji });\r\n\r\n  return (\r\n    <form className=\"user-settings-info-form\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"user-settings-info-form__container\">\r\n        <fieldset className=\"user-settings-info-form__group\">\r\n          <label className=\"user-settings-info-form__label\" htmlFor=\"username\">\r\n            Имя\r\n          </label>\r\n          <Controller\r\n            name=\"username\"\r\n            control={control}\r\n            defaultValue={username || 'username'}\r\n            rules={{ required: true }}\r\n            render={({ field }) => <InputText {...field} />}\r\n          />\r\n          {errors.username && <div className=\"user-settings-info-form__error\">Введите имя</div>}\r\n        </fieldset>\r\n        <fieldset className=\"user-settings-info-form__group\">\r\n          <span className=\"user-settings-info-form__label\">Эмодзи</span>\r\n          <EmojiButton emoji={chosenEmoji} setEmoji={setEmoji} />\r\n        </fieldset>\r\n        <fieldset className=\"user-settings-info-form__group\">\r\n          <label className=\"user-settings-info-form__label\" htmlFor=\"color\">\r\n            Цвет\r\n          </label>\r\n          <Controller\r\n            name=\"color\"\r\n            control={control}\r\n            defaultValue={color || '#FFF'}\r\n            rules={{ required: true }}\r\n            render={({ field }) => <InputColor {...field} />}\r\n          />\r\n        </fieldset>\r\n      </div>\r\n      <div className=\"user-settings-info-form__button\">\r\n        <SubmitButton>Сохранить</SubmitButton>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UserSettingsInfoForm;\r\n","import { useEffect, useState } from 'react';\r\nimport { UserProfileInfo } from '../../../models/user-profile-info';\r\nimport UserService from '../../../services/user.service';\r\nimport useRequest from '../../../hooks/useRequest';\r\n\r\nconst useUserSettingsInfo = (userUrl: string) => {\r\n  const [userInfo, setUserInfo] = useState<UserProfileInfo>({\r\n    username: '',\r\n    color: '',\r\n    emoji: '',\r\n    clubname: '',\r\n    clubUrl: '',\r\n  });\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n\r\n  const fetchInfo = useRequest('Modal', async () => {\r\n    const response = await UserService.getUserProfileInfo(userUrl);\r\n    setUserInfo(response.data);\r\n    setIsLoaded(true);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchInfo({});\r\n  }, []);\r\n\r\n  return { userInfo, isLoaded };\r\n};\r\n\r\nexport default useUserSettingsInfo;\r\n","import React from 'react';\r\nimport './loader.scss';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport Loader from '../loader/Loader';\r\nimport './page-loader.scss';\r\n\r\nconst PageLoader = () => {\r\n  return (\r\n    <div className=\"page-loader\">\r\n      <Loader/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageLoader;","import React, { FC } from 'react';\r\nimport UserSettingsInfoForm from './UserSettingsInfoForm/UserSettingsInfoForm';\r\nimport useUserSettingsInfo from './useUserSettingsInfo';\r\nimport PageLoader from '../../UI/PageLoader/PageLoader';\r\nimport './user-settings-info.scss';\r\n\r\ninterface UserInfoProps {\r\n  userUrl: string;\r\n}\r\n\r\nconst UserSettingsInfo: FC<UserInfoProps> = ({ userUrl, ...rest }) => {\r\n  const { userInfo, isLoaded } = useUserSettingsInfo(userUrl);\r\n\r\n  return isLoaded ? (\r\n    <UserSettingsInfoForm\r\n      username={userInfo.username}\r\n      color={userInfo.color}\r\n      emoji={userInfo.emoji}\r\n      userUrl={userUrl || ''}\r\n    />\r\n  ) : (\r\n    <div className=\"user-settings-info__loader\">\r\n      <PageLoader />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSettingsInfo;\r\n","import React, { FC } from 'react';\r\n\r\ninterface UserSettingsAccountEmailProps {\r\n  email: string;\r\n}\r\n\r\nconst UserSettingsAccountEmail: FC<UserSettingsAccountEmailProps> = ({ email, ...rest }) => {\r\n  return (\r\n    <div>{email}</div>\r\n  )\r\n};\r\n\r\nexport default UserSettingsAccountEmail;","const authDataLength = {\r\n  EMAIL_MAX_LENGTH: 264,\r\n  PASSWORD_MIN_LENGTH: 8,\r\n  USERNAME_MAX_LENGTH: 18,\r\n  USERNAME_MIN_LENGTH: 3,\r\n  CLUBNAME_MAX_LENGTH: 18,\r\n  CLUBNAME_MIN_LENGTH: 3,\r\n}\r\n\r\nexport default authDataLength;","import React, { FC } from 'react';\r\nimport { SubmitHandler, useForm, Controller } from 'react-hook-form';\r\nimport InputText from '../../../UI/InputText/InputText';\r\nimport SubmitButton from '../../../UI/SubmitButton/SubmitButton';\r\nimport useRequest from '../../../../hooks/useRequest';\r\nimport UserService from '../../../../services/user.service';\r\nimport { useActions } from '../../../../hooks/useActions';\r\nimport './user-settings-password-form.scss';\r\nimport authDataLength from '../../../../constants/auth-data-length';\r\nimport UserSettingsPasswordInputs from './types/user-settings-password-inputs';\r\nimport UpdatePasswordArgs from './types/update-password-args';\r\n\r\ninterface UserSettingsPasswordFormProps {\r\n  userUrl: string;\r\n}\r\n\r\nconst UserSettingsPasswordForm: FC<UserSettingsPasswordFormProps> = ({ userUrl, ...rest }) => {\r\n  const { addNotification } = useActions();\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n    getValues,\r\n    resetField,\r\n  } = useForm<UserSettingsPasswordInputs>();\r\n\r\n  const updatePassword = useRequest<UpdatePasswordArgs>('Post', async ({ oldPassword, newPassword }) => {\r\n    const response = await UserService.updatePassword(userUrl, oldPassword, newPassword);\r\n    if (response.data === 'Success') {\r\n      addNotification('Пароль успешно обновлён', 'success');\r\n    }\r\n  });\r\n\r\n  const onSubmit: SubmitHandler<UserSettingsPasswordInputs> = async data => {\r\n    await updatePassword({ oldPassword: data.oldPassword, newPassword: data.newPassword });\r\n    resetField('oldPassword');\r\n    resetField('newPassword');\r\n    resetField('newPasswordRepeat');\r\n  };\r\n\r\n  return (\r\n    <form className=\"user-settings-password-form\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"user-settings-password-form__inputs-group\">\r\n        <Controller\r\n          name=\"oldPassword\"\r\n          control={control}\r\n          defaultValue={''}\r\n          rules={{ required: true, minLength: authDataLength.PASSWORD_MIN_LENGTH }}\r\n          render={({ field }) => (\r\n            <InputText\r\n              {...field}\r\n              className=\"user-settings-password-form__input\"\r\n              placeholder=\"Старый пароль\"\r\n              type=\"password\"\r\n            />\r\n          )}\r\n        />\r\n        {errors.oldPassword?.type === 'required' && <div className=\"register-form__error\">Введите старый пароль</div>}\r\n        {errors.oldPassword?.type === 'minLength' && (\r\n          <div className=\"register-form__error\">\r\n            Пароль должен быть длиннее {authDataLength.USERNAME_MIN_LENGTH} символов\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"user-settings-password-form__inputs-group\">\r\n        <Controller\r\n          name=\"newPassword\"\r\n          control={control}\r\n          defaultValue={''}\r\n          rules={{ required: true, minLength: authDataLength.PASSWORD_MIN_LENGTH }}\r\n          render={({ field }) => (\r\n            <InputText\r\n              {...field}\r\n              className=\"user-settings-password-form__input\"\r\n              placeholder=\"Новый пароль\"\r\n              type=\"password\"\r\n            />\r\n          )}\r\n        />\r\n        {errors.newPassword?.type === 'required' && <div className=\"register-form__error\">Введите новый пароль</div>}\r\n        {errors.newPassword?.type === 'minLength' && (\r\n          <div className=\"register-form__error\">\r\n            Пароль должен быть длиннее {authDataLength.USERNAME_MIN_LENGTH} символов\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"user-settings-password-form__inputs-group\">\r\n        <Controller\r\n          name=\"newPasswordRepeat\"\r\n          control={control}\r\n          defaultValue={''}\r\n          rules={{\r\n            required: true,\r\n            validate: value => value === getValues().newPassword || 'Пароли должны совпадать',\r\n          }}\r\n          render={({ field }) => (\r\n            <InputText\r\n              {...field}\r\n              className=\"user-settings-password-form__input\"\r\n              placeholder=\"Повторите пароль\"\r\n              type=\"password\"\r\n            />\r\n          )}\r\n        />\r\n        {errors.newPasswordRepeat?.type === 'required' && <div className=\"register-form__error\">Повторите пароль</div>}\r\n        {errors.newPasswordRepeat?.type === 'validate' && (\r\n          <div className=\"register-form__error\">Пароли должны совпадать</div>\r\n        )}\r\n      </div>\r\n      <div className=\"user-settings-password-form__button\">\r\n        <SubmitButton>Сменить пароль</SubmitButton>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UserSettingsPasswordForm;\r\n","import { useEffect, useState } from 'react';\r\nimport { UserAccountInfo } from '../../../models/user-account-info';\r\nimport UserService from '../../../services/user.service';\r\nimport useRequest from '../../../hooks/useRequest';\r\n\r\nconst useUserSettingsAccount = (userUrl: string) => {\r\n  const [accountInfo, setAccountInfo] = useState<UserAccountInfo>({ email: '' });\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n  const fetchAccountData = useRequest('Modal', async (userUrl: string) => {\r\n    const response = await UserService.getAccountInfo(userUrl);\r\n    setAccountInfo(response.data);\r\n    setIsLoaded(true);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchAccountData(userUrl);\r\n  }, []);\r\n\r\n  return {accountInfo, isLoaded};\r\n}\r\n\r\nexport default useUserSettingsAccount;","import React, { FC } from 'react';\r\nimport UserSettingsAccountEmail from './UserSettingsAccountEmail/UserSettingsAccountEmail';\r\nimport UserSettingsPasswordForm from './UserSettingsAccountPasswordForm/UserSettingsPasswordForm';\r\nimport './user-settings-account.scss';\r\nimport useUserSettingsAccount from './useUserSettingsAccount';\r\nimport PageLoader from '../../UI/PageLoader/PageLoader';\r\n\r\ninterface UserAccountProps {\r\n  userUrl: string;\r\n}\r\n\r\nconst UserSettingsAccount: FC<UserAccountProps> = ({ userUrl, ...rest }) => {\r\n  const { accountInfo, isLoaded } = useUserSettingsAccount(userUrl);\r\n\r\n  return isLoaded ? (\r\n    <div className=\"user-settings-account\">\r\n      <div className=\"user-settings-account__group\">\r\n        <h2 className=\"user-settings-account__label\">Почта</h2>\r\n        <UserSettingsAccountEmail email={accountInfo.email} />\r\n      </div>\r\n      <div className=\"user-settings-account__group\">\r\n        <h2 className=\"user-settings-account__label\">Пароль</h2>\r\n        <UserSettingsPasswordForm userUrl={userUrl || ''} />\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"user-settings-account__loader\">\r\n      <PageLoader />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSettingsAccount;\r\n","import React, { ButtonHTMLAttributes, FC } from 'react';\r\nimport './settings-tab-button.scss';\r\n\r\nexport interface SettingsTabButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  name: string;\r\n}\r\n\r\nconst SettingsTabButton: FC<SettingsTabButtonProps> = ({ name, className, ...rest }) => {\r\n  const classString = className ? `settings-tab-button ${className}` : 'settings-tab-button';\r\n\r\n  return (\r\n    <button className={classString} type=\"button\" {...rest}>\r\n      <span>{name}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SettingsTabButton;\r\n","import React, { FC } from 'react';\r\nimport './user-header-buttons.scss';\r\nimport { ReactComponent as SettingsSvg } from '../../../../assets/svg/settings.svg';\r\nimport TransparentButton from '../../../UI/TransparentButton/TransparentButton';\r\nimport { useActions } from '../../../../hooks/useActions';\r\nimport UserSettings from '../../../Pages/UserSettings/UserSettings';\r\n\r\ninterface UserHeaderButtonsProps {\r\n  isCurrentUser: boolean;\r\n}\r\n\r\nconst UserHeaderButtons: FC<UserHeaderButtonsProps> = ({ isCurrentUser, ...rest }) => {\r\n  const {showModal} = useActions();\r\n  const showSettings = () => {\r\n    showModal(<UserSettings/>)\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-header-buttons\">\r\n      {isCurrentUser && (\r\n        <TransparentButton className=\"user-header-buttons__button transparent-button--dim\" onClick={showSettings}>\r\n          <SettingsSvg />\r\n          <span>Настройки</span>\r\n        </TransparentButton>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserHeaderButtons;\r\n","import React, { FC } from 'react';\r\nimport InputText from '../../UI/InputText/InputText';\r\nimport useRequest from '../../../hooks/useRequest';\r\nimport ClubService from '../../../services/club.service';\r\nimport { useActions } from '../../../hooks/useActions';\r\nimport { SubmitHandler, useForm, Controller } from 'react-hook-form';\r\nimport SubmitButton from '../../UI/SubmitButton/SubmitButton';\r\nimport CreateClubFormInput from './types/create-club-form-inputs';\r\nimport CreateClubArgs from './types/create-club-args';\r\nimport authDataLength from '../../../constants/auth-data-length';\r\nimport './create-club-form.scss';\r\n\r\nconst CreateClubForm: FC = () => {\r\n  const { setUserData, closeModal } = useActions();\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<CreateClubFormInput>();\r\n\r\n  const createClub = useRequest<CreateClubArgs>('Page', async ({ clubname }) => {\r\n    const response = await ClubService.createClub(clubname);\r\n    localStorage.setItem('userData', JSON.stringify(response.data));\r\n    setUserData(response.data);\r\n    closeModal();\r\n  });\r\n\r\n  const onSubmit: SubmitHandler<CreateClubFormInput> = data => createClub({ clubname: data.clubname });\r\n\r\n  return (\r\n    <div className=\"create-club-form\">\r\n      <h1 className=\"create-club-form__title\">Создать клуб</h1>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"create-club-form__group\">\r\n          <Controller\r\n            name=\"clubname\"\r\n            control={control}\r\n            defaultValue={''}\r\n            rules={{\r\n              required: true,\r\n              minLength: authDataLength.CLUBNAME_MIN_LENGTH,\r\n              maxLength: authDataLength.CLUBNAME_MAX_LENGTH,\r\n            }}\r\n            render={({ field }) => <InputText {...field} placeholder=\"Имя клуба\" />}\r\n          />\r\n          {errors.clubname?.type === 'required' && <div className=\"club-settings-form__error\">Введите имя клуба</div>}\r\n          {errors.clubname?.type === 'minLength' && (\r\n            <div className=\"club-settings-form__error\">\r\n              Имя клуба должно быть не короче {authDataLength.CLUBNAME_MIN_LENGTH} символов\r\n            </div>\r\n          )}\r\n          {errors.clubname?.type === 'maxLength' && (\r\n            <div className=\"club-settings-form__error\">\r\n              Имя клуба должно быть не длинее {authDataLength.CLUBNAME_MAX_LENGTH} символов\r\n            </div>\r\n          )}\r\n        </div>\r\n        <SubmitButton className=\"create-club-form__button\">Создать клуб</SubmitButton>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateClubForm;\r\n","import React, { FC, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport TransparentButton from '../../../UI/TransparentButton/TransparentButton';\r\nimport CreateClubForm from '../../CreateClubForm/CreateClubForm';\r\nimport './user-header-club.scss';\r\nimport { useActions } from '../../../../hooks/useActions';\r\n\r\ninterface UserHeaderClubProps {\r\n  isCurrentUser: boolean;\r\n  clubname: string | null;\r\n  clubUrl: string | null;\r\n}\r\n\r\nconst UserHeaderClub: FC<UserHeaderClubProps> = ({ isCurrentUser, clubname, clubUrl, ...rest }) => {\r\n  const {showModal} = useActions();\r\n  const handleShowModal = () => {\r\n    showModal(<CreateClubForm />)\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-header-club\">\r\n      {isCurrentUser && (\r\n        <Fragment>\r\n          <div className=\"user-header-club__container user-header-club__description\">\r\n            <p>{clubname && clubUrl ? 'Вы состоите в клубе\\u00A0' : 'Вы не состоите в клубе, но можете\\u00A0'}</p>\r\n          </div>\r\n          {clubname && clubUrl ? (\r\n            <div className=\"user-header-club__container user-header-club__name\">\r\n              <Link to={`/club/${clubUrl}`}>{clubname}</Link>\r\n            </div>\r\n          ) : (\r\n            <div className=\"user-header-club__container\">\r\n              <TransparentButton  onClick={handleShowModal}>\r\n                создать клуб\r\n              </TransparentButton>\r\n            </div>\r\n\r\n          )}\r\n        </Fragment>\r\n      )}\r\n      {!isCurrentUser && (\r\n        <Fragment>\r\n          <div className=\"user-header-club__container user-header-club__description\">\r\n            <p>{clubname && clubUrl ? 'Состоит в клубе\\u00A0' : 'Не состоит ни в одном клубе\\u00A0'}</p>\r\n          </div>\r\n          {clubname && clubUrl && (\r\n            <div className=\"user-header-club__container user-header-club__name\">\r\n              <Link to={`/club/${clubUrl}`}>{clubname}</Link>\r\n            </div>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserHeaderClub;\r\n","import React, { CSSProperties, FC } from 'react';\r\nimport './avatar.scss';\r\n\r\ninterface AvatarProps {\r\n  emoji: string | null;\r\n  color: string | null;\r\n  className?: string;\r\n}\r\n\r\nconst UserHeaderAvatar: FC<AvatarProps> = ({ color, emoji, className, ...rest }) => {\r\n  const avatarStyles: CSSProperties = {\r\n    backgroundColor: color || 'FFF',\r\n  };\r\n  const classString = className ? `avatar ${className}` : 'avatar';\r\n\r\n  return (\r\n    <figure className={classString}>\r\n      <div className=\"avatar__background\" style={avatarStyles}>\r\n        <span className=\"avatar__emoji\">{emoji}</span>\r\n      </div>\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport default UserHeaderAvatar;\r\n","import { useAppSelector } from '../../../hooks/useAppSelector';\r\nimport { useEffect, useState } from 'react';\r\nimport { UserProfileInfo } from '../../../models/user-profile-info';\r\nimport useRequest from '../../../hooks/useRequest';\r\nimport UserService from '../../../services/user.service';\r\n\r\nconst useUserProfileHeader = (userUrl: string, setIsLoaded: () => void) => {\r\n  const authUserData = useAppSelector(state => state.auth.userData);\r\n  const [userInfo, setUserInfo] = useState<UserProfileInfo>({\r\n    username: null,\r\n    color: null,\r\n    emoji: null,\r\n    clubname: null,\r\n    clubUrl: null,\r\n  });\r\n\r\n  const fetchInfo = useRequest('Page', async (userUrl: string) => {\r\n    const response = await UserService.getUserProfileInfo(userUrl);\r\n    setUserInfo(response.data);\r\n    setIsLoaded();\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchInfo(userUrl);\r\n  }, [authUserData]);\r\n\r\n  return { userInfo };\r\n};\r\n\r\nexport default useUserProfileHeader;","import React, { FC, Fragment } from 'react';\r\nimport ProfileTitle from '../../UI/ProfileTitle/ProfileTitle';\r\nimport UserHeaderButtons from './UserHeaderButtons/UserHeaderButtons';\r\nimport UserHeaderClub from './UserHeaderClub/UserHeaderClub';\r\nimport './user-profile-header.scss';\r\nimport Avatar from '../../UI/Avatar/Avatar';\r\nimport useUserProfileHeader from './useUserProfileHeader';\r\nimport { Helmet } from 'react-helmet';\r\n\r\ninterface UserProfileHeaderProps {\r\n  isCurrentUser: boolean;\r\n  userUrl: string;\r\n  setIsLoaded: () => void;\r\n}\r\n\r\nconst UserProfileHeader: FC<UserProfileHeaderProps> = ({ userUrl, setIsLoaded, isCurrentUser, ...rest }) => {\r\n  const { userInfo } = useUserProfileHeader(userUrl, setIsLoaded);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Helmet>\r\n        <title>Профиль {userInfo.username || ''}</title>\r\n      </Helmet>\r\n      <section className=\"user-profile-header\">\r\n        <div className=\"user-profile-header__title-container\">\r\n          <div className=\"user-profile-header__avatar\">\r\n            <Avatar emoji={userInfo.emoji} color={userInfo.color} className=\"avatar--big\" />\r\n          </div>\r\n          <ProfileTitle title={userInfo.username || ''} />\r\n        </div>\r\n        <UserHeaderButtons isCurrentUser={isCurrentUser} />\r\n        <UserHeaderClub clubUrl={userInfo.clubUrl} clubname={userInfo.clubname} isCurrentUser={isCurrentUser} />\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserProfileHeader;\r\n","import React, { FC, ReactNode } from 'react';\r\nimport { Link, useMatch } from 'react-router-dom';\r\nimport './tab-button.scss';\r\n\r\nexport interface TabButtonProps {\r\n  name: string;\r\n  path: string;\r\n  counter?: ReactNode;\r\n}\r\n\r\nconst TabButton: FC<TabButtonProps> = props => {\r\n  const match = useMatch(props.path);\r\n\r\n  return (\r\n    <div className={`tab-button${match ? ' tab-button--active' : ''}`}>\r\n      <Link to={props.path}>\r\n        <span>{props.name}</span>\r\n        {props.counter}\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabButton;","import React, { FC } from 'react';\r\nimport TabButton, { TabButtonProps } from './TabButton/TabButton';\r\nimport './profile-tabs.scss';\r\nimport { useAppSelector } from '../../../hooks/useAppSelector';\r\n\r\ninterface ProfileTabsProps {\r\n  url: string | undefined;\r\n  tabsData: TabButtonProps[];\r\n  className?: string;\r\n}\r\n\r\nconst ProfileTabs: FC<ProfileTabsProps> = props => {\r\n  const { tabsData } = props;\r\n  const isTabLoading = useAppSelector(state => state.loadingTab.isLoadingTab);\r\n  const classString = isTabLoading ? 'profile-tabs profile-tabs--loading' : 'profile-tabs profile-tabs--loaded';\r\n\r\n  return (\r\n    <nav className={classString}>\r\n      <div className=\"profile-tabs__wrapper\">\r\n        {tabsData.map(tab => (\r\n          <TabButton name={tab.name} path={tab.path} counter={tab.counter} key={`${props.url}-${tab.path}`} />\r\n        ))}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default ProfileTabs;\r\n","import React, { useState } from 'react';\r\nimport UserProfileHeader from '../../Containers/UserProfileHeader/UserProfileHeader';\r\nimport { useAppSelector } from '../../../hooks/useAppSelector';\r\nimport { useLocation, Outlet, Navigate, useOutletContext, useParams } from 'react-router-dom';\r\nimport ProfileTabs from '../../UI/ProfileTabs/ProfileTabs';\r\nimport { TabButtonProps } from '../../UI/ProfileTabs/TabButton/TabButton';\r\nimport { RouteNames } from '../../../routes/route-names.enum';\r\nimport './user-profile-page.scss';\r\nimport PageLoader from '../../UI/PageLoader/PageLoader';\r\n\r\nconst UserProfilePage = () => {\r\n  const location = useLocation();\r\n  const { userUrl } = useParams();\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const isCurrentUser = useAppSelector(state => state.auth.userData?.url === userUrl);\r\n  const handleSetIsLoaded = () => {\r\n    setIsLoaded(true);\r\n  };\r\n\r\n  const userProfileTabs: TabButtonProps[] = [\r\n    { name: 'Книги', path: `${RouteNames.USER_PROFILE_BASE}${userUrl}/${RouteNames.USER_PROFILE_BOOKS}` },\r\n    { name: 'Рецензии', path: `${RouteNames.USER_PROFILE_BASE}${userUrl}/${RouteNames.USER_PROFILE_REVIEWS}` },\r\n  ];\r\n\r\n  if (!userProfileTabs.map(tab => tab.path).some(path => path === location.pathname)) {\r\n    return (\r\n      <Navigate to={`${RouteNames.USER_PROFILE_BASE}${userUrl}/${RouteNames.USER_PROFILE_BOOKS}`} replace={true} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={isLoaded ? 'user-profile-page' : 'user-profile-page user-profile-page--loading'}>\r\n      {!isLoaded && <PageLoader />}\r\n      <UserProfileHeader isCurrentUser={isCurrentUser} userUrl={userUrl || ''} setIsLoaded={handleSetIsLoaded} />\r\n      <ProfileTabs tabsData={userProfileTabs} url={userUrl}   />\r\n      <section className=\"user-profile-page__content\">\r\n        <Outlet context={{ isCurrentUser: isCurrentUser, userUrl: userUrl }} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfilePage;\r\n\r\ntype ContextType = { isCurrentUser: boolean; userUrl: string };\r\n\r\nexport function useUserProfileContext() {\r\n  return useOutletContext<ContextType>();\r\n}\r\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgNavbarLogout(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 86,\n    height: 86,\n    viewBox: \"0 0 86 86\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.3334 43C14.3334 43.9504 14.7109 44.8618 15.3829 45.5338C16.0549 46.2058 16.9663 46.5833 17.9167 46.5833H45.1142L36.8725 54.7892C36.5367 55.1223 36.2701 55.5186 36.0882 55.9553C35.9063 56.3919 35.8126 56.8603 35.8126 57.3333C35.8126 57.8064 35.9063 58.2747 36.0882 58.7114C36.2701 59.1481 36.5367 59.5444 36.8725 59.8775C37.2057 60.2133 37.602 60.4799 38.0386 60.6619C38.4753 60.8438 38.9437 60.9374 39.4167 60.9374C39.8897 60.9374 40.3581 60.8438 40.7948 60.6619C41.2314 60.4799 41.6278 60.2133 41.9609 59.8775L56.2942 45.5442C56.6204 45.2034 56.8762 44.8015 57.0467 44.3617C57.4051 43.4893 57.4051 42.5107 57.0467 41.6383C56.8762 41.1985 56.6204 40.7966 56.2942 40.4558L41.9609 26.1225C41.6268 25.7884 41.2301 25.5234 40.7936 25.3425C40.3571 25.1617 39.8892 25.0687 39.4167 25.0687C38.9442 25.0687 38.4763 25.1617 38.0398 25.3425C37.6033 25.5234 37.2066 25.7884 36.8725 26.1225C36.5384 26.4566 36.2734 26.8532 36.0926 27.2898C35.9118 27.7263 35.8187 28.1942 35.8187 28.6667C35.8187 29.1392 35.9118 29.607 36.0926 30.0436C36.2734 30.4801 36.5384 30.8767 36.8725 31.2108L45.1142 39.4167H17.9167C16.9663 39.4167 16.0549 39.7942 15.3829 40.4662C14.7109 41.1382 14.3334 42.0496 14.3334 43ZM60.9167 7.16666H25.0834C22.2323 7.16666 19.498 8.29924 17.482 10.3153C15.466 12.3313 14.3334 15.0656 14.3334 17.9167V28.6667C14.3334 29.617 14.7109 30.5285 15.3829 31.2005C16.0549 31.8725 16.9663 32.25 17.9167 32.25C18.8671 32.25 19.7785 31.8725 20.4505 31.2005C21.1225 30.5285 21.5 29.617 21.5 28.6667V17.9167C21.5 16.9663 21.8776 16.0549 22.5496 15.3829C23.2216 14.7109 24.133 14.3333 25.0834 14.3333H60.9167C61.8671 14.3333 62.7785 14.7109 63.4505 15.3829C64.1225 16.0549 64.5 16.9663 64.5 17.9167V68.0833C64.5 69.0337 64.1225 69.9451 63.4505 70.6171C62.7785 71.2891 61.8671 71.6667 60.9167 71.6667H25.0834C24.133 71.6667 23.2216 71.2891 22.5496 70.6171C21.8776 69.9451 21.5 69.0337 21.5 68.0833V57.3333C21.5 56.383 21.1225 55.4715 20.4505 54.7995C19.7785 54.1275 18.8671 53.75 17.9167 53.75C16.9663 53.75 16.0549 54.1275 15.3829 54.7995C14.7109 55.4715 14.3334 56.383 14.3334 57.3333V68.0833C14.3334 70.9344 15.466 73.6687 17.482 75.6847C19.498 77.7007 22.2323 78.8333 25.0834 78.8333H60.9167C63.7678 78.8333 66.5021 77.7007 68.5181 75.6847C70.5341 73.6687 71.6667 70.9344 71.6667 68.0833V17.9167C71.6667 15.0656 70.5341 12.3313 68.5181 10.3153C66.5021 8.29924 63.7678 7.16666 60.9167 7.16666Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNavbarLogout);\nexport default __webpack_public_path__ + \"static/media/navbar-logout.fc3cebe5.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FC } from 'react';\r\nimport InputText from '../../UI/InputText/InputText';\r\nimport SubmitButton from '../../UI/SubmitButton/SubmitButton';\r\nimport { SubmitHandler, useForm, Controller } from 'react-hook-form';\r\nimport { useActions } from '../../../hooks/useActions';\r\nimport authDataLength from '../../../constants/auth-data-length';\r\nimport './login-form.scss';\r\n\r\ntype Inputs = {\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\nconst LoginForm: FC = props => {\r\n  const { login, addNotification } = useActions();\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<Inputs>();\r\n\r\n  const onSubmit: SubmitHandler<Inputs> = async data => {\r\n    try {\r\n      await login(data.email, data.password);\r\n    } catch (error: any) {\r\n      addNotification(error.response?.data?.message || 'Непредвиденная ошибка', 'error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"login-form\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"login-form__input-group\">\r\n        <Controller\r\n          name=\"email\"\r\n          control={control}\r\n          defaultValue={''}\r\n          rules={{ required: true }}\r\n          render={({ field }) => (\r\n            <InputText placeholder=\"Почта\" className=\"login-form__input\" {...field} type=\"email\" />\r\n          )}\r\n        />\r\n        {errors.email && <div className=\"login-form__error\">Введите email</div>}\r\n      </div>\r\n      <div className=\"login-form__input-group\">\r\n        <Controller\r\n          name=\"password\"\r\n          defaultValue={''}\r\n          rules={{ required: true, minLength: authDataLength.PASSWORD_MIN_LENGTH }}\r\n          control={control}\r\n          render={({ field }) => (\r\n            <InputText placeholder=\"Пароль\" className=\"login-form__input\" {...field} type=\"password\" />\r\n          )}\r\n        />\r\n        {errors.password?.type === 'minLength' && (\r\n          <div className=\"login-form__error\">\r\n            Пароль должен быть длиннее {authDataLength.PASSWORD_MIN_LENGTH} символов\r\n          </div>\r\n        )}\r\n        {errors.password?.type === 'required' && <div className=\"login-form__error\">Введите пароль</div>}\r\n      </div>\r\n      <SubmitButton>Войти</SubmitButton>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { FC, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { RouteNames } from '../../../routes/route-names.enum';\r\nimport { Helmet } from 'react-helmet';\r\nimport LoginForm from '../../Containers/LoginForm/LoginForm';\r\nimport './login-page.scss';\r\n\r\nconst LoginPage: FC = props => {\r\n  return (\r\n    <Fragment>\r\n      <Helmet>\r\n        <title>Вход</title>\r\n      </Helmet>\r\n      <div className=\"login-page\">\r\n        <h1 className=\"login-page__title\">Войти в аккаунт</h1>\r\n        <LoginForm />\r\n        <Link className=\"login-page__link\" to={RouteNames.REGISTER}>\r\n          Зарегистрироваться\r\n        </Link>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import AuthServices from '../../../services/auth.service';\r\nimport { RouteNames } from '../../../routes/route-names.enum';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FetchRegisterArgs from './types/fetch-register-args';\r\nimport useRequest from '../../../hooks/useRequest';\r\n\r\nconst useRegisterForm = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const fetchRegister = useRequest<FetchRegisterArgs>('Post', async ({ username, email, password }) => {\r\n    await AuthServices.register(username, email, password);\r\n    navigate(RouteNames.LOGIN);\r\n  });\r\n\r\n  return fetchRegister;\r\n};\r\n\r\nexport default useRegisterForm;","import React, { FC } from 'react';\r\nimport InputText from '../../UI/InputText/InputText';\r\nimport SubmitButton from '../../UI/SubmitButton/SubmitButton';\r\nimport { SubmitHandler, useForm, Controller } from 'react-hook-form';\r\nimport './register-form.scss';\r\nimport authDataLength from '../../../constants/auth-data-length';\r\nimport useRegisterForm from './useRegisterForm';\r\nimport { RegisterFormInputs } from './types/register-form-inputs';\r\n\r\nconst RegisterForm: FC = props => {\r\n  const fetchRegister = useRegisterForm();\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    getValues,\r\n  } = useForm<RegisterFormInputs>();\r\n  const onSubmit: SubmitHandler<RegisterFormInputs> = data =>\r\n    fetchRegister({\r\n      username: data.username,\r\n      email: data.email,\r\n      password: data.password,\r\n    });\r\n\r\n  return (\r\n    <form className=\"register-form\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"register-form__input-group\">\r\n        <Controller\r\n          name=\"username\"\r\n          control={control}\r\n          defaultValue={''}\r\n          rules={{\r\n            required: true,\r\n            minLength: authDataLength.USERNAME_MIN_LENGTH,\r\n            maxLength: authDataLength.USERNAME_MAX_LENGTH,\r\n          }}\r\n          render={({ field }) => (\r\n            <InputText placeholder=\"Имя\" className=\"register-form__input\" {...field} type=\"text\" />\r\n          )}\r\n        />\r\n        {errors.username?.type === 'required' && <div className=\"register-form__error\">Введите имя</div>}\r\n        {errors.username?.type === 'minLength' && (\r\n          <div className=\"register-form__error\">\r\n            Имя должно быть длиннее {authDataLength.USERNAME_MIN_LENGTH} символов\r\n          </div>\r\n        )}\r\n        {errors.username?.type === 'maxLength' && (\r\n          <div className=\"register-form__error\">\r\n            Имя должно быть короче {authDataLength.USERNAME_MAX_LENGTH} символов\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"register-form__input-group\">\r\n        <Controller\r\n          name=\"email\"\r\n          control={control}\r\n          defaultValue={''}\r\n          rules={{ required: true }}\r\n          render={({ field }) => (\r\n            <InputText placeholder=\"Почта\" className=\"register-form__input\" {...field} type=\"email\" />\r\n          )}\r\n        />\r\n        {errors.email && <div className=\"register-form__error\">Введите почту</div>}\r\n      </div>\r\n      <div className=\"register-form__input-group\">\r\n        <Controller\r\n          name=\"password\"\r\n          defaultValue={''}\r\n          rules={{ required: true, minLength: 8 }}\r\n          control={control}\r\n          render={({ field }) => (\r\n            <InputText placeholder=\"Пароль\" className=\"register-form__input\" {...field} type=\"password\" />\r\n          )}\r\n        />\r\n        {errors.password?.type === 'required' && <div className=\"register-form__error\">Введите пароль</div>}\r\n        {errors.password?.type === 'minLength' && (\r\n          <div className=\"register-form__error\">\r\n            Пароль должен быть длиннее {authDataLength.USERNAME_MIN_LENGTH} символов\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"register-form__input-group\">\r\n        <Controller\r\n          name=\"passwordRepeat\"\r\n          control={control}\r\n          defaultValue={''}\r\n          rules={{\r\n            required: true,\r\n            validate: value => value === getValues().password,\r\n          }}\r\n          render={({ field }) => (\r\n            <InputText placeholder=\"Повторите пароль\" className=\"register-form__input\" {...field} type=\"password\" />\r\n          )}\r\n        />\r\n        {errors.passwordRepeat?.type === 'required' && <div className=\"register-form__error\">Повторите пароль</div>}\r\n        {errors.passwordRepeat?.type === 'validate' && (\r\n          <div className=\"register-form__error\">Пароли должны совпадать</div>\r\n        )}\r\n      </div>\r\n      <SubmitButton className=\"register-form__button\">Зарегистрироваться</SubmitButton>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { FC, Fragment } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { RouteNames } from '../../../routes/route-names.enum';\r\nimport RegisterForm from '../../Containers/RegisterForm/RegisterForm';\r\nimport './register-page.scss';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst RegisterPage: FC = props => {\r\n  return (\r\n    <Fragment>\r\n      <Helmet>\r\n        <title>Регистрация</title>\r\n      </Helmet>\r\n      <div className=\"register-page\">\r\n        <h1 className=\"register-page__title\">Регистрация</h1>\r\n        <RegisterForm/>\r\n        <Link className=\"register-page__link\" to={RouteNames.LOGIN}>Войти в аккаунт</Link>\r\n      </div>\r\n    </Fragment>\r\n\r\n  )\r\n}\r\n\r\nexport default RegisterPage;","import React from 'react';\r\nimport { useLocation, Navigate } from 'react-router-dom';\r\n\r\nconst RemoveTrailingSlash = ({ ...rest }) => {\r\n  const location = useLocation()\r\n\r\n  if (location.pathname.match('/.*/$')) {\r\n    return <Navigate replace {...rest} to={{\r\n      pathname: location.pathname.replace(/\\/+$/, ''),\r\n      search: location.search\r\n    }}/>\r\n  } else return null\r\n};\r\n\r\nexport default RemoveTrailingSlash;","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgNavbarSun(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 55,\n    height: 55,\n    viewBox: \"0 0 55 55\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.925 38.9583L11.298 40.5854C10.8711 41.0148 10.6316 41.5956 10.6316 42.2011C10.6316 42.8065 10.8711 43.3873 11.298 43.8167C11.7273 44.2435 12.3082 44.4831 12.9136 44.4831C13.519 44.4831 14.0998 44.2435 14.5292 43.8167L16.1563 42.1896C16.5317 41.7512 16.7279 41.1873 16.7056 40.6105C16.6834 40.0338 16.4443 39.4866 16.0361 39.0785C15.628 38.6704 15.0809 38.4313 14.5041 38.409C13.9274 38.3867 13.3634 38.5829 12.925 38.9583ZM11.4584 27.5C11.4584 26.8922 11.2169 26.3093 10.7872 25.8796C10.3574 25.4498 9.7745 25.2083 9.16671 25.2083H6.87504C6.26725 25.2083 5.68436 25.4498 5.25459 25.8796C4.82482 26.3093 4.58337 26.8922 4.58337 27.5C4.58337 28.1078 4.82482 28.6907 5.25459 29.1205C5.68436 29.5502 6.26725 29.7917 6.87504 29.7917H9.16671C9.7745 29.7917 10.3574 29.5502 10.7872 29.1205C11.2169 28.6907 11.4584 28.1078 11.4584 27.5ZM27.5 11.4583C28.1078 11.4583 28.6907 11.2169 29.1205 10.7871C29.5503 10.3574 29.7917 9.77446 29.7917 9.16668V6.87501C29.7917 6.26722 29.5503 5.68433 29.1205 5.25456C28.6907 4.82479 28.1078 4.58334 27.5 4.58334C26.8923 4.58334 26.3094 4.82479 25.8796 5.25456C25.4498 5.68433 25.2084 6.26722 25.2084 6.87501V9.16668C25.2084 9.77446 25.4498 10.3574 25.8796 10.7871C26.3094 11.2169 26.8923 11.4583 27.5 11.4583ZM12.925 16.1563C13.3519 16.5796 13.928 16.8183 14.5292 16.8208C14.8308 16.8226 15.1298 16.7648 15.409 16.6507C15.6882 16.5367 15.9422 16.3687 16.1563 16.1563C16.5831 15.7269 16.8227 15.1461 16.8227 14.5406C16.8227 13.9352 16.5831 13.3544 16.1563 12.925L14.5292 11.2979C14.0908 10.9225 13.5269 10.7263 12.9501 10.7486C12.3734 10.7709 11.8263 11.01 11.4181 11.4181C11.01 11.8262 10.7709 12.3733 10.7486 12.9501C10.7263 13.5269 10.9225 14.0908 11.298 14.5292L12.925 16.1563ZM40.425 16.8208C41.0262 16.8183 41.6024 16.5796 42.0292 16.1563L43.6563 14.5292C43.8962 14.3237 44.091 14.0709 44.2286 13.7866C44.3661 13.5023 44.4434 13.1926 44.4556 12.877C44.4678 12.5614 44.4146 12.2467 44.2994 11.9526C44.1842 11.6585 44.0094 11.3914 43.7861 11.1681C43.5628 10.9448 43.2957 10.77 43.0016 10.6548C42.7075 10.5396 42.3928 10.4864 42.0772 10.4986C41.7616 10.5108 41.4519 10.5881 41.1676 10.7256C40.8833 10.8632 40.6305 11.058 40.425 11.2979L38.9584 12.925C38.5316 13.3544 38.292 13.9352 38.292 14.5406C38.292 15.1461 38.5316 15.7269 38.9584 16.1563C39.3624 16.5581 39.9016 16.7951 40.4709 16.8208H40.425ZM48.125 25.2083H45.8334C45.2256 25.2083 44.6427 25.4498 44.2129 25.8796C43.7831 26.3093 43.5417 26.8922 43.5417 27.5C43.5417 28.1078 43.7831 28.6907 44.2129 29.1205C44.6427 29.5502 45.2256 29.7917 45.8334 29.7917H48.125C48.7328 29.7917 49.3157 29.5502 49.7455 29.1205C50.1753 28.6907 50.4167 28.1078 50.4167 27.5C50.4167 26.8922 50.1753 26.3093 49.7455 25.8796C49.3157 25.4498 48.7328 25.2083 48.125 25.2083ZM27.5 43.5417C26.8923 43.5417 26.3094 43.7831 25.8796 44.2129C25.4498 44.6427 25.2084 45.2256 25.2084 45.8333V48.125C25.2084 48.7328 25.4498 49.3157 25.8796 49.7455C26.3094 50.1752 26.8923 50.4167 27.5 50.4167C28.1078 50.4167 28.6907 50.1752 29.1205 49.7455C29.5503 49.3157 29.7917 48.7328 29.7917 48.125V45.8333C29.7917 45.2256 29.5503 44.6427 29.1205 44.2129C28.6907 43.7831 28.1078 43.5417 27.5 43.5417ZM42.075 38.9583C41.6397 38.7162 41.1372 38.6225 40.6438 38.6915C40.1504 38.7604 39.6929 38.9883 39.3406 39.3406C38.9883 39.6929 38.7605 40.1504 38.6915 40.6438C38.6225 41.1372 38.7162 41.6396 38.9584 42.075L40.5855 43.7021C41.0148 44.1289 41.5957 44.3685 42.2011 44.3685C42.8065 44.3685 43.3873 44.1289 43.8167 43.7021C44.2435 43.2727 44.4831 42.6919 44.4831 42.0865C44.4831 41.481 44.2435 40.9002 43.8167 40.4708L42.075 38.9583ZM27.5 14.8958C25.0072 14.8958 22.5703 15.6351 20.4975 17.02C18.4248 18.405 16.8093 20.3735 15.8553 22.6766C14.9013 24.9797 14.6517 27.514 15.1381 29.959C15.6244 32.4039 16.8248 34.6498 18.5875 36.4125C20.3503 38.1752 22.5961 39.3757 25.0411 39.862C27.4861 40.3483 30.0203 40.0987 32.3234 39.1447C34.6266 38.1908 36.5951 36.5753 37.98 34.5025C39.365 32.4298 40.1042 29.9929 40.1042 27.5C40.0982 24.159 38.7683 20.9566 36.4058 18.5942C34.0434 16.2318 30.841 14.9019 27.5 14.8958ZM27.5 35.5208C25.9137 35.5208 24.3629 35.0504 23.0439 34.1691C21.7249 33.2878 20.6968 32.0351 20.0898 30.5695C19.4827 29.1038 19.3238 27.4911 19.6333 25.9352C19.9428 24.3793 20.7067 22.9502 21.8285 21.8284C22.9502 20.7067 24.3794 19.9428 25.9353 19.6333C27.4911 19.3238 29.1039 19.4826 30.5695 20.0897C32.0351 20.6968 33.2878 21.7249 34.1691 23.0439C35.0505 24.3629 35.5209 25.9136 35.5209 27.5C35.5209 29.6273 34.6758 31.6674 33.1716 33.1716C31.6674 34.6758 29.6273 35.5208 27.5 35.5208Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNavbarSun);\nexport default __webpack_public_path__ + \"static/media/navbar-sun.a7c0145f.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FC } from 'react';\r\nimport TransparentButton from '../../../UI/TransparentButton/TransparentButton';\r\nimport { useActions } from '../../../../hooks/useActions';\r\nimport { ReactComponent as LogoutSvg } from '../../../../assets/svg/navbar-logout.svg';\r\n\r\nconst LogoutButton:FC = ({children}) => {\r\n  const { logout } = useActions();\r\n\r\n  return (\r\n    <TransparentButton className=\"transparent-button--main navbar__button navbar__logout\" onClick={() => logout()}>\r\n      <LogoutSvg />\r\n      <span>{children}</span>\r\n    </TransparentButton>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgNavbarMoon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.64 13C21.4957 12.8807 21.3207 12.8043 21.1351 12.7795C20.9494 12.7548 20.7606 12.7827 20.59 12.86C19.5326 13.3439 18.3829 13.5929 17.22 13.59C15.0689 13.5874 13.006 12.7344 11.4812 11.2171C9.95632 9.69976 9.09321 7.64111 9.08001 5.49C9.08457 4.81583 9.16848 4.14454 9.33001 3.49C9.36429 3.31554 9.35143 3.13509 9.29277 2.96725C9.2341 2.79941 9.13175 2.65025 8.99626 2.53513C8.86076 2.42001 8.69702 2.3431 8.52191 2.31231C8.3468 2.28153 8.16665 2.29799 8.00001 2.36C6.43234 3.06491 5.06958 4.15676 4.03977 5.53298C3.00996 6.9092 2.34689 8.52462 2.11286 10.2275C1.87883 11.9303 2.08152 13.6647 2.70188 15.2678C3.32225 16.8708 4.33993 18.2898 5.65931 19.3915C6.9787 20.4932 8.55649 21.2414 10.2445 21.5658C11.9324 21.8903 13.6752 21.7803 15.309 21.2462C16.9428 20.7122 18.414 19.7716 19.5844 18.5128C20.7548 17.254 21.5861 15.7183 22 14.05C22.0504 13.859 22.0431 13.6573 21.9791 13.4705C21.915 13.2836 21.797 13.1199 21.64 13ZM12.14 19.69C10.4618 19.6782 8.82821 19.1479 7.46301 18.1717C6.0978 17.1956 5.06768 15.8213 4.5137 14.2371C3.95971 12.6529 3.90895 10.9362 4.36835 9.322C4.82776 7.70782 5.77487 6.2751 7.08001 5.22V5.49C7.08266 8.17848 8.15183 10.7561 10.0529 12.6571C11.9539 14.5582 14.5315 15.6274 17.22 15.63C17.9259 15.6326 18.63 15.5588 19.32 15.41C18.6299 16.7155 17.5965 17.8078 16.3312 18.5691C15.0659 19.3304 13.6167 19.7318 12.14 19.73V19.69Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNavbarMoon);\nexport default __webpack_public_path__ + \"static/media/navbar-moon.8b414a85.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgNavbarProfile(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 64,\n    height: 64,\n    viewBox: \"0 0 64 64\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.9999 5.33334C26.8279 5.34317 21.7703 6.85684 17.4432 9.68998C13.1161 12.5231 9.70632 16.5535 7.6291 21.2901C5.55189 26.0267 4.89693 31.2651 5.744 36.3674C6.59106 41.4696 8.9036 46.2154 12.3999 50.0267C14.8971 52.7335 17.9278 54.8937 21.3011 56.3712C24.6744 57.8488 28.3172 58.6116 31.9999 58.6116C35.6826 58.6116 39.3254 57.8488 42.6988 56.3712C46.0721 54.8937 49.1028 52.7335 51.5999 50.0267C55.0963 46.2154 57.4088 41.4696 58.2559 36.3674C59.1029 31.2651 58.448 26.0267 56.3708 21.2901C54.2935 16.5535 50.8837 12.5231 46.5566 9.68998C42.2296 6.85684 37.172 5.34317 31.9999 5.33334V5.33334ZM31.9999 53.3333C26.4758 53.325 21.1704 51.1741 17.1999 47.3333C18.4054 44.3988 20.456 41.8888 23.0913 40.1224C25.7265 38.356 28.8274 37.4128 31.9999 37.4128C35.1724 37.4128 38.2733 38.356 40.9086 40.1224C43.5438 41.8888 45.5945 44.3988 46.7999 47.3333C42.8295 51.1741 37.524 53.325 31.9999 53.3333ZM26.6666 26.6667C26.6666 25.6118 26.9794 24.5807 27.5654 23.7036C28.1515 22.8266 28.9844 22.143 29.9589 21.7393C30.9335 21.3357 32.0058 21.23 33.0404 21.4358C34.075 21.6416 35.0253 22.1496 35.7712 22.8954C36.517 23.6413 37.025 24.5916 37.2308 25.6262C37.4366 26.6608 37.331 27.7331 36.9273 28.7077C36.5236 29.6822 35.84 30.5151 34.963 31.1012C34.0859 31.6872 33.0548 32 31.9999 32C30.5854 32 29.2289 31.4381 28.2287 30.4379C27.2285 29.4377 26.6666 28.0812 26.6666 26.6667ZM50.4266 42.6667C48.044 38.5914 44.377 35.4214 39.9999 33.6533C41.3577 32.1138 42.2424 30.2151 42.5479 28.1852C42.8533 26.1553 42.5665 24.0803 41.7219 22.2093C40.8773 20.3384 39.5108 18.7508 37.7863 17.6373C36.0619 16.5237 34.0527 15.9313 31.9999 15.9313C29.9472 15.9313 27.938 16.5237 26.2135 17.6373C24.489 18.7508 23.1225 20.3384 22.2779 22.2093C21.4333 24.0803 21.1466 26.1553 21.452 28.1852C21.7575 30.2151 22.6421 32.1138 23.9999 33.6533C19.6229 35.4214 15.9558 38.5914 13.5733 42.6667C11.6744 39.4323 10.6712 35.7506 10.6666 32C10.6666 26.3421 12.9142 20.9158 16.915 16.9151C20.9158 12.9143 26.342 10.6667 31.9999 10.6667C37.6579 10.6667 43.0841 12.9143 47.0849 16.9151C51.0856 20.9158 53.3333 26.3421 53.3333 32C53.3287 35.7506 52.3254 39.4323 50.4266 42.6667V42.6667Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNavbarProfile);\nexport default __webpack_public_path__ + \"static/media/navbar_profile.6b98fe1c.svg\";\nexport { ForwardRef as ReactComponent };","import { useActions } from '../../../../hooks/useActions';\r\nimport { useAppSelector } from '../../../../hooks/useAppSelector';\r\nimport { ThemeStyleType } from '../../../../store/reducers/theme/types';\r\nimport { useEffect } from 'react';\r\n\r\nconst useThemeSwitch = () => {\r\n  const { setTheme } = useActions();\r\n  const currentTheme = useAppSelector(state => state.theme.themeStyle);\r\n\r\n  const switchTheme = () => {\r\n    const newTheme: ThemeStyleType = currentTheme === 'light' ? 'dark' : 'light';\r\n    setTheme(newTheme);\r\n    localStorage.setItem('themeStyle', newTheme);\r\n    document.body.classList.toggle('dark');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentTheme === 'dark') {\r\n      document.body.classList.add('dark');\r\n    }\r\n  }, []);\r\n\r\n  return { currentTheme, switchTheme };\r\n};\r\n\r\nexport default useThemeSwitch;","import React, { FC } from 'react';\r\nimport TransparentButton from '../../../UI/TransparentButton/TransparentButton';\r\nimport { ReactComponent as SunSvg } from '../../../../assets/svg/navbar-sun.svg';\r\nimport { ReactComponent as MoonSvg } from '../../../../assets/svg/navbar-moon.svg';\r\nimport useThemeSwitch from './useThemeSwitch';\r\n\r\nconst ThemeSwitch: FC = ({children}) => {\r\n  const { currentTheme, switchTheme } = useThemeSwitch();\r\n\r\n  return (\r\n    <TransparentButton className=\"transparent-button--main navbar__button navbar__theme-switch\" onClick={switchTheme}>\r\n      {currentTheme === 'light' && <SunSvg />}\r\n      {currentTheme === 'dark' && <MoonSvg />}\r\n      <span>{children}</span>\r\n    </TransparentButton>\r\n  );\r\n};\r\n\r\nexport default ThemeSwitch;\r\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgNavbarClub(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 64,\n    height: 64,\n    viewBox: \"0 0 64 64\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.8 32.5867C34.2228 31.355 35.3641 29.8317 36.1463 28.1201C36.9285 26.4084 37.3333 24.5486 37.3333 22.6667C37.3333 19.1304 35.9285 15.7391 33.4281 13.2386C30.9276 10.7381 27.5362 9.33333 24 9.33333C20.4637 9.33333 17.0724 10.7381 14.5719 13.2386C12.0714 15.7391 10.6666 19.1304 10.6666 22.6667C10.6666 24.5486 11.0714 26.4084 11.8536 28.1201C12.6358 29.8317 13.7771 31.355 15.2 32.5867C11.467 34.277 8.29987 37.0067 6.07724 40.4495C3.85461 43.8922 2.67055 47.9022 2.66663 52C2.66663 52.7072 2.94758 53.3855 3.44767 53.8856C3.94777 54.3857 4.62605 54.6667 5.33329 54.6667C6.04054 54.6667 6.71881 54.3857 7.21891 53.8856C7.71901 53.3855 7.99996 52.7072 7.99996 52C7.99996 47.7565 9.68567 43.6869 12.6863 40.6863C15.6868 37.6857 19.7565 36 24 36C28.2434 36 32.3131 37.6857 35.3137 40.6863C38.3143 43.6869 40 47.7565 40 52C40 52.7072 40.2809 53.3855 40.781 53.8856C41.2811 54.3857 41.9594 54.6667 42.6666 54.6667C43.3739 54.6667 44.0522 54.3857 44.5522 53.8856C45.0523 53.3855 45.3333 52.7072 45.3333 52C45.3294 47.9022 44.1453 43.8922 41.9227 40.4495C39.7001 37.0067 36.5329 34.277 32.8 32.5867ZM24 30.6667C22.4177 30.6667 20.871 30.1975 19.5554 29.3184C18.2398 28.4394 17.2144 27.1899 16.6089 25.7281C16.0034 24.2663 15.845 22.6578 16.1537 21.1059C16.4624 19.5541 17.2243 18.1286 18.3431 17.0098C19.4619 15.891 20.8874 15.1291 22.4392 14.8204C23.9911 14.5117 25.5996 14.6701 27.0614 15.2756C28.5232 15.8811 29.7727 16.9065 30.6517 18.2221C31.5308 19.5377 32 21.0844 32 22.6667C32 24.7884 31.1571 26.8232 29.6568 28.3235C28.1565 29.8238 26.1217 30.6667 24 30.6667ZM49.9733 31.52C51.6799 29.5982 52.7947 27.2241 53.1834 24.6836C53.5722 22.143 53.2184 19.5442 52.1647 17.2C51.1109 14.8558 49.4021 12.8661 47.2439 11.4705C45.0857 10.0748 42.5701 9.33264 40 9.33333C39.2927 9.33333 38.6144 9.61428 38.1143 10.1144C37.6142 10.6145 37.3333 11.2928 37.3333 12C37.3333 12.7072 37.6142 13.3855 38.1143 13.8856C38.6144 14.3857 39.2927 14.6667 40 14.6667C42.1217 14.6667 44.1565 15.5095 45.6568 17.0098C47.1571 18.5101 48 20.5449 48 22.6667C47.9962 24.0673 47.6247 25.4424 46.9228 26.6545C46.2208 27.8665 45.213 28.873 44 29.5733C43.6046 29.8014 43.2744 30.1271 43.0409 30.5193C42.8075 30.9115 42.6786 31.3571 42.6666 31.8133C42.6555 32.266 42.7598 32.7141 42.9697 33.1154C43.1797 33.5166 43.4883 33.8577 43.8666 34.1067L44.9066 34.8L45.2533 34.9867C48.4677 36.5112 51.1795 38.9226 53.0692 41.9368C54.959 44.951 55.9481 48.4425 55.92 52C55.92 52.7072 56.2009 53.3855 56.701 53.8856C57.2011 54.3857 57.8794 54.6667 58.5866 54.6667C59.2939 54.6667 59.9721 54.3857 60.4722 53.8856C60.9723 53.3855 61.2533 52.7072 61.2533 52C61.2751 47.9078 60.2502 43.878 58.2759 40.2935C56.3016 36.709 53.4435 33.6888 49.9733 31.52Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNavbarClub);\nexport default __webpack_public_path__ + \"static/media/navbar-club.2d5bc2fd.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgNavbarBook(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 64,\n    height: 64,\n    viewBox: \"0 0 64 64\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48 5.33333H21.3333C18.5043 5.33333 15.7912 6.45714 13.7908 8.45753C11.7904 10.4579 10.6666 13.171 10.6666 16V48C10.6666 50.829 11.7904 53.5421 13.7908 55.5425C15.7912 57.5429 18.5043 58.6667 21.3333 58.6667H48C49.4144 58.6667 50.771 58.1048 51.7712 57.1046C52.7714 56.1044 53.3333 54.7478 53.3333 53.3333V10.6667C53.3333 9.25218 52.7714 7.89562 51.7712 6.89543C50.771 5.89524 49.4144 5.33333 48 5.33333ZM16 16C16 14.5855 16.5619 13.229 17.5621 12.2288C18.5622 11.2286 19.9188 10.6667 21.3333 10.6667H48V37.3333H21.3333C19.4534 37.3412 17.6106 37.8572 16 38.8267V16ZM21.3333 53.3333C19.9188 53.3333 18.5622 52.7714 17.5621 51.7712C16.5619 50.771 16 49.4145 16 48C16 46.5855 16.5619 45.229 17.5621 44.2288C18.5622 43.2286 19.9188 42.6667 21.3333 42.6667H48V53.3333H21.3333ZM26.6666 21.3333H37.3333C38.0405 21.3333 38.7188 21.0524 39.2189 20.5523C39.719 20.0522 40 19.3739 40 18.6667C40 17.9594 39.719 17.2811 39.2189 16.781C38.7188 16.281 38.0405 16 37.3333 16H26.6666C25.9594 16 25.2811 16.281 24.781 16.781C24.2809 17.2811 24 17.9594 24 18.6667C24 19.3739 24.2809 20.0522 24.781 20.5523C25.2811 21.0524 25.9594 21.3333 26.6666 21.3333Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNavbarBook);\nexport default __webpack_public_path__ + \"static/media/navbar-book.c58da9f0.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgWheel(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.375 10.7344C19.375 8.59515 18.6356 6.50281 17.2927 4.84277C16.0791 3.34222 14.4196 2.24652 12.5781 1.71918V0H7.42188V1.71918C5.59631 2.24176 3.95074 3.32153 2.73895 4.80377C1.37573 6.47095 0.625 8.57721 0.625 10.7344C0.625 14.4992 2.85596 17.7523 6.06506 19.2424L5.4328 22.5938H4.09375V24H15.9062V22.5938H14.5672L13.9349 19.2424C17.144 17.7523 19.375 14.4992 19.375 10.7344ZM16.1994 5.72699C17.1927 6.95526 17.7974 8.46204 17.9373 10.0312H11.9885C11.901 9.78497 11.7692 9.55975 11.6025 9.36493L14.5771 4.21271C15.1821 4.6377 15.7299 5.14655 16.1994 5.72699ZM8.82812 1.40625H11.1719V2.14618L10 3.31805L8.82812 2.14618V1.40625ZM7.77435 3.08112L10 5.30695L12.226 3.08093C12.6147 3.19409 12.994 3.33728 13.3602 3.5083L10.3853 8.66089C10.2602 8.63763 10.1317 8.625 10 8.625C9.86835 8.625 9.73981 8.63763 9.61475 8.66089L6.64001 3.50848C7.00604 3.33746 7.38525 3.19446 7.77435 3.08112ZM10.7031 10.7344C10.7031 11.122 10.3876 11.4375 10 11.4375C9.61237 11.4375 9.29688 11.122 9.29688 10.7344C9.29688 10.3467 9.61237 10.0312 10 10.0312C10.3876 10.0312 10.7031 10.3467 10.7031 10.7344ZM3.82751 5.69403C4.29132 5.12677 4.82947 4.62891 5.42255 4.21234L8.39746 9.36493C8.23083 9.55975 8.09882 9.78497 8.01147 10.0312H2.06274C2.20374 8.44739 2.81787 6.92889 3.82751 5.69403ZM5.42383 17.2544C3.55396 15.938 2.27368 13.8389 2.06256 11.4375H8.01147C8.099 11.6838 8.23083 11.909 8.39746 12.1038L5.42383 17.2544ZM6.86377 22.5938L7.40173 19.7428C8.22717 19.9812 9.09894 20.1094 10 20.1094C10.9011 20.1094 11.7728 19.9812 12.5983 19.7428L13.1362 22.5938H6.86377ZM10 18.7031C8.80029 18.7031 7.66211 18.4362 6.64056 17.9594L9.61475 12.8079C9.73981 12.8309 9.86835 12.8438 10 12.8438C10.1317 12.8438 10.2602 12.8311 10.3853 12.8079L13.3594 17.9594C12.3379 18.4362 11.1997 18.7031 10 18.7031ZM14.5762 17.2544L11.6025 12.1038C11.7692 11.909 11.9012 11.6838 11.9885 11.4375H17.9374C17.7263 13.8389 16.446 15.938 14.5762 17.2544Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgWheel);\nexport default __webpack_public_path__ + \"static/media/wheel.4689b592.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FC, Fragment } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\ninterface NavbarMainButtonProps {\r\n  path?: string;\r\n  disabled?: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst NavbarMainButton: FC<NavbarMainButtonProps> = ({ path, disabled, className, children }) => {\r\n  const classString = className ? ` ${className}` : '';\r\n\r\n  const location = useLocation();\r\n  let isActive = false;\r\n  if (path) {\r\n    isActive = location.pathname.includes(path);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {disabled && <div className={'navbar__button navbar__button--disabled' + classString}>{children}</div>}\r\n      {isActive && <div className={'navbar__button navbar__button--active' + classString}>{children}</div>}\r\n      {!isActive && !disabled && path && (\r\n        <Link className={'navbar__button' + classString} to={path}>\r\n          {children}\r\n        </Link>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NavbarMainButton;\r\n","import React, { FC, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ThemeSwitch from '../ThemeSwitch/ThemeSwitch';\r\nimport LogoutButton from '../LogoutButton/LogoutButton';\r\nimport { RouteNames } from '../../../../routes/route-names.enum';\r\nimport './navbar-bubble.scss';\r\n\r\ninterface NavbarBubbleProps {\r\n  userUrl: string;\r\n  userEmoji: string;\r\n}\r\n\r\nconst NavbarBubble: FC<NavbarBubbleProps> = ({ userUrl, userEmoji, ...rest }) => {\r\n  return (\r\n    <Fragment>\r\n      <Link className=\"bubble__item\" to={`${RouteNames.USER_PROFILE_BASE}${userUrl}`}>\r\n        <span className=\"bubble__emoji\">{userEmoji}</span>\r\n        <span>Профиль</span>\r\n      </Link>\r\n      <div className=\"bubble__item\">\r\n        <ThemeSwitch>Сменить тему</ThemeSwitch>\r\n      </div>\r\n      <div className=\"bubble__item\">\r\n        <LogoutButton>Выйти</LogoutButton>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NavbarBubble;\r\n","import React, { FC } from 'react';\r\nimport TransparentButton from '../../../UI/TransparentButton/TransparentButton';\r\nimport NavbarBubble from '../NavbarBubble/NavbarBubble';\r\nimport { useAppSelector } from '../../../../hooks/useAppSelector';\r\nimport { useActions } from '../../../../hooks/useActions';\r\n\r\ninterface NavbarBubbleButtonProps {\r\n  userUrl: string;\r\n  userEmoji: string;\r\n}\r\n\r\nconst NavbarBubbleButton: FC<NavbarBubbleButtonProps> = ({ userUrl, userEmoji, children }) => {\r\n  const isBubbleOpened = useAppSelector(state => state.bubble.isShow);\r\n  const {closeBubble, showBubble} = useActions();\r\n  const toggleState = () => {\r\n    if (isBubbleOpened) {\r\n      closeBubble();\r\n    } else {\r\n      showBubble(<NavbarBubble userUrl={userUrl} userEmoji={userEmoji} />, 'navbar-bubble__wrapper');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar__bubble-button\">\r\n      <TransparentButton className=\"navbar__button\" onClick={toggleState}>\r\n        {children}\r\n      </TransparentButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavbarBubbleButton;\r\n","import React, { FC } from 'react';\r\nimport { useAppSelector } from '../../../hooks/useAppSelector';\r\nimport { RouteNames } from '../../../routes/route-names.enum';\r\nimport LogoutButton from './LogoutButton/LogoutButton';\r\nimport './navbar.scss';\r\nimport ThemeSwitch from './ThemeSwitch/ThemeSwitch';\r\nimport { ReactComponent as ProfileSvg } from '../../../assets/svg/navbar_profile.svg';\r\nimport { ReactComponent as ClubSvg } from '../../../assets/svg/navbar-club.svg';\r\nimport { ReactComponent as BookSvg } from '../../../assets/svg/navbar-book.svg';\r\nimport NavbarMainButton from './NavbarMainButton/NavbarMainButton';\r\nimport NavbarBubbleButton from './NavbarBubbleButton/NavbarBubbleButton';\r\n\r\nconst Navbar: FC = () => {\r\n  const { userData } = useAppSelector(state => state.auth);\r\n\r\n  const profileMainButton = () => (\r\n    <NavbarMainButton className=\"navbar__profile\" path={`${RouteNames.USER_PROFILE_BASE}${userData?.url}`}>\r\n      <ProfileSvg />\r\n    </NavbarMainButton>\r\n  );\r\n\r\n  const profileBubbleButton = () => (\r\n    <NavbarBubbleButton userUrl={userData?.url || ''} userEmoji={userData?.emoji || ''}>\r\n      <ProfileSvg />\r\n    </NavbarBubbleButton>\r\n  );\r\n\r\n  const clubMainButton = () => (\r\n    <NavbarMainButton path={`${RouteNames.CLUB_PROFILE_BASE}${userData?.club}`}>\r\n      <ClubSvg />\r\n    </NavbarMainButton>\r\n  );\r\n\r\n  const clubMainButtonDisabled = () => (\r\n    <NavbarMainButton disabled>\r\n      <ClubSvg />\r\n    </NavbarMainButton>\r\n  );\r\n\r\n  const randomBookMainButton = () => (\r\n    <NavbarMainButton path={RouteNames.RANDOM_BOOK}>\r\n      <BookSvg />\r\n    </NavbarMainButton>\r\n  );\r\n\r\n  const randomBookMainButtonDisabled = () => (\r\n    <NavbarMainButton disabled>\r\n      <BookSvg />\r\n    </NavbarMainButton>\r\n  );\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <ThemeSwitch />\r\n      <div className=\"navbar__main-buttons\">\r\n        {profileMainButton()}\r\n        {profileBubbleButton()}\r\n        {userData?.club ? clubMainButton() : clubMainButtonDisabled()}\r\n        {userData?.club ? randomBookMainButton() : randomBookMainButtonDisabled()}\r\n      </div>\r\n      <LogoutButton />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { ButtonHTMLAttributes, FC } from 'react';\r\nimport './main-button.scss';\r\n\r\ninterface MainButtonProps extends ButtonHTMLAttributes<HTMLButtonElement>{\r\n\r\n}\r\n\r\nconst MainButton: FC<MainButtonProps> = ({className, children, ...rest}) => {\r\n  return (\r\n    <button {...rest} className={`${className ? `main-button ${className}` : 'main-button'}`}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MainButton;","import React, { FC, useEffect, useState } from 'react';\r\nimport { BookData } from '../../../models/book-data';\r\nimport './book-data-view.scss';\r\n\r\ninterface BookDataViewProps {\r\n  book: BookData;\r\n}\r\n\r\nconst BookDataView: FC<BookDataViewProps> = ({ book, ...rest }) => {\r\n  //fix parser bug\r\n  const [coverSrc, setCoverSrc] = useState(book.cover);\r\n\r\n  useEffect(() => {\r\n    const readlyHref = 'https://readly.ru';\r\n    if (!coverSrc.includes(readlyHref)) {\r\n      setCoverSrc(readlyHref + book.cover);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"book-data-view\">\r\n      <section className=\"book-data-view__header\">\r\n        <figure className=\"book-data-view__cover\">\r\n          <img src={coverSrc} alt={book.title} />\r\n        </figure>\r\n        <div className=\"book-data-view__title-container\">\r\n          <h1 className=\"book-data-view__title\">{book.title}</h1>\r\n        </div>\r\n      </section>\r\n      <section className=\"book-data-view__info\">\r\n        <div className=\"book-data-view__info-line\">\r\n          <p className=\"book-data-view__info-label\">{book.authors.length <= 1 ? 'Автор:' : 'Авторы'}</p>\r\n          <p className=\"book-data-view__info-value\">{book.authors.join(', ')}</p>\r\n        </div>\r\n        <div className=\"book-data-view__info-line\">\r\n          <p className=\"book-data-view__info-label\">{book.genres.length <= 1 ? 'Жанр:' : 'Жанры:'}</p>\r\n          <p className=\"book-data-view__info-value\">{book.genres.join(', ')}</p>\r\n        </div>\r\n        <div className=\"book-data-view__info-line\">\r\n          <p className=\"book-data-view__info-label\">Год:</p>\r\n          <p className=\"book-data-view__info-value\">{book.year}</p>\r\n        </div>\r\n      </section>\r\n      <section className=\"book-data-view__description-container\">\r\n        <p className=\"book-data-view__info-label\">Описание:</p>\r\n        <span className=\"book-data-view__description\">{book.description}</span>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookDataView;\r\n","import $api from '../api';\r\nimport { BookData } from '../models/book-data';\r\n\r\nconst BOOK_PREFIX = 'book/';\r\n\r\nconst BookService = {\r\n  getRandomBook: async () => {\r\n    return $api.get<BookData>(BOOK_PREFIX + 'random');\r\n  },\r\n\r\n  confirmBook: async (bookData: BookData) => {\r\n    return $api.post(BOOK_PREFIX + 'confirm', { book: bookData });\r\n  },\r\n\r\n  getBookData: async (bookId: string) => {\r\n    return $api.get<BookData>(`${BOOK_PREFIX}${bookId}`);\r\n  },\r\n};\r\n\r\nexport default BookService;","import { useEffect, useState } from 'react';\r\nimport { BookData } from '../../../models/book-data';\r\nimport { useAppSelector } from '../../../hooks/useAppSelector';\r\nimport BookService from '../../../services/book.service';\r\nimport { useActions } from '../../../hooks/useActions';\r\nimport useRequest from '../../../hooks/useRequest';\r\n\r\nconst useRandomBookContainer = () => {\r\n  const [bookData, setBookData] = useState<BookData>({\r\n    title: '',\r\n    authors: [''],\r\n    year: '',\r\n    cover: '',\r\n    description: '',\r\n    genres: [''],\r\n  });\r\n  const isLoading = useAppSelector(state => state.loadingPage.isLoadingPage);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const getBook = useRequest('Page', async () => {\r\n    const response = await BookService.getRandomBook();\r\n    setBookData(response.data);\r\n    setIsLoaded(true);\r\n  });\r\n\r\n  const { addNotification } = useActions();\r\n  const confirmBook = useRequest('Post', async (bookData: BookData) => {\r\n    await BookService.confirmBook(bookData);\r\n    addNotification('Книга добавлена', 'success');\r\n    getBook({});\r\n  });\r\n\r\n  useEffect(() => {\r\n    getBook({});\r\n  }, []);\r\n\r\n  return { bookData, confirmBook, getBook, isLoading, isLoaded };\r\n};\r\n\r\nexport default useRandomBookContainer;\r\n","import React, { Fragment } from 'react';\r\nimport MainButton from '../../UI/MainButton/MainButton';\r\nimport BookDataView from '../../UI/BookDataView/BookDataView';\r\nimport './random-book-container.scss';\r\nimport useRandomBookContainer from './useRandomBookContainer';\r\nimport PageLoader from '../../UI/PageLoader/PageLoader';\r\n\r\nconst RandomBookContainer = () => {\r\n  const { bookData, getBook, confirmBook, isLoading, isLoaded } = useRandomBookContainer();\r\n\r\n  return !isLoading && isLoaded ? (\r\n    <Fragment>\r\n      <div className=\"random-book__view\">\r\n        <BookDataView book={bookData} />\r\n      </div>\r\n      <div className=\"random-book__buttons\">\r\n        <MainButton className=\"main-button--green\" onClick={() => confirmBook(bookData)}>\r\n          Подтвердить\r\n        </MainButton>\r\n        <MainButton className=\"main-button--red\" onClick={() => getBook({})}>\r\n          Искать ещё\r\n        </MainButton>\r\n      </div>\r\n    </Fragment>\r\n  ) : (\r\n    <div className=\"random-book__loader\">\r\n      <PageLoader/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomBookContainer;\r\n","import React, { FC } from 'react';\r\nimport MainButton from '../../UI/MainButton/MainButton';\r\nimport './random-book-placeholder.scss';\r\n\r\ninterface RandomBookPlaceholderProps {\r\n  handleClick: () => void;\r\n}\r\n\r\nconst RandomBookPlaceholder: FC<RandomBookPlaceholderProps> = ({ handleClick }) => {\r\n  return (\r\n    <div className=\"random-book-placeholder\">\r\n      <MainButton className=\"main-button--big\" onClick={() => handleClick()}>Искать книги</MainButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomBookPlaceholder;","import React, { Fragment, useState } from 'react';\r\nimport RandomBookContainer from '../../Containers/RandomBookContainer/RandomBookContainer';\r\nimport RandomBookPlaceholder from '../../Containers/RandomBookPlaceholder/RandomBookPlaceholder';\r\nimport './random-book-page.scss';\r\nimport { useAppSelector } from '../../../hooks/useAppSelector';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst RandomBookPage = () => {\r\n  const [isBook, setIsBook] = useState(false);\r\n  const isLoading = useAppSelector(state => state.loadingPage.isLoadingPage);\r\n  const handleSetIsBook = () => {\r\n    setIsBook(true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Helmet>\r\n        <title>Случайная книга</title>\r\n      </Helmet>\r\n      <div className={isLoading ? 'random-book-page random-book-page--loading' : \"random-book-page\"}>\r\n        {isBook ? <RandomBookContainer /> : <RandomBookPlaceholder handleClick={handleSetIsBook} />}\r\n      </div>\r\n    </Fragment>\r\n\r\n  );\r\n};\r\n\r\nexport default RandomBookPage;\r\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLeaveClub(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.8125 18.375H15.5625C15.4594 18.375 15.375 18.4593 15.375 18.5625V19.6875C15.375 19.7906 15.4594 19.875 15.5625 19.875H20.8125C20.9156 19.875 21 19.7906 21 19.6875V18.5625C21 18.4593 20.9156 18.375 20.8125 18.375ZM8.7539 11.9625C8.73281 11.7586 8.72109 11.5523 8.72109 11.3437C8.72109 10.9711 8.75625 10.6078 8.82187 10.2539C8.83828 10.1695 8.79375 10.0828 8.7164 10.0476C8.39765 9.90466 8.10469 9.70778 7.85156 9.45935C7.55329 9.17014 7.31859 8.82194 7.16242 8.43696C7.00624 8.05198 6.93204 7.63867 6.94453 7.22341C6.96562 6.47106 7.26797 5.75622 7.79531 5.21716C8.37422 4.62419 9.15234 4.30075 9.97968 4.31013C10.7273 4.31716 11.4492 4.60544 11.9953 5.11638C12.1805 5.28981 12.3398 5.482 12.4734 5.68825C12.5203 5.76091 12.6117 5.79138 12.6914 5.76325C13.1039 5.62028 13.5398 5.5195 13.9875 5.47263C14.1187 5.45856 14.1937 5.31794 14.1352 5.20075C13.3734 3.69372 11.8172 2.6531 10.0172 2.62497C7.41797 2.58513 5.25234 4.7156 5.25234 7.31013C5.25234 8.782 5.92968 10.0945 6.9914 10.9547C6.24609 11.2992 5.55937 11.775 4.96406 12.3703C3.67969 13.6523 2.95312 15.3445 2.90625 17.1515C2.90562 17.1765 2.91001 17.2014 2.91915 17.2247C2.92829 17.248 2.94201 17.2692 2.95948 17.2872C2.97695 17.3051 2.99784 17.3193 3.02089 17.329C3.04395 17.3387 3.06873 17.3437 3.09375 17.3437H4.40859C4.50937 17.3437 4.59375 17.264 4.59609 17.1632C4.64062 15.8039 5.1914 14.5312 6.15937 13.5656C6.84843 12.8765 7.69218 12.3984 8.61328 12.1664C8.70469 12.1429 8.76562 12.0562 8.7539 11.9625ZM19.3125 11.3437C19.3125 8.77966 17.2523 6.69606 14.6977 6.65622C12.1008 6.61638 9.9375 8.74685 9.9375 11.3437C9.9375 12.8156 10.6172 14.1281 11.6766 14.9883C10.9235 15.3373 10.238 15.8165 9.65156 16.4039C8.36718 17.6859 7.64062 19.3781 7.59375 21.1828C7.59312 21.2078 7.59751 21.2327 7.60665 21.256C7.61579 21.2793 7.62951 21.3005 7.64698 21.3184C7.66445 21.3363 7.68534 21.3505 7.7084 21.3603C7.73145 21.37 7.75623 21.375 7.78125 21.375H9.09375C9.19453 21.375 9.2789 21.2953 9.28125 21.1945C9.32578 19.8351 9.87656 18.5625 10.8445 17.5968C11.8547 16.5867 13.1953 16.0312 14.625 16.0312C17.2125 16.0312 19.3125 13.9336 19.3125 11.3437ZM16.7461 13.4648C16.1789 14.032 15.4266 14.3437 14.625 14.3437C13.8234 14.3437 13.0711 14.032 12.5039 13.4648C12.2209 13.1833 11.9972 12.8477 11.8463 12.4782C11.6953 12.1086 11.62 11.7125 11.625 11.3133C11.632 10.5445 11.9391 9.80153 12.4758 9.25075C13.0383 8.67419 13.7906 8.3531 14.5945 8.34372C15.3891 8.33669 16.1602 8.64606 16.7273 9.20153C17.3086 9.77106 17.6273 10.5328 17.6273 11.3437C17.625 12.1453 17.3133 12.8976 16.7461 13.4648Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLeaveClub);\nexport default __webpack_public_path__ + \"static/media/leave-club.134eb9ad.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgJoinClub(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 1024 1024\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M892 772h-80v-80c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v80h-80c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h80v80c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-80h80c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM373.5 498.4c-.9-8.7-1.4-17.5-1.4-26.4c0-15.9 1.5-31.4 4.3-46.5c.7-3.6-1.2-7.3-4.5-8.8c-13.6-6.1-26.1-14.5-36.9-25.1a127.54 127.54 0 0 1-38.7-95.4c.9-32.1 13.8-62.6 36.3-85.6c24.7-25.3 57.9-39.1 93.2-38.7c31.9.3 62.7 12.6 86 34.4c7.9 7.4 14.7 15.6 20.4 24.4c2 3.1 5.9 4.4 9.3 3.2c17.6-6.1 36.2-10.4 55.3-12.4c5.6-.6 8.8-6.6 6.3-11.6c-32.5-64.3-98.9-108.7-175.7-109.9c-110.8-1.7-203.2 89.2-203.2 200c0 62.8 28.9 118.8 74.2 155.5c-31.8 14.7-61.1 35-86.5 60.4c-54.8 54.7-85.8 126.9-87.8 204a8 8 0 0 0 8 8.2h56.1c4.3 0 7.9-3.4 8-7.7c1.9-58 25.4-112.3 66.7-153.5c29.4-29.4 65.4-49.8 104.7-59.7c3.8-1.1 6.4-4.8 5.9-8.8zM824 472c0-109.4-87.9-198.3-196.9-200C516.3 270.3 424 361.2 424 472c0 62.8 29 118.8 74.2 155.5a300.95 300.95 0 0 0-86.4 60.4C357 742.6 326 814.8 324 891.8a8 8 0 0 0 8 8.2h56c4.3 0 7.9-3.4 8-7.7c1.9-58 25.4-112.3 66.7-153.5C505.8 695.7 563 672 624 672c110.4 0 200-89.5 200-200zm-109.5 90.5C690.3 586.7 658.2 600 624 600s-66.3-13.3-90.5-37.5a127.26 127.26 0 0 1-37.5-91.8c.3-32.8 13.4-64.5 36.3-88c24-24.6 56.1-38.3 90.4-38.7c33.9-.3 66.8 12.9 91 36.6c24.8 24.3 38.4 56.8 38.4 91.4c-.1 34.2-13.4 66.3-37.6 90.5z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgJoinClub);\nexport default __webpack_public_path__ + \"static/media/join-club.adc7abc5.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M12 1.75a3.25 3.25 0 0 1 3.245 3.066L15.25 5h5.25a.75.75 0 0 1 .102 1.493L20.5 6.5h-.796l-1.28 13.02a2.75 2.75 0 0 1-2.561 2.474l-.176.006H8.313a2.75 2.75 0 0 1-2.714-2.307l-.023-.174L4.295 6.5H3.5a.75.75 0 0 1-.743-.648L2.75 5.75a.75.75 0 0 1 .648-.743L3.5 5h5.25A3.25 3.25 0 0 1 12 1.75Zm6.197 4.75H5.802l1.267 12.872a1.25 1.25 0 0 0 1.117 1.122l.127.006h7.374c.6 0 1.109-.425 1.225-1.002l.02-.126L18.196 6.5ZM13.75 9.25a.75.75 0 0 1 .743.648L14.5 10v7a.75.75 0 0 1-1.493.102L13 17v-7a.75.75 0 0 1 .75-.75Zm-3.5 0a.75.75 0 0 1 .743.648L11 10v7a.75.75 0 0 1-1.493.102L9.5 17v-7a.75.75 0 0 1 .75-.75Zm1.75-6a1.75 1.75 0 0 0-1.744 1.606L10.25 5h3.5A1.75 1.75 0 0 0 12 3.25Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.91abf735.svg\";\nexport { ForwardRef as ReactComponent };","import React, { TextareaHTMLAttributes, forwardRef } from 'react';\r\nimport './input-textarea.scss';\r\n\r\nexport interface TextareaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {}\r\n\r\nconst InputTextarea = forwardRef<HTMLTextAreaElement, TextareaProps>((props, ref) => {\r\n  return (\r\n    <textarea {...props} ref={ref} className={`${props.className ? 'input-textarea ' + props.className : 'input-textarea'}`} />\r\n  );\r\n});\r\n\r\nexport default InputTextarea;","import React, { forwardRef, SelectHTMLAttributes } from 'react';\r\nimport './input-select.scss';\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {}\r\n\r\nconst InputSelect = forwardRef<HTMLSelectElement, SelectProps>((props, ref) => {\r\n  const {children, className, ...rest} = props;\r\n\r\n  return (\r\n    <select {...rest} ref={ref} className={`${className ? 'input-select ' + className : 'input-select'}`}>\r\n      {children}\r\n    </select>\r\n  );\r\n});\r\n\r\nexport default InputSelect;","import { useActions } from '../../../hooks/useActions';\r\nimport ClubService from '../../../services/club.service';\r\nimport useRequest from '../../../hooks/useRequest';\r\nimport SendSettingsDataArgs from './types/send-settings-data-args';\r\n\r\nconst useClubSettingsForm = () => {\r\n  const { addNotification, closeModal } = useActions();\r\n\r\n  const sendSettingsData = useRequest<SendSettingsDataArgs>('Post', async args => {\r\n    const { clubUrl, clubname, masterUrl, description } = args;\r\n    const response = await ClubService.updateSettings(clubUrl, clubname, masterUrl, description);\r\n    if (response.data === 'Success') {\r\n      addNotification('Настройки успешно обновлены', 'success');\r\n      closeModal();\r\n    }\r\n  });\r\n\r\n  return sendSettingsData;\r\n};\r\n\r\nexport default useClubSettingsForm;","import React, { FC } from 'react';\r\nimport { useForm, Controller, SubmitHandler } from 'react-hook-form';\r\nimport InputText from '../../UI/InputText/InputText';\r\nimport SubmitButton from '../../UI/SubmitButton/SubmitButton';\r\nimport './club-settings-form.scss';\r\nimport InputTextarea from '../../UI/InputTextarea/InputTextarea';\r\nimport InputSelect from '../../UI/InputSelect/InputSelect';\r\nimport useClubSettingsForm from './useClubSettingsForm';\r\nimport authDataLength from '../../../constants/auth-data-length';\r\nimport ClubSettingsFormInputs from './types/club-settings-form-inputs';\r\nimport ClubSettingsFormProps from './types/club-settings-form-props';\r\n\r\nconst ClubSettingsForm: FC<ClubSettingsFormProps> = ({ clubSettingsInfo, clubUrl, ...rest }) => {\r\n  const { clubname, rules, members } = clubSettingsInfo;\r\n  const sendSettingsData = useClubSettingsForm();\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n  } = useForm<ClubSettingsFormInputs>();\r\n\r\n  const onSubmit: SubmitHandler<ClubSettingsFormInputs> = data =>\r\n    sendSettingsData({\r\n      clubUrl,\r\n      clubname: data.clubname,\r\n      masterUrl: data.master,\r\n      description: data.rules,\r\n    });\r\n\r\n  return (\r\n    <form className=\"club-settings-form\" onSubmit={handleSubmit(onSubmit)}>\r\n      <fieldset className=\"club-settings-form__group\">\r\n        <label className=\"club-settings-form__label\" htmlFor=\"clubname\">\r\n          Имя клуба\r\n        </label>\r\n        <Controller\r\n          name=\"clubname\"\r\n          control={control}\r\n          defaultValue={clubname}\r\n          rules={{\r\n            required: true,\r\n            minLength: authDataLength.CLUBNAME_MIN_LENGTH,\r\n            maxLength: authDataLength.CLUBNAME_MAX_LENGTH,\r\n          }}\r\n          render={({ field }) => <InputText {...field} />}\r\n        />\r\n        {errors.clubname?.type === 'required' && <div className=\"club-settings-form__error\">Введите имя клуба</div>}\r\n        {errors.clubname?.type === 'minLength' && (\r\n          <div className=\"club-settings-form__error\">\r\n            Имя клуба должно быть не короче {authDataLength.CLUBNAME_MIN_LENGTH} символов\r\n          </div>\r\n        )}\r\n        {errors.clubname?.type === 'maxLength' && (\r\n          <div className=\"club-settings-form__error\">\r\n            Имя клуба должно быть не длинее {authDataLength.CLUBNAME_MAX_LENGTH} символов\r\n          </div>\r\n        )}\r\n      </fieldset>\r\n      <fieldset className=\"club-settings-form__group\">\r\n        <label className=\"club-settings-form__label\" htmlFor=\"master\">\r\n          Управляющий\r\n        </label>\r\n        <Controller\r\n          name=\"master\"\r\n          control={control}\r\n          rules={{ required: true }}\r\n          defaultValue={members[0].url}\r\n          render={({ field }) => (\r\n            <InputSelect {...field}>\r\n              {members.map(member => (\r\n                <option key={`master-${member.url}`} value={member.url}>\r\n                  {member.username}\r\n                </option>\r\n              ))}\r\n            </InputSelect>\r\n          )}\r\n        />\r\n      </fieldset>\r\n      <fieldset className=\"club-settings-form__group\">\r\n        <label className=\"club-settings-form__label\" htmlFor=\"description\">\r\n          Описание\r\n        </label>\r\n        <Controller\r\n          name=\"rules\"\r\n          control={control}\r\n          defaultValue={rules}\r\n          render={({ field }) => <InputTextarea {...field} placeholder=\"Введите описание клуба\" />}\r\n        />\r\n      </fieldset>\r\n      <div className=\"club-settings-form__button\">\r\n        <SubmitButton>Сохранить</SubmitButton>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ClubSettingsForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport ClubSettingsForm from '../../Containers/ClubSettingsForm/ClubSettingsForm';\r\nimport { ClubSettingsInfo } from '../../../models/club-settings-info';\r\nimport { useLocation } from 'react-router-dom';\r\nimport ClubService from '../../../services/club.service';\r\nimport './club-settings-page.scss';\r\nimport useRequest from '../../../hooks/useRequest';\r\nimport PageLoader from '../../UI/PageLoader/PageLoader';\r\n\r\nconst ClubSettingsPage = () => {\r\n  const path = useLocation().pathname;\r\n  const clubUrl = path.substring(path.lastIndexOf('/') - 12, path.lastIndexOf('/'));\r\n  const [clubInfo, setClubInfo] = useState<ClubSettingsInfo>({\r\n    clubname: '',\r\n    rules: '',\r\n    members: [],\r\n  });\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n  const getClubSettingsInfo = useRequest('Modal', async (clubUrl: string) => {\r\n    const response = await ClubService.getSettingsInfo(clubUrl);\r\n    setClubInfo(response.data);\r\n    setIsLoaded(true);\r\n  });\r\n\r\n  useEffect(() => {\r\n    getClubSettingsInfo(clubUrl);\r\n  }, []);\r\n\r\n  return isLoaded ? (\r\n    <div className=\"club-settings-page\">\r\n      <div className=\"club-settings-page__title\">\r\n        <h1>Настройки</h1>\r\n      </div>\r\n      <div className=\"club-settings-page__container\">\r\n        <ClubSettingsForm clubSettingsInfo={clubInfo} clubUrl={clubUrl || ''} />\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"club-settings-page__loader\">\r\n      <PageLoader />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClubSettingsPage;\r\n","import React, { FC } from 'react';\r\nimport TransparentButton from '../../../UI/TransparentButton/TransparentButton';\r\nimport { useActions } from '../../../../hooks/useActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { RouteNames } from '../../../../routes/route-names.enum';\r\nimport './club-profile-header-buttons.scss';\r\nimport { ReactComponent as WheelSvg } from '../../../../assets/svg/wheel.svg';\r\nimport { ReactComponent as SettingsSvg } from '../../../../assets/svg/settings.svg';\r\nimport { ReactComponent as LeaveSvg } from '../../../../assets/svg/leave-club.svg';\r\nimport { ReactComponent as JoinSvg } from '../../../../assets/svg/join-club.svg';\r\nimport { useAppSelector } from '../../../../hooks/useAppSelector';\r\nimport ClubSettingsPage from '../../../Pages/ClubSettingsPage/ClubSettingsPage';\r\n\r\ninterface ClubProfileHeaderButtonsProps {\r\n  isMaster: boolean;\r\n  isInClub: boolean;\r\n  clubUrl: string;\r\n}\r\n\r\nconst ClubProfileHeaderButtons: FC<ClubProfileHeaderButtonsProps> = ({ isInClub, isMaster, clubUrl, ...rest }) => {\r\n  const { joinClub, leaveClub, showModal } = useActions();\r\n  const userClub = useAppSelector(state => state.auth.userData?.club);\r\n  const showSettingsModal = () => {\r\n    showModal(<ClubSettingsPage />);\r\n  };\r\n\r\n  return (\r\n    <div className=\"club-profile-header__buttons\">\r\n      {isMaster && (\r\n        <Link className=\"club-profile-header__button\" to={`${RouteNames.CLUB_PROFILE_BASE}${clubUrl}/wheel`}>\r\n          <WheelSvg />\r\n          <span>Колесо</span>\r\n        </Link>\r\n      )}\r\n      {isMaster && (\r\n        <TransparentButton className=\"club-profile-header__button\" onClick={showSettingsModal}>\r\n          <SettingsSvg />\r\n          <span>Настройки</span>\r\n        </TransparentButton>\r\n      )}\r\n      {!isInClub && !userClub && (\r\n        <TransparentButton\r\n          className=\"club-profile-header__button transparent-button--green\"\r\n          onClick={() => joinClub(clubUrl)}>\r\n          <JoinSvg />\r\n          <span>Вступить в клуб</span>\r\n        </TransparentButton>\r\n      )}\r\n      {isInClub && (\r\n        <TransparentButton\r\n          className=\"club-profile-header__button transparent-button--red\"\r\n          onClick={() => leaveClub(clubUrl)}>\r\n          <LeaveSvg />\r\n          <span>Выйти из клуба</span>\r\n        </TransparentButton>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClubProfileHeaderButtons;\r\n","import React, { FC } from 'react';\r\nimport './club-header-book.scss';\r\n\r\ninterface ClubHeaderBookProps {\r\n  book: {\r\n    title: string;\r\n    authors: string[];\r\n  } | null;\r\n}\r\n\r\nconst ClubHeaderBook: FC<ClubHeaderBookProps> = ({ book, ...rest }) => {\r\n  return (\r\n    <div className=\"club-header-book\">\r\n      <div className=\"club-header-book__title\">Книга</div>\r\n      {book ? (\r\n        <div className=\"club-header-book__book\">\r\n          <div className=\"club-header-book__name\">{book.title}</div>\r\n          <div className=\"club-header-book__author\">{book.authors.join(', ')}</div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"club-header-book__placeholder\">Не выбрана</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClubHeaderBook;\r\n","import React, { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { RouteNames } from '../../../../routes/route-names.enum';\r\nimport './club-header-master.scss';\r\n\r\ninterface ClubHeaderMasterProps {\r\n  master: {\r\n    username: string;\r\n    url: string;\r\n  } | null;\r\n}\r\n\r\nconst ClubHeaderMaster: FC<ClubHeaderMasterProps> = ({ master, ...rest }) => {\r\n  return (\r\n    <div className=\"club-header-master\">\r\n      <div className=\"club-header-master__title\">Управляющий</div>\r\n      {master ? (\r\n        <Link className=\"club-header-master__name\" to={`${RouteNames.USER_PROFILE_BASE}${master.url}`}>{master.username}</Link>\r\n      ) : (\r\n        <div className=\"club-header-master__name\">Отсутствует</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClubHeaderMaster;","import React, { FC } from 'react';\r\nimport './club-header-meting.scss';\r\n\r\ninterface ClubHeaderMeetingProps {\r\n  meetingNumber: number;\r\n}\r\n\r\nconst ClubHeaderMeeting: FC<ClubHeaderMeetingProps> = ({ meetingNumber, ...rest }) => {\r\n  return (\r\n    <div className=\"club-header-meeting\">\r\n      <span>{`Собрание ${meetingNumber}`}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClubHeaderMeeting;\r\n","import { useAppSelector } from '../../../hooks/useAppSelector';\r\nimport { useEffect, useState } from 'react';\r\nimport { ClubProfileInfo } from '../../../models/club-profile-info';\r\nimport useRequest from '../../../hooks/useRequest';\r\nimport ClubService from '../../../services/club.service';\r\nimport { ClubProfileHeaderProps } from './ClubProfileHeader';\r\n\r\nconst useClubProfileHeader = ({ clubUrl, setIsMaster, setIsLoaded }: ClubProfileHeaderProps) => {\r\n  const userData = useAppSelector(state => state.auth.userData);\r\n  const [clubInfo, setClubInfo] = useState<ClubProfileInfo>({\r\n    clubname: null,\r\n    master: null,\r\n    bookToRead: null,\r\n    meetingNumber: 1,\r\n    isMaster: false,\r\n    isInClub: false,\r\n  });\r\n\r\n  const fetchInfo = useRequest('Page', async () => {\r\n    const response = await ClubService.getClubProfileInfo(clubUrl || '');\r\n    setClubInfo(response.data);\r\n    setIsMaster(response.data.isMaster);\r\n    setIsLoaded();\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchInfo({});\r\n  }, [userData]);\r\n\r\n  return { clubInfo };\r\n};\r\n\r\nexport default useClubProfileHeader;","import React, { FC, Fragment } from 'react';\r\nimport ClubProfileHeaderButtons from './ClubProfileHeaderButtons/ClubProfileHeaderButtons';\r\nimport ProfileTitle from '../../UI/ProfileTitle/ProfileTitle';\r\nimport ClubHeaderBook from './ClubHeaderBook/ClubHeaderBook';\r\nimport ClubHeaderMaster from './ClubHeaderMaster/ClubHeaderMaster';\r\nimport './club-profile-header.scss';\r\nimport ClubHeaderMeeting from './ClubHeaderMeeting/ClubHeaderMeeting';\r\nimport useClubProfileHeader from './useClubProfileHeader';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nexport interface ClubProfileHeaderProps {\r\n  clubUrl: string | undefined;\r\n  setIsMaster: (arg0: boolean) => void;\r\n  setIsLoaded: () => void;\r\n}\r\n\r\nconst ClubProfileHeader: FC<ClubProfileHeaderProps> = ({ clubUrl, setIsMaster, setIsLoaded, ...rest }) => {\r\n  const { clubInfo } = useClubProfileHeader({ clubUrl, setIsMaster, setIsLoaded });\r\n\r\n  return (\r\n    <Fragment>\r\n      <Helmet>\r\n        <title>Клуб {clubInfo.clubname || ''}</title>\r\n      </Helmet>\r\n      <section className=\"club-profile-header\">\r\n        <ProfileTitle title={clubInfo.clubname || ''} />\r\n        <ClubProfileHeaderButtons clubUrl={clubUrl || ''} isInClub={clubInfo.isInClub} isMaster={clubInfo.isMaster} />\r\n        <ClubHeaderBook book={clubInfo.bookToRead} />\r\n        <ClubHeaderMaster master={clubInfo.master} />\r\n        <ClubHeaderMeeting meetingNumber={clubInfo.meetingNumber} />\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClubProfileHeader;\r\n","import React, { useState } from 'react';\r\nimport ClubProfileHeader from '../../Containers/ClubProfileHeader/ClubProfileHeader';\r\nimport { useParams, Outlet, useLocation, Navigate, useOutletContext } from 'react-router-dom';\r\nimport ProfileTabs from '../../UI/ProfileTabs/ProfileTabs';\r\nimport { TabButtonProps } from '../../UI/ProfileTabs/TabButton/TabButton';\r\nimport { RouteNames } from '../../../routes/route-names.enum';\r\nimport './club-profile-page.scss';\r\nimport PageLoader from '../../UI/PageLoader/PageLoader';\r\n\r\ntype ContextType = { isMaster: boolean; clubUrl: string };\r\n\r\nconst ClubProfilePage = () => {\r\n  const location = useLocation();\r\n  const { clubUrl } = useParams();\r\n  const [isMaster, setIsMaster] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const handleSetIsLoaded = () => {\r\n    setIsLoaded(true);\r\n  };\r\n\r\n  const clubProfileTabs: TabButtonProps[] = [\r\n    { name: 'Описание', path: `${RouteNames.CLUB_PROFILE_BASE}${clubUrl}/${RouteNames.CLUB_PROFILE_RULES}` },\r\n    { name: 'Участники', path: `${RouteNames.CLUB_PROFILE_BASE}${clubUrl}/${RouteNames.CLUB_PROFILE_MEMBERS}` },\r\n    { name: 'Книги', path: `${RouteNames.CLUB_PROFILE_BASE}${clubUrl}/${RouteNames.CLUB_PROFILE_BOOKS}` },\r\n    { name: 'Рецензии', path: `${RouteNames.CLUB_PROFILE_BASE}${clubUrl}/${RouteNames.CLUB_PROFILE_REVIEWS}` },\r\n    { name: 'История', path: `${RouteNames.CLUB_PROFILE_BASE}${clubUrl}/${RouteNames.CLUB_PROFILE_HISTORY}` },\r\n  ];\r\n\r\n  if (!clubProfileTabs.map(tab => tab.path).some(path => path === location.pathname)) {\r\n    return (\r\n      <Navigate to={`${RouteNames.CLUB_PROFILE_BASE}${clubUrl}/${RouteNames.CLUB_PROFILE_BOOKS}`} replace={true} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={isLoaded ? 'club-profile-page' : 'club-profile-page club-profile-page--loading'}>\r\n      {!isLoaded && (\r\n        <div>\r\n          <PageLoader />\r\n        </div>\r\n      )}\r\n      <ClubProfileHeader setIsLoaded={handleSetIsLoaded} clubUrl={clubUrl} setIsMaster={value => setIsMaster(value)} />\r\n      <ProfileTabs tabsData={clubProfileTabs} url={clubUrl} />\r\n      <section className=\"club-profile-page__content\">\r\n        <Outlet context={{ isMaster, clubUrl }} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClubProfilePage;\r\n\r\nexport function useClubProfileContext() {\r\n  return useOutletContext<ContextType>();\r\n}\r\n","import React, { FC } from 'react';\r\nimport TransparentButton from '../TransparentButton/TransparentButton';\r\nimport {ReactComponent as DeleteSvg} from '../../../assets/svg/delete.svg';\r\nimport './book-card.scss';\r\n\r\ninterface BookCardProps {\r\n  isClubHistory?: boolean;\r\n  isOwner?: boolean;\r\n  handleDelete?: () => void;\r\n  bookData: {\r\n    title: string;\r\n    authors: string[];\r\n    year: string;\r\n    genres: string[];\r\n    meetingNumber?: number;\r\n  };\r\n}\r\n\r\nconst BookCard: FC<BookCardProps> = props => {\r\n  const { isClubHistory, isOwner, bookData, handleDelete } = props;\r\n  const { title, authors, year, genres, meetingNumber } = bookData;\r\n\r\n  return (\r\n    <div className=\"book-card\">\r\n      <div className={!isClubHistory ? 'book-card__head' : 'book-card__head book-card__head--with-meeting'}>\r\n        <div className=\"book-card__title\">\r\n          <h4>{title}</h4>\r\n        </div>\r\n        <div className=\"book-card__authors\">\r\n          <p>{authors.join(', ')}</p>\r\n        </div>\r\n        {meetingNumber && (\r\n          <div className=\"book-card__meeting-number\">\r\n            <p>Собрание {meetingNumber}</p>\r\n          </div>\r\n        )}\r\n        {isOwner && (\r\n          <div className=\"book-card__delete\">\r\n            <TransparentButton onClick={handleDelete}>\r\n              <DeleteSvg />\r\n            </TransparentButton>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"book-card__footer\">\r\n        <div className=\"book-card__genres\">\r\n          <p>{genres.join(', ')}</p>\r\n        </div>\r\n        <div className=\"book-card__year\">\r\n          <p>{year}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookCard;","import { useEffect, useState } from 'react';\r\nimport { BookData } from '../../../models/book-data';\r\nimport { useInfiniteScroll } from '../../../hooks/useInfiniteScroll';\r\nimport useRequest from '../../../hooks/useRequest';\r\nimport UserService from '../../../services/user.service';\r\nimport FetchDeleteBookArgs from './types/fetch-delete-book-args';\r\n\r\nconst useUserProfileBooks = (userUrl: string) => {\r\n  const chunkSize = 10;\r\n  const [booksArray, setBooksArray] = useState<BookData[]>([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [isOut, setIsOut] = useState<boolean>(false);\r\n  const { pageNum, containerRef } = useInfiniteScroll();\r\n\r\n  const makeNewBooksArray = (oldArray: BookData[], newArray: BookData[], listLength: number) => {\r\n    const all: BookData[] = [...oldArray, ...newArray];\r\n    setBooksArray(all);\r\n    if (all.length === listLength) {\r\n      setIsOut(true);\r\n    }\r\n  }\r\n\r\n  const fetchBooksArray = useRequest('Tab', async () => {\r\n    const response = await UserService.getUserBooks(userUrl, pageNum, chunkSize);\r\n    const listLength = parseInt(response.headers['x-data-length']);\r\n    makeNewBooksArray(booksArray, response.data, listLength)\r\n    setIsLoaded(true);\r\n  });\r\n\r\n  const fetchDeleteBook = useRequest<FetchDeleteBookArgs>('Post', async ({index}) => {\r\n    const response = await UserService.deleteBook(userUrl, index);\r\n    if (response.data === 'Success') {\r\n      const copyOfBooksArray = [...booksArray];\r\n      copyOfBooksArray.splice(index, 1);\r\n      const pageNumOfDeletedBook = countPageNumOfIndex(index, chunkSize);\r\n      const response = await UserService.getUserBooks(userUrl, pageNumOfDeletedBook, chunkSize);\r\n      const arrayOfAdditionalBooks = response.data.filter(\r\n        additionalBook =>\r\n          !copyOfBooksArray.some(\r\n            bookInArray =>\r\n              additionalBook.title === bookInArray.title &&\r\n              additionalBook.authors.join('') === bookInArray.authors.join('')\r\n          )\r\n      );\r\n      const listLength = parseInt(response.headers['x-data-length']);\r\n      makeNewBooksArray(copyOfBooksArray, arrayOfAdditionalBooks, listLength);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!isOut) {\r\n      fetchBooksArray({});\r\n    }\r\n  }, [pageNum]);\r\n\r\n  return { booksArray, containerRef, isOut, fetchBooksArray, fetchDeleteBook, isLoaded };\r\n};\r\n\r\nexport default useUserProfileBooks;\r\n\r\nfunction countPageNumOfIndex(index: number, chunkSize: number) {\r\n  return Math.floor(index / chunkSize) + 1;\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\n\r\nexport const useInfiniteScroll = () => {\r\n  const [lastElement, setLastElement] = useState<Element | null>(null);\r\n  const [pageNum, setPageNum] = useState<number>(1);\r\n\r\n  const containerRef = useCallback(node => {\r\n    setLastElement(node);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      async entries => {\r\n        const container = entries[0];\r\n        if (container.isIntersecting) {\r\n          setPageNum(num => num + 1);\r\n        }\r\n      },\r\n      { threshold: 0.3 }\r\n    );\r\n\r\n    if (lastElement) {\r\n      observer.observe(lastElement);\r\n    }\r\n\r\n    return () => {\r\n      if (lastElement) {\r\n        observer.unobserve(lastElement);\r\n      }\r\n    };\r\n  }, [lastElement]);\r\n\r\n  return {\r\n    pageNum,\r\n    setPageNum,\r\n    containerRef\r\n  };\r\n};\r\n","import React, { FC, Fragment } from 'react';\r\nimport { useUserProfileContext } from '../../Pages/UserProfilePage/UserProfilePage';\r\nimport BookCard from '../../UI/BookCard/BookCard';\r\nimport { useAppSelector } from '../../../hooks/useAppSelector';\r\nimport './user-profile-books.scss';\r\nimport useUserProfileBooks from './useUserProfileBooks';\r\n\r\nconst UserProfileBooks: FC = props => {\r\n  const isLoading = useAppSelector(state => state.loadingTab.isLoadingTab);\r\n  const { isCurrentUser, userUrl } = useUserProfileContext();\r\n  const { booksArray, isOut, containerRef, fetchDeleteBook, isLoaded } = useUserProfileBooks(userUrl || '');\r\n\r\n  const handleDeleteBook = (index: number) => {\r\n    fetchDeleteBook({index});\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-profile-books\">\r\n      {isLoaded &&\r\n        booksArray.length > 0 &&\r\n        booksArray.map((book, index) => {\r\n          return index === booksArray.length - 1 && !isLoading && !isOut ? (\r\n            <Fragment key={`${userUrl}-${book.title}-${book.authors.join(', ')}`}>\r\n              <BookCard\r\n                isClubHistory={false}\r\n                isOwner={isCurrentUser}\r\n                handleDelete={() => handleDeleteBook(index)}\r\n                bookData={{ ...book }}\r\n              />\r\n              <div ref={containerRef}>Loader</div>\r\n            </Fragment>\r\n          ) : (\r\n            <BookCard\r\n              key={`${userUrl}-${book.title}-${book.authors.join(', ')}`}\r\n              isClubHistory={false}\r\n              isOwner={isCurrentUser}\r\n              handleDelete={() => handleDeleteBook(index)}\r\n              bookData={{ ...book }}\r\n            />\r\n          );\r\n        })}\r\n      {!isLoading && isLoaded && booksArray.length === 0 && <div>Книги не выбраны</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfileBooks;\r\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDetails(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.75 3.5c-.69 0-1.25.56-1.25 1.25v6.5c0 .69.56 1.25 1.25 1.25h6.5c.69 0 1.25-.56 1.25-1.25v-1.5a.75.75 0 0 1 1.5 0v1.5A2.75 2.75 0 0 1 11.25 14h-6.5A2.75 2.75 0 0 1 2 11.25v-6.5A2.75 2.75 0 0 1 4.75 2h1.5a.75.75 0 0 1 0 1.5h-1.5ZM8 2.75A.75.75 0 0 1 8.75 2h4.5a.75.75 0 0 1 .75.75v4.5a.75.75 0 0 1-1.5 0V4.561l-3.22 3.22A.75.75 0 1 1 8.22 6.72l3.22-3.22H8.75A.75.75 0 0 1 8 2.75Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDetails);\nexport default __webpack_public_path__ + \"static/media/details.31e2edb5.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useState } from 'react';\r\nimport { BookData } from '../../../models/book-data';\r\nimport BookService from '../../../services/book.service';\r\nimport useRequest from '../../../hooks/useRequest';\r\n\r\nconst useBookDataContainer = (bookId: string) => {\r\n  const [bookData, setBookData] = useState<BookData>();\r\n  const getBookData = useRequest('Modal', async () => {\r\n    const response = await BookService.getBookData(bookId);\r\n    setBookData(response.data);\r\n  });\r\n\r\n  useEffect(() => {\r\n    getBookData({});\r\n  }, []);\r\n\r\n  return bookData;\r\n};\r\n\r\nexport default useBookDataContainer;","import React, { FC } from 'react';\r\nimport BookDataView from '../../UI/BookDataView/BookDataView';\r\nimport useBookDataContainer from './useBookDataContainer';\r\nimport PageLoader from '../../UI/PageLoader/PageLoader';\r\nimport './book-data-container.scss';\r\n\r\ninterface BookDataContainerProps {\r\n  bookId: string;\r\n}\r\n\r\nconst BookDataContainer: FC<BookDataContainerProps> = ({ bookId }) => {\r\n  const bookData = useBookDataContainer(bookId);\r\n\r\n  return bookData ? (\r\n    <BookDataView book={bookData} />\r\n  ) : (\r\n    <div className=\"book-data-container__loader\">\r\n      <PageLoader />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookDataContainer;","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDropdown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDropdown);\nexport default __webpack_public_path__ + \"static/media/dropdown.3b30005e.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FC } from 'react';\r\nimport TransparentButton from '../../TransparentButton/TransparentButton';\r\nimport { ReactComponent as DetailsSvg } from '../../../../assets/svg/details.svg';\r\nimport { ReactComponent as DeleteSvg } from '../../../../assets/svg/delete.svg';\r\nimport { BasicBookInfo } from '../../../../models/basic-book-info';\r\nimport { BasicUserInfo } from '../../../../models/basic-user-info';\r\n\r\ninterface ClubBooksCardFooterProps {\r\n  books: BasicBookInfo[];\r\n  user: BasicUserInfo;\r\n  isMaster?: boolean;\r\n  showModal: (id: string) => void;\r\n  handleDelete?: (index: number, userUrl: string) => void;\r\n  booksKey?: string;\r\n}\r\n\r\nconst ClubBooksCardFooter: FC<ClubBooksCardFooterProps> = props => {\r\n  const { books, user, isMaster, showModal, handleDelete, booksKey } = props;\r\n\r\n  return (\r\n    <div className=\"club-books-card__footer\">\r\n      {books.map((book, index) => (\r\n        <div\r\n          className={book.isDisabled ? 'club-books-card-book club-books-card-book--disabled' : 'club-books-card-book'}\r\n          key={`${user.url}-${book.id}-${booksKey}`}>\r\n          <div className=\"club-books-card-book__left-container\">\r\n            <p className=\"club-books-card-book__title\">{`${book.title} - ${book.authors.join(', ')}`}</p>\r\n            <TransparentButton className=\"club-books-card-book__details\" onClick={() => showModal(book.id)}>\r\n              <DetailsSvg />\r\n            </TransparentButton>\r\n          </div>\r\n          <div className=\"club-books-card-book__right-container\">\r\n            <p className=\"club-books-card-book__year\">{book.year}</p>\r\n            {isMaster && handleDelete && (\r\n              <TransparentButton className=\"club-books-card-book__delete\" onClick={() => handleDelete(index, user.url)}>\r\n                <DeleteSvg />\r\n              </TransparentButton>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClubBooksCardFooter;\r\n","import { useState } from 'react';\r\n\r\nexport enum WheelStages {\r\n  START = 'START',\r\n  ROLL = 'ROLL',\r\n  FINISH = 'FINISH',\r\n}\r\n\r\nconst useWheelStages = () => {\r\n  const [isStart, setIsStart] = useState(true);\r\n  const [isRoll, setIsRoll] = useState(false);\r\n  const [isFinish, setIsFinish] = useState(false);\r\n\r\n  const setStage = (stageName: WheelStages, value: boolean) => {\r\n    switch (stageName) {\r\n      case WheelStages.START:\r\n        setIsStart(value);\r\n        break;\r\n      case WheelStages.ROLL:\r\n        setIsRoll(value);\r\n        break;\r\n      case WheelStages.FINISH:\r\n        setIsFinish(value);\r\n    }\r\n  };\r\n\r\n  return { isStart, isRoll, isFinish, setStage };\r\n};\r\n\r\nexport default useWheelStages;\r\n","import React, { FC } from 'react';\r\nimport { BasicUserInfo } from '../../../../models/basic-user-info';\r\nimport { Link } from 'react-router-dom';\r\nimport { RouteNames } from '../../../../routes/route-names.enum';\r\nimport TransparentButton from '../../TransparentButton/TransparentButton';\r\nimport { ReactComponent as DropdownSvg } from '../../../../assets/svg/dropdown.svg';\r\nimport Avatar from '../../Avatar/Avatar';\r\n\r\ninterface ClubBooksCardHeaderProps {\r\n  user: BasicUserInfo;\r\n  toggleOpen: () => void;\r\n}\r\n\r\nconst ClubBooksCardHeader: FC<ClubBooksCardHeaderProps> = ({user, toggleOpen, ...rest}) => {\r\n  return (\r\n    <div className=\"club-books-card__head\">\r\n      <Link className=\"club-books-card__user\" to={`${RouteNames.USER_PROFILE_BASE}${user.url}`}>\r\n        <div className=\"club-books-card__avatar\">\r\n          <Avatar color={user.color} emoji={user.emoji}/>\r\n        </div>\r\n        <span className=\"club-books-card__username\">{user.username}</span>\r\n      </Link>\r\n      <TransparentButton className=\"club-books-card__button\" onClick={toggleOpen}>\r\n        <DropdownSvg />\r\n      </TransparentButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClubBooksCardHeader;","import React, { FC, Fragment, useState } from 'react';\r\nimport { BasicUserInfo } from '../../../models/basic-user-info';\r\nimport { BasicBookInfo } from '../../../models/basic-book-info';\r\nimport './club-books-card.scss';\r\nimport BookDataContainer from '../../Containers/BookDataContainer/BookDataContainer';\r\nimport ClubBooksCardFooter from './ClubBooksCardFooter/ClubBooksCardFooter';\r\nimport ClubBooksCardHeader from './ClubBooksCardHeader/ClubBooksCardHeader';\r\nimport { useActions } from '../../../hooks/useActions';\r\n\r\ninterface ClubBooksCardProps {\r\n  user: BasicUserInfo;\r\n  books: BasicBookInfo[];\r\n  isMaster?: boolean;\r\n  handleDelete?: (index: number, userUrl: string) => void;\r\n  booksKey?: string;\r\n}\r\n\r\nconst ClubBooksCard: FC<ClubBooksCardProps> = ({ user, books, isMaster, handleDelete, booksKey, ...rest }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => {\r\n    setIsOpen(value => !value);\r\n  };\r\n\r\n  const { showModal } = useActions();\r\n  const handleShowModal = (id: string) => {\r\n    showModal(<BookDataContainer bookId={id} />);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={isOpen ? 'club-books-card club-books-card--open' : 'club-books-card'}>\r\n        <ClubBooksCardHeader user={user} toggleOpen={toggleOpen} />\r\n        <ClubBooksCardFooter\r\n          books={books}\r\n          user={user}\r\n          isMaster={isMaster}\r\n          showModal={handleShowModal}\r\n          handleDelete={handleDelete}\r\n          booksKey={booksKey}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClubBooksCard;\r\n","import { useEffect, useState } from 'react';\r\nimport { ClubBooks } from '../../../models/club-books';\r\nimport { useClubProfileContext } from '../../Pages/ClubProfilePage/ClubProfilePage';\r\nimport useRequest from '../../../hooks/useRequest';\r\nimport ClubService from '../../../services/club.service';\r\nimport FetchDeleteBookArgs from './types/fetch-delete-books-args';\r\n\r\nconst useClubProfileBooks = () => {\r\n  const [booksData, setBooksData] = useState<ClubBooks[]>([]);\r\n  const { isMaster, clubUrl } = useClubProfileContext();\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const fetchBooksData = useRequest('Tab', async () => {\r\n    const response = await ClubService.getClubBooks(clubUrl);\r\n    setBooksData(response.data);\r\n    setIsLoaded(true);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchBooksData({});\r\n  }, [clubUrl]);\r\n\r\n  const fetchDeleteBook = useRequest<FetchDeleteBookArgs>('Post', async ({ userUrl, index }) => {\r\n    const response = await ClubService.deleteClubBook(clubUrl, userUrl, index);\r\n\r\n    if (response.data === 'Success') {\r\n      const tempArray = booksData;\r\n      const userIndex = tempArray.findIndex(entry => entry.user.url === userUrl);\r\n      tempArray[userIndex].books.splice(index, 1);\r\n      setBooksData([...tempArray]);\r\n    }\r\n  });\r\n\r\n  const handleDelete = (index: number, userUrl: string) => {\r\n    fetchDeleteBook({ index, userUrl });\r\n  };\r\n\r\n  return { booksData, clubUrl, isMaster, handleDelete, isLoaded };\r\n};\r\n\r\nexport default useClubProfileBooks;\r\n","import React, { FC } from 'react';\r\nimport ClubBooksCard from '../../UI/ClubBooksCard/ClubBooksCard';\r\nimport './club-profile-books.scss';\r\nimport useClubProfileBooks from './useClubProfileBooks';\r\n\r\nconst ClubProfileBooks: FC = () => {\r\n  const { booksData, clubUrl, isMaster, handleDelete, isLoaded } = useClubProfileBooks();\r\n  return (\r\n    <div className=\"club-profile-books\">\r\n      {isLoaded &&\r\n        booksData.map((data, index) => (\r\n          <ClubBooksCard\r\n            key={`${clubUrl}-${data.user.url}-books`}\r\n            books={[...data.books]}\r\n            user={data.user}\r\n            isMaster={isMaster}\r\n            handleDelete={handleDelete}\r\n          />\r\n        ))}\r\n      {isLoaded && booksData.length === 0 && <div>Участники ещё не выбрали книги</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClubProfileBooks;\r\n","import { WheelSegment } from '../../../UI/WinWheel/models/wheel-segment';\r\n\r\nconst shuffleWheelSegments = (wheelSegments: WheelSegment[]) => {\r\n  let tempArray = [...wheelSegments];\r\n  const length = tempArray.length - 1;\r\n  for (let i = length; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [tempArray[i], tempArray[j]] = [tempArray[j], tempArray[i]];\r\n  }\r\n\r\n  return tempArray;\r\n};\r\n\r\nexport default shuffleWheelSegments;\r\n","import { WheelSegment } from '../../../UI/WinWheel/models/wheel-segment';\r\n\r\nconst removeSegment = (wheelSegments: WheelSegment[], winnerSegment: WheelSegment) => {\r\n  return wheelSegments.filter(\r\n    wheelSegment =>\r\n      !(\r\n        wheelSegment.value?.userUrl === winnerSegment.value?.userUrl &&\r\n        wheelSegment.value?.bookId === winnerSegment.value?.bookId\r\n      )\r\n  );\r\n};\r\n\r\nexport default removeSegment;","const determineTextColor = (hex: string) => {\r\n  const rgb = parseInt(hex.substring(1), 16);\r\n  const r = (rgb >> 16) & 0xff;\r\n  const g = (rgb >> 8) & 0xff;\r\n  const b = (rgb >> 0) & 0xff;\r\n\r\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n\r\n  if (luma < 40) {\r\n    return 'white';\r\n  } else {\r\n    return 'black';\r\n  }\r\n};\r\n\r\nexport default determineTextColor;","import { ClubBooks } from '../../../../models/club-books';\r\nimport { WheelSegment } from '../../../UI/WinWheel/models/wheel-segment';\r\nimport determineTextColor from './determineTextColor';\r\n\r\nconst createWheelSegments = (clubBooks: ClubBooks[]) => {\r\n  const wheelSegments: WheelSegment[] = [];\r\n\r\n  for (let i = 0; i < clubBooks.length; i++) {\r\n    const item = clubBooks[i];\r\n    for (let j = 0; j < item.books.length; j++) {\r\n      wheelSegments.push({\r\n        text: `${item.user.username} ${item.user.emoji}`,\r\n        fillStyle: item.user.color,\r\n        textFillStyle: determineTextColor(item.user.color),\r\n        // strokeStyle: determineTextColor(item.user.color),\r\n        value: {\r\n          bookId: item.books[j].id,\r\n          userUrl: item.user.url,\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  return wheelSegments;\r\n};\r\n\r\nexport default createWheelSegments;\r\n","import { useEffect, useState } from 'react';\r\nimport { WheelSegment } from '../../../UI/WinWheel/models/wheel-segment';\r\nimport { ClubBooks } from '../../../../models/club-books';\r\nimport shuffleWheelSegments from '../helpers/shuffleWheelSegments';\r\nimport removeSegment from '../helpers/removeSegment';\r\nimport createWheelSegments from '../helpers/createWheelSegments';\r\n\r\nconst useWheelSegments = (clubBooks: ClubBooks[], recountTextSize: (segmentsNumber: number) => void) => {\r\n  const [wheelSegments, setWheelSegments] = useState<WheelSegment[]>([]);\r\n\r\n  const shuffleSegments = () => {\r\n    setWheelSegments(shuffleWheelSegments(wheelSegments));\r\n  };\r\n\r\n  const removeWinnerSegment = (segment: WheelSegment) => {\r\n    setWheelSegments([...removeSegment(wheelSegments, segment)]);\r\n  };\r\n\r\n  const createStartingSegments = () => {\r\n    const wheelSegments = createWheelSegments(clubBooks);\r\n    recountTextSize(wheelSegments.length);\r\n    const shuffledWheelSegments = shuffleWheelSegments(wheelSegments);\r\n    setWheelSegments(shuffledWheelSegments);\r\n  };\r\n\r\n  useEffect(() => {\r\n    createStartingSegments();\r\n  }, []);\r\n\r\n  return { wheelSegments, shuffleSegments, removeWinnerSegment };\r\n};\r\n\r\nexport default useWheelSegments;\r\n","import { ClubBooks } from '../../../../models/club-books';\r\nimport { WheelSegment } from '../../../UI/WinWheel/models/wheel-segment';\r\nimport { WheelWinnerInfo } from '../../../../models/wheel-winner-info';\r\n\r\nconst findWinnerInfoBySegment = (clubBooks: ClubBooks[], segment: WheelSegment): WheelWinnerInfo => {\r\n  const indexUser = clubBooks.findIndex(entry => entry.user.url === segment.value?.userUrl);\r\n  const indexBook = clubBooks[indexUser].books.findIndex(book => book.id === segment.value?.bookId);\r\n  return {\r\n    user: clubBooks[indexUser].user,\r\n    book: clubBooks[indexUser].books[indexBook],\r\n    indexBook,\r\n    indexUser,\r\n  };\r\n};\r\n\r\nexport default findWinnerInfoBySegment;","import { useEffect, useState } from 'react';\r\nimport { WheelWinnerInfo } from '../../../../models/wheel-winner-info';\r\nimport { WheelSegment } from '../../../UI/WinWheel/models/wheel-segment';\r\nimport { ClubBooks } from '../../../../models/club-books';\r\nimport findWinnerInfoBySegment from '../helpers/findWinnerInfoBySegment';\r\n\r\ninterface useWheelWinnerArgs {\r\n  clubBooks: ClubBooks[];\r\n  displayWinner: (userIndex: number, bookIndex: number) => void;\r\n  wheelSegments: WheelSegment[];\r\n  isFinish: boolean;\r\n  addToHistory: (winner: WheelWinnerInfo) => void;\r\n}\r\n\r\nconst useWheelWinner = (args: useWheelWinnerArgs) => {\r\n  const { clubBooks, wheelSegments, displayWinner, isFinish, addToHistory } = args;\r\n  const [winnerInfo, setWinnerInfo] = useState<WheelWinnerInfo | null>(null);\r\n\r\n  const setWinner = (segment: WheelSegment) => {\r\n    const winnerInfo = findWinnerInfoBySegment(clubBooks, segment);\r\n    setWinnerInfo(winnerInfo);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (winnerInfo) {\r\n      if (!isFinish) {\r\n        displayWinner(winnerInfo.indexUser, winnerInfo.indexBook);\r\n        addToHistory(winnerInfo);\r\n      } else {\r\n        const trueWinnerInfo = findWinnerInfoBySegment(clubBooks, wheelSegments[0]);\r\n        displayWinner(trueWinnerInfo.indexUser, trueWinnerInfo.indexBook);\r\n        addToHistory(trueWinnerInfo);\r\n      }\r\n    }\r\n  }, [winnerInfo]);\r\n\r\n  return { winnerInfo, setWinner };\r\n};\r\n\r\nexport default useWheelWinner;","import { useState } from 'react';\r\nimport { WheelWinnerInfo } from '../../../../models/wheel-winner-info';\r\n\r\nconst useWheelRollsHistory = () => {\r\n  const [wheelRollsHistory, setWheelRollsHistory] = useState<WheelWinnerInfo[]>([]);\r\n\r\n  const addToHistory = (winner: WheelWinnerInfo) => {\r\n    const tempArr = [...wheelRollsHistory];\r\n    tempArr.push(winner);\r\n    setWheelRollsHistory(tempArr);\r\n  };\r\n\r\n  return { wheelRollsHistory, addToHistory };\r\n};\r\n\r\nexport default useWheelRollsHistory;","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTriangle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 64 64\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M1.543 9.192c9.107 16.636 18.215 33.26 27.32 49.898a3.575 3.575 0 0 0 6.327 0c9.108-16.636 18.215-33.26 27.32-49.898c1.409-2.571-.387-5.902-3.163-5.902H4.698c-1.54 0-2.571.828-3.111 1.949c-.676 1.068-.859 2.488-.052 3.953\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTriangle);\nexport default __webpack_public_path__ + \"static/media/triangle.3c31066b.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useState } from 'react';\r\nimport { WheelSegment } from '../../../UI/WinWheel/models/wheel-segment';\r\nimport ClubService from '../../../../services/club.service';\r\nimport { RouteNames } from '../../../../routes/route-names.enum';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useActions } from '../../../../hooks/useActions';\r\nimport { WheelContainerProps } from '../WheelContainer';\r\nimport useWheelSegments from './useWheelSegments';\r\nimport useWheelWinner from './useWheelWinner';\r\nimport useWheelRollsHistory from './useWheelRollsHistory';\r\nimport useWheelStages, { WheelStages } from './useWheelStages';\r\nimport useRequest from '../../../../hooks/useRequest';\r\n\r\nconst useWheelContainer = (\r\n  { clubBooks, handleSetBooksKey, displayWinner }: WheelContainerProps,\r\n  handeSetSpinsNumber: () => void,\r\n  recountTextSize: (segmentsNumber: number) => void,\r\n) => {\r\n  const { clubUrl } = useParams();\r\n  const navigate = useNavigate();\r\n  const { addNotification } = useActions();\r\n  const [rollCount, setRollCount] = useState(0);\r\n  const { isStart, isRoll, isFinish, setStage } = useWheelStages();\r\n  const { wheelSegments, shuffleSegments, removeWinnerSegment } = useWheelSegments(clubBooks, recountTextSize);\r\n  const { wheelRollsHistory, addToHistory } = useWheelRollsHistory();\r\n  const { winnerInfo, setWinner } = useWheelWinner({ clubBooks, displayWinner, wheelSegments, isFinish, addToHistory });\r\n\r\n  const confirmBook = useRequest('Post', async () => {\r\n    const response = await ClubService.confirmBook(clubUrl || '', winnerInfo?.book.id || '');\r\n    if (response.data === 'Success') {\r\n      addNotification('Книга успешно выбрана', 'success');\r\n      navigate(`${RouteNames.CLUB_PROFILE_BASE}${clubUrl}`);\r\n    }\r\n  });\r\n\r\n  const handleWinner = (segment: WheelSegment) => {\r\n    removeWinnerSegment(segment);\r\n    setStage(WheelStages.ROLL, false);\r\n    if (wheelSegments.length === 2) {\r\n      setStage(WheelStages.FINISH, true);\r\n    }\r\n    setWinner(segment);\r\n  };\r\n\r\n  const startRoll = () => {\r\n    handeSetSpinsNumber();\r\n    recountTextSize(wheelSegments.length);\r\n    shuffleSegments();\r\n    if (isStart) {\r\n      setStage(WheelStages.START, false);\r\n    }\r\n    setStage(WheelStages.ROLL, true);\r\n    setRollCount(value => value + 1);\r\n  };\r\n\r\n  //Функция для изменения ключа книг в списке книг\r\n  useEffect(() => {\r\n    handleSetBooksKey(rollCount);\r\n  }, [rollCount]);\r\n\r\n  return {\r\n    wheelStages: {\r\n      isStart,\r\n      isRoll,\r\n      isFinish,\r\n    },\r\n    wheelWinner: {\r\n      winnerInfo,\r\n      handleWinner,\r\n    },\r\n    hookData: {\r\n      wheelSegments,\r\n      wheelRollsHistory,\r\n      rollCount,\r\n      startRoll,\r\n      confirmBook,\r\n    },\r\n  };\r\n};\r\n\r\nexport default useWheelContainer;\r\n","import React, { FC, useEffect } from 'react';\r\nimport { Winwheel } from '../../../winwheel/winwheel';\r\nimport { WinWheelProps } from './models/win-wheel-props';\r\nimport './win-wheel.scss';\r\n\r\nconst WinWheel: FC<WinWheelProps> = (props) => {\r\n  const { sizeOptions, textOptions, animationOptions, renderOptions, segments, handleWinner } = props;\r\n\r\n  useEffect(() => {\r\n    const wheel = new Winwheel({\r\n      canvasId: 'wheelCanvas',\r\n      numSegments: segments.length,\r\n      segments: segments,\r\n      ...sizeOptions,\r\n      ...textOptions,\r\n      ...renderOptions,\r\n      animation: {\r\n        callbackFinished: handleWinner,\r\n        ...animationOptions\r\n      },\r\n    });\r\n    wheel.startAnimation();\r\n  }, []);\r\n\r\n  return <canvas id='wheelCanvas' width={sizeOptions?.canvasWidth || 400} height={sizeOptions?.canvasHeight || 400} />;\r\n};\r\n\r\nexport default WinWheel;\r\n","import React, { FC } from 'react';\r\nimport { WheelWinnerInfo } from '../../../../models/wheel-winner-info';\r\nimport './wheel-container-book-data.scss';\r\n\r\ninterface WheelContainerBookInfoProps {\r\n  winnerInfo: WheelWinnerInfo;\r\n}\r\n\r\nconst WheelContainerBookData: FC<WheelContainerBookInfoProps> = ({ winnerInfo, ...rest }) => {\r\n  return (\r\n    <div className=\"wheel-container-book-data\">\r\n      <div className=\"wheel-container-book-data__user\">\r\n        <span>Книга от</span> {winnerInfo.user.username}\r\n        <span className=\"wheel-container-book-data__emoji\">{winnerInfo.user.emoji}</span>\r\n      </div>\r\n      <div className=\"wheel-container-book-data__title\">{winnerInfo.book.title}</div>\r\n      <div className=\"wheel-container-book-data__authors\">{winnerInfo.book.authors.join(', ')}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WheelContainerBookData;\r\n","import React, { FC } from 'react';\r\nimport { WheelWinnerInfo } from '../../../../models/wheel-winner-info';\r\nimport WheelContainerBookData from '../WheelContainerBookData/WheelContainerBookData';\r\nimport './wheel-container-info.scss';\r\n\r\ninterface WheelContainerInfoProps {\r\n  readonly winnerInfo: WheelWinnerInfo | null;\r\n}\r\n\r\nconst WheelContainerInfo: FC<WheelContainerInfoProps> = ({ winnerInfo, ...rest }) => {\r\n  return (\r\n    <div className=\"wheel-container-info\">\r\n      {!winnerInfo && <div className=\"wheel-container-info__placeholder\">Нажмите на кнопку <span>Раскрутить</span></div>}\r\n      {winnerInfo && <WheelContainerBookData winnerInfo={winnerInfo} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WheelContainerInfo;\r\n","import React, { FC, FormEvent, Fragment } from 'react';\r\nimport MainButton from '../../../UI/MainButton/MainButton';\r\nimport InputText from '../../../UI/InputText/InputText';\r\nimport './wheel-container-controls.scss';\r\n\r\ninterface WheelContainerControlsProps {\r\n  readonly startRoll: () => void;\r\n  readonly confirmBook: (args: any) => void;\r\n  readonly handleSetTime: (event: FormEvent<HTMLInputElement>) => void;\r\n  readonly isRoll: boolean;\r\n  readonly isFinish: boolean;\r\n}\r\n\r\nconst WheelContainerControls: FC<WheelContainerControlsProps> = props => {\r\n  const { startRoll, confirmBook, isRoll, isFinish, handleSetTime } = props;\r\n  return (\r\n    <div className=\"wheel-container-controls\">\r\n      {!isFinish ? (\r\n        <Fragment>\r\n          <div className=\"wheel-container-controls__input-group\">\r\n            <label className=\"wheel-container-controls__input-label\" htmlFor=\"spin-time\">\r\n              Продолжительность вращения\r\n            </label>\r\n            <InputText\r\n              className=\"wheel-container-controls__input\"\r\n              name=\"spin-time\"\r\n              disabled={isRoll}\r\n              maxLength={2}\r\n              onChange={handleSetTime}\r\n            />\r\n          </div>\r\n          <MainButton className=\"wheel-container-controls__button\" disabled={isRoll} onClick={startRoll}>\r\n            Раскрутить\r\n          </MainButton>\r\n        </Fragment>\r\n      ) : (\r\n        <MainButton onClick={confirmBook} className=\"main-button--green\">\r\n          Подтвердить книгу\r\n        </MainButton>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WheelContainerControls;\r\n","const countSpinsNumber = (spinTime: number) => {\r\n  const rangeNumber = 2;\r\n  const divider = Math.floor(spinTime / rangeNumber)\r\n  const minNumber = spinTime - divider;\r\n  const maxNumber = spinTime + divider;\r\n  return Math.floor(Math.random() * (maxNumber - minNumber + 1)) + minNumber;\r\n}\r\n\r\nexport default countSpinsNumber;\r\n","const countTextSize = (segmentsNumber: number) => {\r\n  return Math.ceil(\r\n    18.61463 -\r\n      0.3442469 * segmentsNumber +\r\n      0.00358241 * Math.pow(segmentsNumber, 2) -\r\n      0.0000139929 * Math.pow(segmentsNumber, 3)\r\n  );\r\n};\r\n\r\nexport default countTextSize;\r\n","import { FormEvent, useEffect, useState } from 'react';\r\nimport countSpinsNumber from '../helpers/countSpinsNumber';\r\nimport countTextSize from '../helpers/countTextSize';\r\n\r\nconst useWheelSettings = () => {\r\n  const [spinTime, setSpinTime] = useState<number>(10);\r\n  const [spinsNumber, setSpinsNumber] = useState(10);\r\n  const [textSize, setTextSize] = useState(14);\r\n  const handleSetTime = (event: FormEvent<HTMLInputElement>) => {\r\n    const value = event.currentTarget.value.replace(/\\D/, '');\r\n    const intValue = parseInt(value);\r\n    if (intValue === 0) {\r\n      event.currentTarget.value = '1';\r\n      setSpinTime(1);\r\n    } else if (!intValue) {\r\n      event.currentTarget.value = '';\r\n      setSpinTime(10);\r\n    } else {\r\n      event.currentTarget.value = value;\r\n      setSpinTime(intValue);\r\n    }\r\n  };\r\n\r\n  const handeSetSpinsNumber = () => {\r\n    const spinsNumber = countSpinsNumber(spinTime);\r\n    setSpinsNumber(spinsNumber);\r\n  };\r\n\r\n  const recountTextSize = (segmentsNumber: number) => {\r\n    const newTextSize = countTextSize(segmentsNumber);\r\n    setTextSize(newTextSize);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handeSetSpinsNumber();\r\n  }, [spinTime]);\r\n\r\n  return { handleSetTime, handeSetSpinsNumber, recountTextSize, spinsNumber, spinTime, textSize };\r\n};\r\n\r\nexport default useWheelSettings;","import ClubService from '../../../services/club.service';\r\nimport { RouteNames } from '../../../routes/route-names.enum';\r\nimport { useActions } from '../../../hooks/useActions';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport useRequest from '../../../hooks/useRequest';\r\nimport { WheelWinnerInfo } from '../../../models/wheel-winner-info';\r\n\r\nconst useWheelHistory = (rollsHistory: WheelWinnerInfo[]) => {\r\n  const {clubUrl} = useParams();\r\n  const { addNotification } = useActions();\r\n  const navigate = useNavigate();\r\n  return useRequest('Page', async (index: number) => {\r\n    const response = await ClubService.confirmBook(clubUrl || '', rollsHistory[index].book.id || '');\r\n    if (response.data === 'Success') {\r\n      addNotification('Книга успешно выбрана', 'success');\r\n      navigate(`${RouteNames.CLUB_PROFILE_BASE}${clubUrl}`);\r\n    }\r\n  });\r\n};\r\n\r\nexport default useWheelHistory;","import React, { FC } from 'react';\r\nimport { WheelWinnerInfo } from '../../../models/wheel-winner-info';\r\nimport useWheelHistory from './useWheelHistory';\r\nimport TransparentButton from '../../UI/TransparentButton/TransparentButton';\r\nimport './wheel-history.scss';\r\n\r\ninterface WheelHistoryProps {\r\n  rollsHistory: WheelWinnerInfo[];\r\n}\r\n\r\nconst WheelHistory: FC<WheelHistoryProps> = ({ rollsHistory, ...rest }) => {\r\n  const confirmBook = useWheelHistory(rollsHistory);\r\n\r\n  return rollsHistory.length > 0 ? (\r\n    <div className=\"wheel-history\">\r\n      {rollsHistory.map((winner, index) => (\r\n        <div className=\"wheel-history__group\">\r\n          <div className=\"wheel-history__user\">\r\n            {index + 1}. Книга от <span className=\"wheel-history__username\">{winner.user.username}</span>{' '}\r\n            <span className=\"wheel-history__emoji\">{winner.user.emoji}</span>\r\n          </div>\r\n          <div className=\"wheel-history__book\">\r\n            <span className=\"wheel-history__title\">{winner.book.title}</span> - {winner.book.authors.join(', ')}\r\n          </div>\r\n          <div className=\"wheel-history__button\">\r\n            <TransparentButton onClick={() => confirmBook(index)}>Подтвердить книгу</TransparentButton>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  ) : (\r\n    <div className=\"wheel-history__placeholder\">\r\n      Вы ещё не крутили колесо\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WheelHistory;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import React, { FC } from 'react';\r\nimport { ClubBooks } from '../../../models/club-books';\r\nimport useWheelContainer from './hooks/useWheelContainer';\r\nimport WinWheel from '../../UI/WinWheel/WinWheel';\r\nimport WheelContainerInfo from './WheelContainerInfo/WheelContainerInfo';\r\nimport WheelContainerControls from './WheelContainerControls/WheelContainerControls';\r\nimport useWheelSettings from './hooks/useWheelSettings';\r\nimport { WheelAnimationOptions } from '../../UI/WinWheel/models/wheel-animation-options';\r\nimport TransparentButton from '../../UI/TransparentButton/TransparentButton';\r\nimport { useActions } from '../../../hooks/useActions';\r\nimport WheelHistory from '../WheelHistory/WheelHistory';\r\nimport { ReactComponent as DetailsSvg } from '../../../assets/svg/details.svg';\r\nimport { ReactComponent as TriangleSvg } from '../../../assets/svg/triangle.svg';\r\nimport './wheel-container.scss';\r\nimport useWindowDimensions from '../../../hooks/useDimensions';\r\n\r\nexport interface WheelContainerProps {\r\n  clubBooks: ClubBooks[];\r\n  displayWinner: (userIndex: number, bookIndex: number) => void;\r\n  handleSetBooksKey: (rollsCount: number) => void;\r\n}\r\n\r\nconst WheelContainer: FC<WheelContainerProps> = ({ clubBooks, displayWinner, handleSetBooksKey, ...rest }) => {\r\n  const { showModal } = useActions();\r\n  const { width } = useWindowDimensions();\r\n  const { handleSetTime, handeSetSpinsNumber, recountTextSize, spinsNumber, spinTime, textSize } = useWheelSettings();\r\n  const { hookData, wheelWinner, wheelStages } = useWheelContainer(\r\n    { clubBooks, handleSetBooksKey, displayWinner },\r\n    handeSetSpinsNumber,\r\n    recountTextSize,\r\n  );\r\n  const { wheelSegments, wheelRollsHistory, rollCount, startRoll, confirmBook } = hookData;\r\n  const { isStart, isRoll, isFinish } = wheelStages;\r\n  const { winnerInfo, handleWinner } = wheelWinner;\r\n\r\n  const wheelAnimationOptions: WheelAnimationOptions = !isStart\r\n    ? {\r\n      type: 'spinToStop',\r\n      spins: spinsNumber,\r\n      duration: spinTime,\r\n    }\r\n    : { spins: 0 };\r\n\r\n  if (width < 700) {\r\n    return (\r\n      <div className=\"wheel-container__placeholder\">\r\n        Ваш экран слишком мал для колеса\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='wheel-container'>\r\n      <div className='wheel-container__wheel'>\r\n        <div className='wheel-container__triangle'>\r\n          <TriangleSvg />\r\n        </div>\r\n        <WinWheel\r\n          key={`${wheelSegments.length === 0}-${rollCount}`}\r\n          handleWinner={handleWinner}\r\n          segments={wheelSegments}\r\n          sizeOptions={{ canvasWidth: 600, canvasHeight: 600, innerRadius: 40 }}\r\n          textOptions={{ textFontSize: textSize, textFontFamily: 'Inter', textFontWeight: 600 }}\r\n          renderOptions={{ lineWidth: 1, strokeStyle: '#737373' }}\r\n          animationOptions={wheelAnimationOptions}\r\n        />\r\n      </div>\r\n      <div className='wheel-container__side'>\r\n        <div className='wheel-container__info-wrapper'>\r\n          <WheelContainerInfo winnerInfo={winnerInfo} />\r\n          <WheelContainerControls\r\n            isRoll={isRoll}\r\n            confirmBook={confirmBook}\r\n            isFinish={isFinish}\r\n            startRoll={startRoll}\r\n            handleSetTime={handleSetTime}\r\n          />\r\n        </div>\r\n        <div className='wheel-container__history-button-wrapper'>\r\n          <TransparentButton\r\n            className='wheel-container__history-button'\r\n            onClick={() => showModal(<WheelHistory rollsHistory={wheelRollsHistory} />)}>\r\n            История\r\n            <DetailsSvg />\r\n          </TransparentButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WheelContainer;\r\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBack(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M19 11H7.14l3.63-4.36a1 1 0 1 0-1.54-1.28l-5 6a1.19 1.19 0 0 0-.09.15c0 .05 0 .08-.07.13A1 1 0 0 0 4 12a1 1 0 0 0 .07.36c0 .05 0 .08.07.13a1.19 1.19 0 0 0 .09.15l5 6A1 1 0 0 0 10 19a1 1 0 0 0 .64-.23a1 1 0 0 0 .13-1.41L7.14 13H19a1 1 0 0 0 0-2Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBack);\nexport default __webpack_public_path__ + \"static/media/back.81e990ec.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FC } from 'react';\r\nimport { ClubBooks } from '../../../models/club-books';\r\nimport ClubBooksCard from '../../UI/ClubBooksCard/ClubBooksCard';\r\n\r\ninterface WheelPageClubBooksProps {\r\n  clubBooks: ClubBooks[],\r\n  booksKey: string\r\n}\r\n\r\nconst WheelPageClubBooks: FC<WheelPageClubBooksProps> = ({clubBooks, booksKey, ...rest}) => {\r\n  return (\r\n    <div className=\"club-profile-books\">\r\n      {clubBooks.map((data, index) => (\r\n        <ClubBooksCard\r\n          key={`wheel-${data.user.url}-books`}\r\n          books={[...data.books]}\r\n          user={data.user}\r\n          booksKey={booksKey}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WheelPageClubBooks;","import { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { ClubBooks } from '../../../models/club-books';\r\nimport useRequest from '../../../hooks/useRequest';\r\nimport ClubService from '../../../services/club.service';\r\n\r\nconst useWheelPage = () => {\r\n  const { clubUrl } = useParams();\r\n  const [clubBooks, setClubBooks] = useState<ClubBooks[]>([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [booksKey, setBooksKey] = useState('');\r\n  const getClubBooks = useRequest('Page', async () => {\r\n    const response = await ClubService.getClubBooks(clubUrl || '');\r\n    setClubBooks(response.data);\r\n    setIsLoaded(true);\r\n  });\r\n\r\n  const displayWinner = (userIndex: number, bookIndex: number) => {\r\n    setClubBooks(clubBooks => {\r\n      clubBooks[userIndex].books[bookIndex].isDisabled = true;\r\n      return [...clubBooks];\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getClubBooks({});\r\n  }, []);\r\n\r\n  const handleSetBooksKey = (rollsCount: number) => {\r\n    setBooksKey(rollsCount.toString());\r\n  }\r\n\r\n  return { clubBooks, isLoaded, displayWinner, booksKey, handleSetBooksKey };\r\n};\r\n\r\nexport default useWheelPage;","var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgClose(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M16 2C8.2 2 2 8.2 2 16s6.2 14 14 14s14-6.2 14-14S23.8 2 16 2zm0 26C9.4 28 4 22.6 4 16S9.4 4 16 4s12 5.4 12 12s-5.4 12-12 12z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M21.4 23L16 17.6L10.6 23L9 21.4l5.4-5.4L9 10.6L10.6 9l5.4 5.4L21.4 9l1.6 1.6l-5.4 5.4l5.4 5.4z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgClose);\nexport default __webpack_public_path__ + \"static/media/close.d440a976.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Fragment } from 'react';\r\nimport WheelContainer from '../../Containers/WheelContainer/WheelContainer';\r\nimport WheelPageClubBooks from '../../Containers/WheelPageClubBooks/WheelPageClubBooks';\r\nimport useWheelPage from './useWheelPage';\r\nimport './wheel-page.scss';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { RouteNames } from '../../../routes/route-names.enum';\r\nimport { ReactComponent as BackSvg } from '../../../assets/svg/back.svg';\r\nimport PageLoader from '../../UI/PageLoader/PageLoader';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst WheelPage = () => {\r\n  const { clubUrl } = useParams();\r\n  const { clubBooks, isLoaded, displayWinner, handleSetBooksKey, booksKey } = useWheelPage();\r\n\r\n  return isLoaded ? (\r\n    <Fragment>\r\n      <Helmet>\r\n        <title>Книжное колесо</title>\r\n      </Helmet>\r\n      <div className=\"wheel-page\">\r\n        <div className=\"wheel-page__back-wrapper\">\r\n          <Link className=\"wheel-page__back\" to={`${RouteNames.CLUB_PROFILE_BASE}${clubUrl}`}>\r\n            <BackSvg />\r\n            Назад\r\n          </Link>\r\n        </div>\r\n        <WheelContainer clubBooks={clubBooks} handleSetBooksKey={handleSetBooksKey} displayWinner={displayWinner} />\r\n        <WheelPageClubBooks clubBooks={clubBooks} booksKey={booksKey} />\r\n      </div>\r\n    </Fragment>\r\n\r\n  ) : (\r\n    <div className=\"wheel-page__loader\">\r\n      <PageLoader />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WheelPage;\r\n","import React from 'react';\r\n\r\nconst UserProfileReviews = () => {\r\n  return (\r\n    <div>\r\n      Reviews\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfileReviews;","import { useClubProfileContext } from '../../Pages/ClubProfilePage/ClubProfilePage';\r\nimport { useEffect, useState } from 'react';\r\nimport useRequest from '../../../hooks/useRequest';\r\nimport ClubService from '../../../services/club.service';\r\nimport { BookData } from '../../../models/book-data';\r\n\r\nconst useClubProfileHistory = () => {\r\n  const [chosenBooksHistory, setChosenBooksHistory] = useState<BookData[]>([]);\r\n  const { clubUrl } = useClubProfileContext();\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n  const fetchHistory = useRequest('Tab', async () => {\r\n    const response = await ClubService.getChosenBooksHistory(clubUrl);\r\n    setChosenBooksHistory(response.data);\r\n    setIsLoaded(true)\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchHistory({});\r\n  }, [clubUrl]);\r\n\r\n  return {chosenBooksHistory, isLoaded, clubUrl};\r\n};\r\n\r\nexport default useClubProfileHistory;","import React, { FC } from 'react';\r\nimport useClubProfileHistory from './useClubProfileHistory';\r\nimport BookCard from '../../UI/BookCard/BookCard';\r\nimport './club-profile-history.scss';\r\n\r\ninterface ClubProfileHistoryProps {}\r\n\r\nconst ClubProfileHistory: FC<ClubProfileHistoryProps> = () => {\r\n  const { chosenBooksHistory, isLoaded, clubUrl } = useClubProfileHistory();\r\n  //TODO поменять на инфинайт скролл\r\n  return (\r\n    <div className=\"club-profile-history\">\r\n      {isLoaded &&\r\n        chosenBooksHistory.length !== 0 &&\r\n        chosenBooksHistory.map((book, index) => (\r\n          <BookCard\r\n            key={`history-${clubUrl}-meeting-${index}`}\r\n            isClubHistory\r\n            bookData={{ meetingNumber: index + 1, ...book }}\r\n          />\r\n        ))}\r\n      {isLoaded && chosenBooksHistory.length === 0 && <div>Собраний ещё не было</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClubProfileHistory;\r\n","import { useEffect, useState } from 'react';\r\nimport { BasicUserInfo } from '../../../models/basic-user-info';\r\nimport { useClubProfileContext } from '../../Pages/ClubProfilePage/ClubProfilePage';\r\nimport useRequest from '../../../hooks/useRequest';\r\nimport ClubService from '../../../services/club.service';\r\n\r\nconst useClubProfileMembers = () => {\r\n  const [usersInfo, setUsersInfo] = useState<BasicUserInfo[]>([]);\r\n  const { clubUrl } = useClubProfileContext();\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const fetchMembers = useRequest('Tab', async () => {\r\n    const response = await ClubService.getClubMembers(clubUrl);\r\n    setUsersInfo(response.data);\r\n    setIsLoaded(true);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchMembers({});\r\n  }, [clubUrl]);\r\n\r\n  return { usersInfo, isLoaded, clubUrl };\r\n};\r\n\r\nexport default useClubProfileMembers;","import React, { FC } from 'react';\r\nimport { BasicUserInfo } from '../../../models/basic-user-info';\r\nimport { Link } from 'react-router-dom';\r\nimport { RouteNames } from '../../../routes/route-names.enum';\r\nimport Avatar from '../Avatar/Avatar';\r\nimport './member-card.scss';\r\n\r\ninterface MemberCardProps {\r\n  userInfo: BasicUserInfo;\r\n  className?: string;\r\n}\r\n\r\nconst MemberCard: FC<MemberCardProps> = ({ userInfo, className, ...rest }) => {\r\n  const { username, url, emoji, color } = userInfo;\r\n  const classString = className ? `member-card ${className}` : 'member-card';\r\n\r\n  return (\r\n    <Link to={`${RouteNames.USER_PROFILE_BASE}${url}`} className={classString}>\r\n      <div className=\"member-card__content\">\r\n        <div className=\"member-card__avatar\">\r\n          <Avatar color={color} emoji={emoji} className=\"avatar--big\" />\r\n        </div>\r\n        <span className=\"member-card__name\">{username}</span>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default MemberCard;","import React, { FC } from 'react';\r\nimport useClubProfileMembers from './useClubProfileMembers';\r\nimport MemberCard from '../../UI/MemberCard/MemberCard';\r\nimport './club-profile-members.scss';\r\n\r\ninterface ClubProfileMembersProps {}\r\n\r\nconst ClubProfileMembers: FC<ClubProfileMembersProps> = () => {\r\n  const { usersInfo, clubUrl, isLoaded } = useClubProfileMembers();\r\n\r\n  return (\r\n    <div className=\"club-profile-members\">\r\n      {isLoaded && usersInfo.length !== 0 &&\r\n        usersInfo.map((user, index) => (\r\n          <MemberCard\r\n            className=\"club-profile-members__card\"\r\n            key={`members-${clubUrl}-meeting-${index}`}\r\n            userInfo={user}\r\n          />\r\n        ))}\r\n      {isLoaded && usersInfo.length === 0 && <div>В клубе нет участников</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClubProfileMembers;\r\n","import { useEffect, useState } from 'react';\r\nimport { useClubProfileContext } from '../../Pages/ClubProfilePage/ClubProfilePage';\r\nimport useRequest from '../../../hooks/useRequest';\r\nimport ClubService from '../../../services/club.service';\r\n\r\nconst useClubProfileRules = () => {\r\n  const [clubRules, setClubRules] = useState<string>('');\r\n  const { clubUrl } = useClubProfileContext();\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const fetchClubRules = useRequest('Tab',async () => {\r\n    const response = await ClubService.getClubRules(clubUrl);\r\n    setClubRules(response.data);\r\n    setIsLoaded(true);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchClubRules({});\r\n  }, [clubUrl]);\r\n\r\n  return { clubRules, isLoaded };\r\n};\r\n\r\nexport default useClubProfileRules;","import React from 'react';\r\nimport useClubProfileRules from './useClubProfileRules';\r\nimport './club-profile-rules.scss';\r\n\r\nconst ClubProfileRules = () => {\r\n  const { clubRules, isLoaded } = useClubProfileRules();\r\n\r\n  return (\r\n    <div className=\"club-profile-rules\">\r\n      {isLoaded && clubRules && <p className=\"club-profile-rules__text\">{clubRules}</p>}\r\n      {isLoaded && !clubRules && <div>Пусто</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClubProfileRules;\r\n","import React, { FC } from 'react';\r\n\r\ninterface ClubProfileReviewsProps {\r\n\r\n}\r\n\r\nconst ClubProfileReviews: FC<ClubProfileReviewsProps> = () => {\r\n  return (\r\n    <div>\r\n      Reviews\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClubProfileReviews;","import React from 'react';\r\nimport './bubble.scss';\r\nimport { useAppSelector } from '../../../hooks/useAppSelector';\r\nimport { useActions } from '../../../hooks/useActions';\r\n\r\nconst Bubble = () => {\r\n  const { isShow, reactComponent, wrapperClass } = useAppSelector(state => state.bubble);\r\n  const { closeBubble } = useActions();\r\n  const classString = wrapperClass ? `bubble ${wrapperClass}` : 'bubble';\r\n\r\n  if (!isShow) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"bubble__background\" onClick={closeBubble}>\r\n      <div className={classString}>\r\n        {reactComponent}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bubble;\r\n","import React, { FC, Fragment } from 'react';\r\nimport { Routes, Route, Navigate, useLocation } from 'react-router-dom';\r\nimport { RouteNames } from '../../routes/route-names.enum';\r\nimport { useAppSelector } from '../../hooks/useAppSelector';\r\nimport UserProfilePage from '../Pages/UserProfilePage/UserProfilePage';\r\nimport LoginPage from '../Pages/LoginPage/LoginPage';\r\nimport RegisterPage from '../Pages/RegisterPage/RegisterPage';\r\nimport RemoveTrailingSlash from './RemoveTrailingSlash';\r\nimport Navbar from '../Containers/Navbar/Navbar';\r\nimport RandomBookPage from '../Pages/RandomBookPage/RandomBookPage';\r\nimport ClubProfilePage from '../Pages/ClubProfilePage/ClubProfilePage';\r\nimport UserProfileBooks from '../Containers/UserProfileBooks/UserProfileBooks';\r\nimport ClubProfileBooks from '../Containers/ClubProfileBooks/ClubProfileBooks';\r\nimport '../../styles/app-layout.scss';\r\nimport '../../styles/auth-pages.scss';\r\nimport WheelPage from '../Pages/WheelPage/WheelPage';\r\nimport Scrollbars from 'react-custom-scrollbars-2';\r\nimport UserProfileReviews from '../Containers/UserProfileReviews/UserProfileReviews';\r\nimport ClubProfileHistory from '../Containers/ClubProfileHistory/ClubProfileHistory';\r\nimport ClubProfileMembers from '../Containers/ClubProfileMembers/ClubProfileMembers';\r\nimport ClubProfileRules from '../Containers/ClubProfileRules/ClubProfileRules';\r\nimport ClubProfileReviews from '../Containers/ClubProfileReviews/ClubProfileReviews';\r\nimport Bubble from '../Containers/Bubble/Bubble';\r\n\r\nconst AppRouter: FC = () => {\r\n  const { isAuth, userData } = useAppSelector(state => state.auth);\r\n  const location = useLocation();\r\n  const cutPath = location.pathname.substring(0, location.pathname.lastIndexOf('/'));\r\n\r\n  return (\r\n    <Fragment>\r\n      <RemoveTrailingSlash />\r\n      {isAuth && userData ? (\r\n        <div className=\"app-layout\">\r\n          <Navbar />\r\n          <Bubble />\r\n          <main className=\"app-layout__page\">\r\n            <Scrollbars autoHide={true} renderView={props => <div {...props} className=\"app-layout__wrapper\" />}>\r\n              <Routes>\r\n                <Route path={RouteNames.USER_PROFILE} element={<UserProfilePage key={cutPath} />}>\r\n                  <Route path={RouteNames.USER_PROFILE_BOOKS} element={<UserProfileBooks />} />\r\n                  <Route path={RouteNames.USER_PROFILE_REVIEWS} element={<UserProfileReviews />} />\r\n                </Route>\r\n                <Route path={RouteNames.CLUB_PROFILE} element={<ClubProfilePage key={cutPath} />}>\r\n                  <Route path={RouteNames.CLUB_PROFILE_BOOKS} element={<ClubProfileBooks />} />\r\n                  <Route path={RouteNames.CLUB_PROFILE_HISTORY} element={<ClubProfileHistory />} />\r\n                  <Route path={RouteNames.CLUB_PROFILE_MEMBERS} element={<ClubProfileMembers />} />\r\n                  <Route path={RouteNames.CLUB_PROFILE_RULES} element={<ClubProfileRules />} />\r\n                  <Route path={RouteNames.CLUB_PROFILE_REVIEWS} element={<ClubProfileReviews />} />\r\n                </Route>\r\n                <Route path={RouteNames.CLUB_WHEEL} element={<WheelPage />} />\r\n                <Route path={RouteNames.RANDOM_BOOK} element={<RandomBookPage />} />\r\n                <Route path=\"*\" element={<Navigate to={`${RouteNames.USER_PROFILE_BASE}${userData.url}/`} />} />\r\n              </Routes>\r\n            </Scrollbars>\r\n          </main>\r\n        </div>\r\n      ) : (\r\n        <div className=\"auth-pages\">\r\n          <Routes>\r\n            <Route path={RouteNames.LOGIN} element={<LoginPage />} />\r\n            <Route path={RouteNames.REGISTER} element={<RegisterPage />} />\r\n            <Route path=\"*\" element={<Navigate to={RouteNames.REGISTER} />} />\r\n          </Routes>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { FC } from 'react';\r\nimport { NotificationType } from '../../../store/reducers/notifications/types';\r\nimport './notification.scss';\r\n\r\ninterface NotificationProps {\r\n  message: string;\r\n  notificationType: NotificationType;\r\n}\r\n\r\nconst Notification: FC<NotificationProps> = ({ message, notificationType, ...rest }) => {\r\n  return (\r\n    <div className={`notification notification--${notificationType}`}>\r\n      <div className=\"notification__line\" />\r\n      <span>{message}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { FC } from 'react';\r\nimport { useAppSelector } from '../../../hooks/useAppSelector';\r\nimport Notification from '../../UI/Notification/Notification';\r\nimport './notification-container.scss';\r\n\r\nconst NotificationsContainer: FC = () => {\r\n  const notifications = useAppSelector(state => state.notifications.notifications);\r\n\r\n  return (\r\n    <div className=\"notification-container\">\r\n      {notifications.map(notification => (\r\n        <Notification\r\n          key={`notification-${notification.id}`}\r\n          message={notification.message}\r\n          notificationType={notification.notificationType}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationsContainer;\r\n","import React from 'react';\r\nimport { useAppSelector } from '../../../hooks/useAppSelector';\r\nimport TransparentButton from '../../UI/TransparentButton/TransparentButton';\r\nimport { ReactComponent as CloseSvg } from '../../../assets/svg/close.svg';\r\nimport { useActions } from '../../../hooks/useActions';\r\nimport './modal.scss';\r\nimport Scrollbars from 'react-custom-scrollbars-2';\r\n\r\nconst Modal = () => {\r\n  const { isShow, reactComponent } = useAppSelector(state => state.modal);\r\n  const { closeModal } = useActions();\r\n  if (!isShow) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className='modal-bg' onClick={closeModal}>\r\n      <Scrollbars autoHide\r\n                  renderThumbVertical={props => <div {...props} className='modal-container__scrollbar' />}\r\n                  renderThumbHorizontal={props => <div {...props} className='modal-container__scrollbar' />}\r\n                  renderView={props => <div {...props} className='modal-container__wrapper' />}>\r\n        <div className='modal-container' onClick={e => e.stopPropagation()}>\r\n          {reactComponent}\r\n          <TransparentButton className='modal-container__close' onClick={closeModal}>\r\n            <CloseSvg />\r\n          </TransparentButton>\r\n        </div>\r\n      </Scrollbars>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { FC } from 'react';\r\nimport AppRouter from './components/AppRouter/AppRouter';\r\nimport './index.scss';\r\nimport NotificationsContainer from './components/Containers/NotificationsContainer/NotificationsContainer';\r\nimport Modal from './components/Containers/Modal/Modal';\r\n\r\nconst App: FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <AppRouter />\r\n      <NotificationsContainer />\r\n      <Modal />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { AuthAction, AuthActionEnum, AuthState } from './types';\r\n\r\nconst isAuth = JSON.parse(localStorage.getItem('isAuth') || '{}');\r\nconst userData = JSON.parse(localStorage.getItem('userData') || '{}');\r\n\r\nconst initialState: AuthState = {\r\n  isAuth: typeof isAuth === 'object' ? false : isAuth,\r\n  userData: Object.keys(userData).length === 0 ? null : userData,\r\n  // accessToken: null\r\n}\r\n\r\nexport default function authReducer(state = initialState, action: AuthAction): AuthState {\r\n  switch (action.type) {\r\n    case AuthActionEnum.SET_IS_AUTH:\r\n      return {...state, isAuth: action.payload}\r\n\r\n    case AuthActionEnum.SET_USER_DATA:\r\n      return {...state, userData: action.payload}\r\n\r\n    // case AuthActionEnum.SET_ACCESS_TOKEN:\r\n    //   return {...state, accessToken: action.payload}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { NotificationsActionsEnum, NotificationsState } from './types';\r\nimport { NotificationsAction } from './types';\r\n\r\nconst initialState: NotificationsState = {\r\n  notifications: [],\r\n};\r\n\r\nexport default function NotificationsReducer(state = initialState, action: NotificationsAction): NotificationsState {\r\n  switch (action.type) {\r\n    case NotificationsActionsEnum.SET_NOTIFICATION:\r\n      return {\r\n        notifications: [\r\n          ...state.notifications.filter(notification => notification.id !== action.payload.id),\r\n          action.payload,\r\n        ],\r\n      };\r\n    case NotificationsActionsEnum.DELETE_NOTIFICATION:\r\n      return {\r\n        notifications: state.notifications.filter(notification => notification.id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { ThemeAction, ThemeActionEnum, ThemeState } from './types';\r\n\r\nconst localStorageThemeStyle = localStorage.getItem('themeStyle');\r\nconst themeStyle =\r\n  localStorageThemeStyle === 'light' || localStorageThemeStyle === 'dark' ? localStorageThemeStyle : 'light';\r\n\r\nconst initialState: ThemeState = {\r\n  themeStyle: themeStyle,\r\n};\r\n\r\nexport default function themeReducer(state = initialState, action: ThemeAction): ThemeState {\r\n  switch (action.type) {\r\n    case ThemeActionEnum.SET_THEME:\r\n      return { ...state, themeStyle: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { ModalAction, ModalActionEnum, ModalState } from './types';\r\n\r\nconst initialState: ModalState = {\r\n  isShow: false,\r\n  reactComponent: null\r\n}\r\n\r\nexport default function ModalReducer(state = initialState, action: ModalAction) {\r\n  switch (action.type) {\r\n    case ModalActionEnum.CLOSE_MODAL:\r\n      return initialState;\r\n    case ModalActionEnum.SHOW_MODAL:\r\n      return {isShow: true, reactComponent: action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n}","import { LoadingTabAction, LoadingTabEnum, LoadingTabState } from './types';\r\n\r\nconst initialState: LoadingTabState = {\r\n  isLoadingTab: false,\r\n};\r\n\r\nexport default function loadingTabReducer(state = initialState, action: LoadingTabAction): LoadingTabState {\r\n  switch (action.type) {\r\n    case LoadingTabEnum.SET_LOADING_TAB_TRUE:\r\n      return { isLoadingTab: action.payload };\r\n    case LoadingTabEnum.SET_LOADING_TAB_FALSE:\r\n      return { isLoadingTab: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { LoadingPageAction, LoadingPageEnum, LoadingPageState } from './types';\r\n\r\nconst initialState: LoadingPageState = {\r\n  isLoadingPage: false,\r\n};\r\n\r\nexport default function loadingPageReducer(state = initialState, action: LoadingPageAction): LoadingPageState {\r\n  switch (action.type) {\r\n    case LoadingPageEnum.SET_LOADING_PAGE_TRUE:\r\n      return { isLoadingPage: action.payload };\r\n    case LoadingPageEnum.SET_LOADING_PAGE_FALSE:\r\n      return { isLoadingPage: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { LoadingPostAction, LoadingPostEnum, LoadingPostState } from './types';\r\n\r\nconst initialState: LoadingPostState = {\r\n  isLoadingPost: false,\r\n};\r\n\r\nexport default function loadingPostReducer(state = initialState, action: LoadingPostAction): LoadingPostState {\r\n  switch (action.type) {\r\n    case LoadingPostEnum.SET_LOADING_POST_TRUE:\r\n      return { isLoadingPost: action.payload };\r\n    case LoadingPostEnum.SET_LOADING_POST_FALSE:\r\n      return { isLoadingPost: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { BubbleAction, BubbleActionEnum, BubbleState } from './types';\r\n\r\nconst initialState: BubbleState = {\r\n  isShow: false,\r\n  reactComponent: null,\r\n  wrapperClass: null,\r\n};\r\n\r\nexport default function BubbleReducer(state = initialState, action: BubbleAction) {\r\n  switch (action.type) {\r\n    case BubbleActionEnum.CLOSE_BUBBLE:\r\n      return initialState;\r\n    case BubbleActionEnum.SHOW_BUBBLE:\r\n      return { isShow: true, reactComponent: action.payload.reactComponent, wrapperClass: action.payload.wrapperClass };\r\n    default:\r\n      return state;\r\n  }\r\n}","import auth from './auth';\r\nimport notifications from './notifications';\r\nimport theme from './theme';\r\nimport modal from './modal';\r\nimport loadingTab from './loading-tab';\r\nimport loadingPage from './loading-page';\r\nimport loadingModal from './loading-page';\r\nimport loadingPost from './loading-post';\r\nimport bubble from './bubble';\r\n\r\nconst reducers =  {\r\n  auth,\r\n  notifications,\r\n  theme,\r\n  modal,\r\n  loadingTab,\r\n  loadingPage,\r\n  loadingModal,\r\n  loadingPost,\r\n  bubble,\r\n};\r\n\r\nexport default reducers;","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}